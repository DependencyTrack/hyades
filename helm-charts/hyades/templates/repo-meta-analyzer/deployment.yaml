---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{- include "hyades.repoMetaAnalyzerSelectorLabels" . }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "hyades.repoMetaAnalyzerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "hyades.repoMetaAnalyzerSelectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        {{- with .Values.repoMetaAnalyzer.annotations }}
          {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: {{ include "hyades.repoMetaAnalyzerName" . }}
        image: {{ include "hyades.repoMetaAnalyzerImage" . }}
        imagePullPolicy: {{ .Values.repoMetaAnalyzer.image.pullPolicy }}
        {{- with .Values.repoMetaAnalyzer.command }}
        command: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.repoMetaAnalyzer.args }}
        args: {{ toYaml . | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.repoMetaAnalyzer.resources | nindent 10 }}
        env:
        - name: QUARKUS_DATASOURCE_JDBC_URL
          value: {{ .Values.common.database.jdbcUrl | quote }}
        {{- with .Values.common.database.username }}
        - name: QUARKUS_DATASOURCE_USERNAME
          value: {{ . | quote }}
        {{- end }}
        {{- with .Values.common.database.password }}
        - name: QUARKUS_DATASOURCE_PASSWORD
          value: {{ . | quote }}
        {{- end }}
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.common.kafka.bootstrapServers | quote }}
        {{- with .Values.common.kafka.topicPrefix }}
        - name: API_TOPIC_PREFIX
          value: {{ . | quote }}
        {{- end }}
        {{- range $k, $v := .Values.repoMetaAnalyzer.env }}
        - name: {{ $k }}
          value: {{ $v | quote }}
        {{- end }}
        {{- with .Values.repoMetaAnalyzer.envFrom }}
        envFrom: {{ toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: web
          containerPort: 8091
          protocol: TCP
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /q/health/live
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /q/health/ready
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5