---
common:
  nameOverride: ""
  fullnameOverride: ""
  image:
    registry: ghcr.io
    pullSecrets: []
  database:
    jdbcUrl: ""
    username: ""
    password: ""
  kafka:
    bootstrapServers: ""
    topicPrefix: ""
  secretKey:
    # -- Whether the chart should generate a secret key upon deployment.
    createSecret: false
    # -- Use the secret key defined in an existing secret.
    existingSecretName: ""

apiServer:
  enabled: false
  replicaCount: 1
  annotations: {}
  image:
    repository: dependencytrack/hyades-apiserver
    tag: latest
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: "2"
      memory: 4Gi
    limits:
      cpu: "4"
      memory: 8Gi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
  service:
    type: ClusterIP
    nodePort: ~
  serviceMonitor:
    enabled: false
    namespace: monitoring
    scrapeInternal: 15s
    scrapeTimeout: 30s
  # -- Grace period for pod termination in seconds.
  # Should always be equal to or greater than the sum of `_DRAIN_TIMEOUT` configurations to ensure graceful shutdown.
  # Refer to https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/ for details.
  terminationGracePeriodSeconds: 60
  ingress:
    enabled: false
    annotations: {}
    hostname: "example.com"

frontend:
  enabled: false
  replicaCount: 1
  annotations: {}
  image:
    repository: dependencytrack/hyades-frontend
    tag: 4.9.1
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: 150m
      memory: 64Mi
    limits:
      cpu: 500m
      memory: 128Mi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
  service:
    type: ClusterIP
    nodePort: ~
  ingress:
    enabled: false
    annotations: {}
    hostname: "example.com"
  apiBaseUrl: ""

mirrorService:
  enabled: true
  # -- Number of replicas. Should be <= 1.
  replicaCount: 1
  annotations: {}
  image:
    repository: dependencytrack/hyades-mirror-service
    tag: latest-native
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 2Gi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5

notificationPublisher:
  enabled: true
  replicaCount: 1
  annotations: {}
  image:
    repository: dependencytrack/hyades-notification-publisher
    tag: latest-native
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 2Gi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5

repoMetaAnalyzer:
  annotations: {}
  replicaCount: 1
  image:
    repository: dependencytrack/hyades-repository-meta-analyzer
    tag: latest-native
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 2Gi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5

vulnAnalyzer:
  annotations: {}
  replicaCount: 1
  image:
    repository: dependencytrack/hyades-vulnerability-analyzer
    tag: latest-native
    pullPolicy: Always
  command: []
  args: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: "2"
      memory: 2Gi
  persistentVolume:
    enabled: false
    className: ""
    size: 2Gi
  extraEnv: {}
  extraEnvFrom: []
  probes:
    liveness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
    readiness:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 5
