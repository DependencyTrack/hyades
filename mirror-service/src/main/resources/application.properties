## Quarkus
#
quarkus.application.name=hyades-mirror-service
quarkus.http.port=8093
# Hibernate is inherited from the commons module,
# but the mirror service does not need database access.
quarkus.hibernate-orm.enabled=false
# Repository classes try to inject EntityManager which
# is not available when Hibernate is disabled.
quarkus.arc.exclude-types=org.hyades.persistence.*

## Native Image
#
quarkus.native.additional-build-args=--initialize-at-run-time=org.apache.hc.client5.http.impl.auth.NTLMEngineImpl

## Kafka
#
%dev.kafka.bootstrap.servers=localhost:9092
quarkus.kafka.snappy.enabled=true
kafka.compression.type=snappy
# Quarkus' ClassLoader black magic doesn't play well with
# native libraries like the one required by Snappy.
# It's causing failures when multiple tests with different
# TestProfile are executed in the same test run.
%test.quarkus.kafka.snappy.enabled=false
%test.kafka.compression.type=none

## Kafka Streams
#
api.topic.prefix=
quarkus.kafka-streams.application-id=${api.topic.prefix}hyades-mirror-service
quarkus.kafka-streams.application-server=localhost:8093
quarkus.kafka-streams.topics=\
  ${api.topic.prefix}dtrack.vulnerability,\
  ${api.topic.prefix}dtrack.vulnerability.digest,\
  ${api.topic.prefix}dtrack.vulnerability.mirror.command,\
  ${api.topic.prefix}dtrack.vulnerability.mirror.state
%dev.quarkus.kafka.devservices.enabled=false
quarkus.log.category."org.apache.kafka".level=WARN
kafka-streams.num.stream.threads=3
kafka-streams.commit.interval.ms=1000

## Dev Services for Kafka
#
quarkus.kafka.devservices.image-name=docker.redpanda.com/vectorized/redpanda:v23.1.10
quarkus.kafka.devservices.topic-partitions."dtrack.vulnerability.mirror.command"=1
quarkus.kafka.devservices.topic-partitions."dtrack.vulnerability.mirror.state"=1
quarkus.kafka.devservices.topic-partitions."dtrack.vulnerability.digest"=1
quarkus.kafka.devservices.topic-partitions."dtrack.vulnerability"=1
quarkus.kafka.devservices.topic-partitions."dtrack.notification.datasource-mirroring"=1

mirror.datasource.nvd.api-key=
mirror.datasource.nvd.num-threads=4
mirror.datasource.github.api-key=
mirror.datasource.github.base-url=
mirror.datasource.github.alias-sync-enabled=false
mirror.datasource.osv.alias-sync-enabled=false
mirror.datasource.osv.base-url=https://osv-vulnerabilities.storage.googleapis.com

#Changes for helm chart based deployment
quarkus.kubernetes-client.devservices.enabled=false
quarkus.kubernetes.replicas=1
quarkus.kubernetes.env.vars.KAFKA_BOOTSTRAP_SERVERS=host.minikube.internal:9093
quarkus.helm.values.image-name.property=image
quarkus.helm.values.image-name.value=ghcr.io/dependencytrack/hyades-mirror-service:1.0.0-snapshot

# for environments that need ssl enabled below properties need to be passed and kafka ssl enabled needs to be set to true
# quarkus.kubernetes.env.vars.KAFKA_SECURITY_PROTOCOL=SSL
# quarkus.kubernetes.env.vars.QUARKUS_KAFKA_STREAMS_SSL_TRUSTSTORE_LOCATION=
# quarkus.kubernetes.env.vars.QUARKUS_KAFKA_STREAMS_SSL_TRUSTSTORE_PASSWORD=
quarkus.kubernetes.env.vars.KAFKA_SSL_ENABLED=false

quarkus.helm.map-system-properties=false
quarkus.kubernetes.env.vars.API_TOPIC_PREFIX=
quarkus.kubernetes.env.vars.QUARKUS_LOG_CATEGORY_ORG_APACHE_KAFKA_LEVEL=WARN
#for environments which need proxy quarkus proxy needs to be set.
quarkus.kubernetes.env.vars.QUARKUS_REST_CLIENT_PROXY_ADDRESS=
quarkus.kubernetes.env.vars.QUARKUS_REST_CLIENT_NON_PROXY_HOSTS=

#resource restrictions
quarkus.kubernetes.resources.requests.memory=1Gi
quarkus.kubernetes.resources.requests.cpu=1
quarkus.kubernetes.resources.limits.memory=8Gi
quarkus.kubernetes.resources.limits.cpu=1
kafka-streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
