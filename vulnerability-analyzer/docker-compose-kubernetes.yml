version: "3"

services:

  postgres-kube:
    image: postgres:15-alpine
    container_name: dt-postgres-kubernetes
    environment:
      POSTGRES_DB: "dtrack"
      POSTGRES_USER: "dtrack"
      POSTGRES_PASSWORD: "dtrack"
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "postgres-data-kube:/var/lib/postgresql/data"
      - "./commons/src/main/resources/migrations/postgres:/docker-entrypoint-initdb.d"
    restart: unless-stopped

  redpanda-kube:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.8
    container_name: dt-redpanda-kubernetes
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://dt-redpanda-kubernetes:29092,OUTSIDE://host.minikube.internal:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://dt-redpanda-kubernetes:28082,OUTSIDE://localhost:8082
    ports:
      # Kafka API
      - "9092:9092"
    volumes:
      - "redpanda-data-kube:/var/lib/redpanda/data"
    restart: unless-stopped

  redpanda-init-kube:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.8
    container_name: dt-redpanda-init-kubernetes
    depends_on:
      - redpanda-kube
    entrypoint: "/bin/bash"
    command: "/tmp/create-topics.sh"
    user: "0" # Ensure user can read create-topics.sh
    environment:
      REDPANDA_BROKERS: "dt-redpanda-kubernetes:29092"
      NOTIFICATION_TOPICS_PARTITIONS: "3"
      NOTIFICATION_TOPICS_RETENTION_MS: "43200000" # 12h
      REPO_META_ANALYSIS_TOPICS_PARTITIONS: "3"
      REPO_META_ANALYSIS_TOPICS_RETENTION_MS: "43200000" # 12h
      VULN_ANALYSIS_TOPICS_PARTITIONS: "3"
      VULN_ANALYSIS_TOPICS_RETENTION_MS: "43200000" # 12h
    volumes:
      - "./scripts/create-topics.sh:/tmp/create-topics.sh:ro"
    restart: on-failure

  redpanda-console-kube:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    container_name: dt-redpanda-console-kubernetes
    depends_on:
      - redpanda
    environment:
      KAFKA_BROKERS: "dt-redpanda-kubernetes:29092"
    ports:
      - "127.0.0.1:28080:8080"
    restart: unless-stopped


volumes:
  postgres-data-kube: {}
  redpanda-data-kube: {}
