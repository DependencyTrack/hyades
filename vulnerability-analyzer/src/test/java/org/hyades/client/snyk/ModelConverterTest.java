package org.hyades.client.snyk;

import org.hyades.proto.vuln.v1.Source;
import org.hyades.proto.vuln.v1.Vulnerability;
import org.hyades.resolver.CweResolver;
import org.junit.jupiter.api.Test;

import java.util.Collections;
import java.util.List;

import static org.hyades.client.snyk.ModelConverter.convert;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class ModelConverterTest {

    @Test
    public void testModelConverter() {

        Issue issue = new Issue(
                "", "", "", "", "2022-11-21T19:50:45Z", "2021-04-14T20:04:52Z",
                List.of(new Problem("id1", "CVE", "test@test.com"), new Problem("CWE-100", "CWE", "")), new Slots(Collections.EMPTY_LIST, "2023-01-02T20:04:52Z"),
                List.of(new Severity(SeveritySource.SNYK, "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", 7.3f, "HIGH")),
                List.of(new Coordinate(List.of(new Representation("", new Package("maven", "", "woodstox-core", "5.0.0", "pkg:maven/com.fasterxml.woodstox/woodstox-core@5.0.0")))))
        );
        PageData<Issue> pageData = new PageData<>("test-id", "", issue);

        Vulnerability vulnerability = convert(CweResolver.getInstance(), SeveritySource.SNYK, pageData);
        assertNotNull(vulnerability);
        assertEquals("test-id", vulnerability.getId());
        assertNotNull(vulnerability.getPublished());
        assertNotNull(vulnerability.getCreated());
        assertNotNull(vulnerability.getUpdated());
        assertEquals(Source.SOURCE_SNYK, vulnerability.getSource());
        assertEquals(1, vulnerability.getAliasesCount());
        assertEquals("id1", vulnerability.getAliases(0).getId());
        assertEquals(Source.SOURCE_NVD, vulnerability.getAliases(0).getSource());
        assertEquals(100, vulnerability.getCwes(0));
        assertEquals(org.hyades.proto.vuln.v1.Severity.SEVERITY_HIGH, vulnerability.getRatings(0).getSeverity());
        assertEquals("CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L", vulnerability.getRatings(0).getVector());
    }
}
