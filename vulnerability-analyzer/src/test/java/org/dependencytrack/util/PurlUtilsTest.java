package org.dependencytrack.util;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

import static org.assertj.core.api.Assertions.assertThat;

class PurlUtilsTest {

    @Test
    void testParsePurlWithValidPurl() {
        assertThat(PurlUtils.parsePurl("pkg:maven/foo/bar@1.2.3")).hasValueSatisfying(
                purl -> {
                    assertThat(purl.getType()).isEqualTo("maven");
                    assertThat(purl.getNamespace()).isEqualTo("foo");
                    assertThat(purl.getName()).isEqualTo("bar");
                    assertThat(purl.getVersion()).isEqualTo("1.2.3");
                }
        );
    }

    @Test
    void testParsePurlWithInvalidPurl() {
        assertThat(PurlUtils.parsePurl("invalid")).isEmpty();
    }

    @ParameterizedTest
    @CsvSource(value = {
            "bitbucket, true",
            "cargo, true",
            "composer, true",
            "deb, true",
            "docker, true",
            "gem, true",
            "generic, true",
            "github, true",
            "golang, true",
            "hex, true",
            "maven, true",
            "npm, true",
            "nuget, true",
            "pypi, true",
            "rpm, true",
            "swift, false"
    })
    void testIsStandardPurlType(final String value, final boolean expectedResult) {
        assertThat(PurlUtils.isStandardPackageUrlType(value)).isEqualTo(expectedResult);

    }
}