/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.vulnanalyzer.client.snyk;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.cyclonedx.proto.v1_4.VulnerabilityReference;
import org.dependencytrack.common.cwe.CweResolver;
import org.dependencytrack.vulnanalyzer.serde.ObjectMapperCustomizer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Collections;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.cyclonedx.proto.v1_4.ScoreMethod.SCORE_METHOD_CVSSV31;
import static org.cyclonedx.proto.v1_4.Severity.SEVERITY_CRITICAL;
import static org.cyclonedx.proto.v1_4.Severity.SEVERITY_HIGH;

class ModelConverterToCdxTest {

    private ObjectMapper objectMapper;

    @BeforeEach
    void beforeEach() {
        objectMapper = new ObjectMapper();
        new ObjectMapperCustomizer().customize(objectMapper);
    }

    @Test
    void testConvert() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "SNYK-JAVA-COMFASTERXMLWOODSTOX-3091135",
                  "type": "issue",
                  "attributes": {
                    "title": "Denial of Service (DoS)",
                    "type": "package_vulnerability",
                    "created_at": "2022-10-31T11:25:51.137662Z",
                    "updated_at": "2022-12-04T10:33:09.280719Z",
                    "description": "## Overview\\n\\nAffected versions of this package are vulnerable to Denial of Service (DoS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow.\\r\\n\\r\\n**NOTE:** This vulnerability was originally reported five times and received five CVE IDs. These have since been corrected to be duplicate references to the same issue.\\n\\n## Details\\n\\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\\n\\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\\n\\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\\n\\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\\n\\nTwo common types of DoS vulnerabilities:\\n\\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\\n\\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\\n\\n## Remediation\\nUpgrade `com.fasterxml.woodstox:woodstox-core` to version 5.0.4, 6.0.4 or higher.\\n## References\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/157)\\n- [GitHub Issue](https://github.com/x-stream/xstream/issues/304#issuecomment-1254647926)\\n- [GitHub PR](https://github.com/FasterXML/woodstox/pull/159)\\n",
                    "problems": [
                      {
                        "id": "CVE-2022-40152",
                        "source": "CVE"
                      },
                      {
                        "id": "CWE-400",
                        "source": "CWE"
                      },
                      {
                        "id": "GHSA-3f7h-mf4q-vrm4",
                        "source": "GHSA"
                      }
                    ],
                    "coordinates": [
                      {
                        "remedies": [
                          {
                            "type": "indeterminate",
                            "description": "Upgrade the package version to 5.0.4,6.0.4 to fix this vulnerability",
                            "details": {
                              "upgrade_package": "5.0.4,6.0.4"
                            }
                          }
                        ],
                        "representation": [
                          "[,5.0.4)",
                          "[6.0.0.pr1,6.0.4)"
                        ]
                      }
                    ],
                    "severities": [
                      {
                        "source": "Snyk",
                        "level": "medium",
                        "score": 5.3,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                      },
                      {
                        "source": "NVD",
                        "level": "high",
                        "score": 7.5,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                      },
                      {
                        "source": "Red Hat",
                        "level": "high",
                        "score": 7.5,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                      }
                    ],
                    "effective_severity_level": "medium",
                    "slots": {
                      "disclosure_time": "2022-10-31T11:15:12Z",
                      "exploit": "Not Defined",
                      "publication_time": "2022-10-31T16:11:28.305760Z",
                      "references": [
                        {
                          "url": "https://github.com/FasterXML/woodstox/issues/157",
                          "title": "GitHub Issue"
                        },
                        {
                          "url": "https://github.com/x-stream/xstream/issues/304%23issuecomment-1254647926",
                          "title": "GitHub Issue"
                        },
                        {
                          "url": "https://github.com/FasterXML/woodstox/pull/159",
                          "title": "GitHub PR"
                        }
                      ]
                    }
                  }
                },
                """, new TypeReference<>() {
        });

        // With alias sync disabled
        var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), List.of(SeveritySource.NVD, SeveritySource.SNYK), issue, false);
        assertThat(vuln.getId()).isEqualTo("SNYK-JAVA-COMFASTERXMLWOODSTOX-3091135");
        assertThat(vuln.getSource().getName()).isEqualTo("SNYK");
        assertThat(vuln.getProperties(0).getName()).isEqualTo(ModelConverterToCdx.TITLE_PROPERTY_NAME);
        assertThat(vuln.getProperties(0).getValue()).isEqualTo("Denial of Service (DoS)");
        assertThat(vuln.getDescription()).startsWith("## Overview");
        assertThat(vuln.getCreated().getSeconds()).isEqualTo(1667215551);
        assertThat(vuln.getPublished().getSeconds()).isEqualTo(1667232688);
        assertThat(vuln.getUpdated().getSeconds()).isEqualTo(1670149989);
        assertThat(vuln.getCwesList()).containsOnly(400);
        assertThat(vuln.getReferencesCount()).isZero();
        assertThat(vuln.getRatingsList()).satisfiesExactly(
                rating -> {
                    assertThat(rating.getSource().getName()).isEqualTo("NVD");
                    assertThat(rating.getMethod()).isEqualTo(SCORE_METHOD_CVSSV31);
                    assertThat(rating.getScore()).isEqualTo(7.5);
                    assertThat(rating.getSeverity()).isEqualTo(SEVERITY_HIGH);
                    assertThat(rating.getVector()).isEqualTo("CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H");
                }
        );
        assertThat(vuln.getAdvisoriesList()).satisfiesExactlyInAnyOrder(
                reference -> {
                    assertThat(reference.getUrl()).isEqualTo("https://github.com/FasterXML/woodstox/issues/157");
                },
                reference -> {
                    assertThat(reference.getUrl()).isEqualTo("https://github.com/x-stream/xstream/issues/304%23issuecomment-1254647926");
                },
                reference -> {
                    assertThat(reference.getUrl()).isEqualTo("https://github.com/FasterXML/woodstox/pull/159");
                }
        );
        assertThat(vuln.getRecommendation()).isEqualTo("Upgrade the package version to 5.0.4,6.0.4 to fix this vulnerability");

        // With alias sync enabled
        vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), List.of(SeveritySource.NVD, SeveritySource.SNYK), issue, true);
        assertThat(vuln.getReferencesList()).satisfiesExactly(
                alias -> {
                    assertThat(alias.getId()).isEqualTo("CVE-2022-40152");
                    assertThat(alias.getSource().getName()).isEqualTo("NVD");
                },
                alias -> {
                    assertThat(alias.getId()).isEqualTo("GHSA-3f7h-mf4q-vrm4");
                    assertThat(alias.getSource().getName()).isEqualTo("GITHUB");
                }
        );
    }

    @Test
    void testConvertWithOnlyLowPrioritySeveritySourceAvailable() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754",
                  "type": "issue",
                  "attributes": {
                    "title": "XML External Entity (XXE) Injection",
                    "type": "package_vulnerability",
                    "created_at": "2022-06-16T13:55:07.780271Z",
                    "updated_at": "2022-06-16T14:00:24.320943Z",
                    "description": "## Overview\\n\\n[com.fasterxml.woodstox:woodstox-core](https://search.maven.org/artifact/com.fasterxml.woodstox/woodstox-core) is a None\\n\\n\\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\\ndue to insecure processing and missing restriction of XML files. An attacker can exploit this vulnerability by sending a specially crafted malicious XML file that contains XML entities with URIs that resolve to documents outside of the intended sphere of control.\\n\\n## Remediation\\n\\nUpgrade `com.fasterxml.woodstox:woodstox-core` to version 5.3.0 or higher.\\n\\n\\n## References\\n\\n- [GitHub Commit](https://github.com/FasterXML/woodstox/commit/7937f97c638ef8afd385ebf4a675a9b096ccdd57)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/50)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/61)\\n",
                    "problems": [
                      {
                        "id": "CWE-611",
                        "source": "CWE"
                      }
                    ],
                    "severities": [
                      {
                        "source": "Snyk",
                        "level": "critical",
                        "score": 9.4,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L"
                      }
                    ]
                  }
                }
                """, new TypeReference<>() {
        });

        final var severitySourcePriority = List.of(SeveritySource.NVD, SeveritySource.REDHAT, SeveritySource.SNYK);
        final var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), severitySourcePriority, issue, false);
        assertThat(vuln.getId()).isEqualTo("SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754");
        assertThat(vuln.getSource().getName()).isEqualTo("SNYK");
        assertThat(vuln.getRatingsList()).satisfiesExactly(
                rating -> {
                    assertThat(rating.getSource().getName()).isEqualTo("SNYK");
                    assertThat(rating.getMethod()).isEqualTo(SCORE_METHOD_CVSSV31);
                    assertThat(rating.getScore()).isEqualTo(9.4);
                    assertThat(rating.getSeverity()).isEqualTo(SEVERITY_CRITICAL);
                    assertThat(rating.getVector()).isEqualTo("CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L");
                }
        );
    }

    @Test
    void testConvertWithNoSeveritySourcePrioritiesDefined() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "SNYK-JAVA-COMFASTERXMLWOODSTOX-3091135",
                  "type": "issue",
                  "attributes": {
                    "title": "Denial of Service (DoS)",
                    "type": "package_vulnerability",
                    "description": "## Overview\\n\\n[com.fasterxml.woodstox:woodstox-core](https://search.maven.org/artifact/com.fasterxml.woodstox/woodstox-core) is a None\\n\\n\\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\\ndue to insecure processing and missing restriction of XML files. An attacker can exploit this vulnerability by sending a specially crafted malicious XML file that contains XML entities with URIs that resolve to documents outside of the intended sphere of control.\\n\\n## Remediation\\n\\nUpgrade `com.fasterxml.woodstox:woodstox-core` to version 5.3.0 or higher.\\n\\n\\n## References\\n\\n- [GitHub Commit](https://github.com/FasterXML/woodstox/commit/7937f97c638ef8afd385ebf4a675a9b096ccdd57)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/50)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/61)\\n",
                    "severities": [
                      {
                        "source": "Snyk",
                        "level": "medium",
                        "score": 5.3,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                      },
                      {
                        "source": "Red Hat",
                        "level": "high",
                        "score": 7.5,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                      },
                      {
                        "source": "NVD",
                        "level": "high",
                        "score": 7.5,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                      }
                    ]
                  }
                },
                """, new TypeReference<>() {
        });

        final var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), Collections.emptyList(), issue, false);
        assertThat(vuln.getId()).isEqualTo("SNYK-JAVA-COMFASTERXMLWOODSTOX-3091135");
        assertThat(vuln.getRatingsList()).satisfiesExactly(
                rating -> {
                    // Should pick based on highest score (matches both NVD and REDHAT),
                    // and finally based on alphabetical order of source name (NVD comes before REDHAT).
                    assertThat(rating.getSource().getName()).isEqualTo("NVD");
                    assertThat(rating.getMethod()).isEqualTo(SCORE_METHOD_CVSSV31);
                    assertThat(rating.getSeverity()).isEqualTo(SEVERITY_HIGH);
                    assertThat(rating.getScore()).isEqualTo(7.5);
                    assertThat(rating.getVector()).isEqualTo("CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H");
                }
        );
    }

    @Test
    void shouldSetIdFromProblemForSnykSource() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "npm:js/some/old/id",
                  "type": "issue",
                  "attributes": {
                    "title": "XML External Entity (XXE) Injection",
                    "type": "package_vulnerability",
                    "created_at": "2022-06-16T13:55:07.780271Z",
                    "updated_at": "2022-06-16T14:00:24.320943Z",
                    "description": "## Overview\\n\\n[com.fasterxml.woodstox:woodstox-core](https://search.maven.org/artifact/com.fasterxml.woodstox/woodstox-core) is a None\\n\\n\\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection.\\ndue to insecure processing and missing restriction of XML files. An attacker can exploit this vulnerability by sending a specially crafted malicious XML file that contains XML entities with URIs that resolve to documents outside of the intended sphere of control.\\n\\n## Remediation\\n\\nUpgrade `com.fasterxml.woodstox:woodstox-core` to version 5.3.0 or higher.\\n\\n\\n## References\\n\\n- [GitHub Commit](https://github.com/FasterXML/woodstox/commit/7937f97c638ef8afd385ebf4a675a9b096ccdd57)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/50)\\n\\n- [GitHub Issue](https://github.com/FasterXML/woodstox/issues/61)\\n",
                    "problems": [
                      {
                        "id": "CWE-611",
                        "source": "CWE"
                      },
                      {
                        "id": "SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754",
                        "source": "SNYK"
                      }
                    ],
                    "severities": [
                      {
                        "source": "Snyk",
                        "level": "critical",
                        "score": 9.4,
                        "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L"
                      }
                    ]
                  }
                }
                """, new TypeReference<>() {
        });

        final var severitySourcePriority = List.of(SeveritySource.NVD, SeveritySource.REDHAT, SeveritySource.SNYK);
        final var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), severitySourcePriority, issue, false);
        assertThat(vuln.getId()).isEqualTo("SNYK-JAVA-COMFASTERXMLWOODSTOX-2928754");
    }

    @Test
    void testConvertWithNonLegacyIdAndOtherNonLegacyIdsInProblems() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "SNYK-JS-MINIMIST-2429795",
                  "type": "issue",
                  "attributes": {
                    "title": "Prototype Pollution",
                    "type": "package_vulnerability",
                    "created_at": "2022-03-18T13:02:08.840039Z",
                    "updated_at": "2023-11-08T09:43:26.766318Z",
                    "description": "## Overview\\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module...",
                    "problems": [
                      {
                        "id": "CVE-2021-44906",
                        "source": "CVE"
                      },
                      {
                        "id": "CWE-1321",
                        "source": "CWE"
                      },
                      {
                        "id": "SNYK-JS-MINIMIST-559764",
                        "source": "SNYK"
                      }
                    ],
                    "coordinates": [
                      {
                        "representations": [
                          {
                            "resource_path": "<0.2.4,>=1.2.0 <1.2.6"
                          },
                          {
                            "package": {
                              "name": "minimist",
                              "version": "1.2.0",
                              "type": "npm",
                              "url": "pkg:npm/minimist@1.2.0"
                            }
                          }
                        ]
                      }
                    ],
                    "severities": [],
                    "effective_severity_level": "low",
                    "slots": {}
                  }
                }
                """, new TypeReference<>() {
        });

        final var severitySourcePriority = List.of(SeveritySource.NVD, SeveritySource.REDHAT, SeveritySource.SNYK);
        final var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), severitySourcePriority, issue, true);
        assertThat(vuln.getId()).isEqualTo("SNYK-JS-MINIMIST-2429795");
        assertThat(vuln.getReferencesList()).extracting(VulnerabilityReference::getId).containsExactly("CVE-2021-44906");
    }

    @Test
    void testConvertWithLegacyIdAndWithoutNonLegacyIdsInProblems() throws Exception {
        final PageData<Issue> issue = objectMapper.readValue("""
                {
                  "id": "npm:js/some/old/id",
                  "type": "issue",
                  "attributes": {
                    "title": "Prototype Pollution",
                    "type": "package_vulnerability",
                    "created_at": "2022-03-18T13:02:08.840039Z",
                    "updated_at": "2023-11-08T09:43:26.766318Z",
                    "description": "## Overview\\n[minimist](https://www.npmjs.com/package/minimist) is a parse argument options module...",
                    "problems": [
                      {
                        "id": "CVE-2021-44906",
                        "source": "CVE"
                      },
                      {
                        "id": "CWE-1321",
                        "source": "CWE"
                      }
                    ],
                    "coordinates": [
                      {
                        "representations": [
                          {
                            "resource_path": "<0.2.4,>=1.2.0 <1.2.6"
                          },
                          {
                            "package": {
                              "name": "minimist",
                              "version": "1.2.0",
                              "type": "npm",
                              "url": "pkg:npm/minimist@1.2.0"
                            }
                          }
                        ]
                      }
                    ],
                    "severities": [],
                    "effective_severity_level": "low",
                    "slots": {}
                  }
                }
                """, new TypeReference<>() {
        });

        final var severitySourcePriority = List.of(SeveritySource.NVD, SeveritySource.REDHAT, SeveritySource.SNYK);
        final var vuln = ModelConverterToCdx.convert(CweResolver.getInstance(), severitySourcePriority, issue, true);
        assertThat(vuln.getId()).isEqualTo("npm:js/some/old/id");
        assertThat(vuln.getReferencesList()).extracting(VulnerabilityReference::getId).containsExactly("CVE-2021-44906");
    }

}
