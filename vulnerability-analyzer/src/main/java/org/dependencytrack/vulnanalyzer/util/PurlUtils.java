package org.dependencytrack.vulnanalyzer.util;

import com.github.packageurl.MalformedPackageURLException;
import com.github.packageurl.PackageURL;

import java.util.Optional;

public final class PurlUtils {

    private PurlUtils() {
    }

    public static Optional<PackageURL> parsePurl(final String purl) {
        try {
            return Optional.of(new PackageURL(purl));
        } catch (MalformedPackageURLException e) {
            return Optional.empty();
        }
    }

    public static boolean isStandardPackageUrlType(String value) {
        return value.equalsIgnoreCase(PackageURL.StandardTypes.CARGO)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.COMPOSER)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GEM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.HEX)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.MAVEN)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.NPM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.NUGET)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.PYPI)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.RPM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.DEBIAN)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.DOCKER)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GENERIC)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GITHUB)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GOLANG)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.BITBUCKET);
    }
}
