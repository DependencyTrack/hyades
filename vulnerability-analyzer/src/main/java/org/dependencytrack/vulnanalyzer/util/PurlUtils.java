/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.vulnanalyzer.util;

import com.github.packageurl.MalformedPackageURLException;
import com.github.packageurl.PackageURL;

import java.util.Optional;

public final class PurlUtils {

    private PurlUtils() {
    }

    public static Optional<PackageURL> parsePurl(final String purl) {
        try {
            return Optional.of(new PackageURL(purl));
        } catch (MalformedPackageURLException e) {
            return Optional.empty();
        }
    }

    public static boolean isStandardPackageUrlType(String value) {
        return value.equalsIgnoreCase(PackageURL.StandardTypes.CARGO)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.COMPOSER)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GEM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.HEX)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.MAVEN)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.NPM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.NUGET)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.PYPI)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.RPM)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.DEBIAN)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.DOCKER)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GENERIC)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GITHUB)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.GOLANG)
                || value.equalsIgnoreCase(PackageURL.StandardTypes.BITBUCKET);
    }
}
