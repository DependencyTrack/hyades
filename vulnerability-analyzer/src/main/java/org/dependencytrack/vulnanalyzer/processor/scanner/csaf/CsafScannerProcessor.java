package org.dependencytrack.vulnanalyzer.processor.scanner.csaf;

import org.apache.kafka.streams.processor.api.ContextualProcessor;
import org.apache.kafka.streams.processor.api.Record;
import org.dependencytrack.persistence.repository.VulnerableSoftwareRepository;
import org.dependencytrack.proto.vulnanalysis.internal.v1beta1.ScanTask;
import org.dependencytrack.proto.vulnanalysis.v1.ScanKey;
import org.dependencytrack.proto.vulnanalysis.v1.ScannerResult;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import io.micrometer.core.instrument.MeterRegistry;

public class CsafScannerProcessor extends ContextualProcessor<String, ScanTask, ScanKey, ScannerResult> {
    private static final Logger LOGGER = LoggerFactory.getLogger(CsafScannerProcessor.class);

    public CsafScannerProcessor(VulnerableSoftwareRepository vulnerableSoftwareRepository,
            MeterRegistry meterRegistry) {
        
    }

    @Override
    public void process(Record<String, ScanTask> record) {
        // TODO Auto-generated method stub
        //throw new UnsupportedOperationException("Unimplemented method 'process'");
        LOGGER.info("Analyzing record {}", record);
    }
    
}
