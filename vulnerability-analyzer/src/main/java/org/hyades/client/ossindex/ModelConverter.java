package org.hyades.client.ossindex;

import org.hyades.model.Cwe;
import org.hyades.proto.vuln.v1.Rating;
import org.hyades.proto.vuln.v1.Reference;
import org.hyades.proto.vuln.v1.ScoreMethod;
import org.hyades.proto.vuln.v1.Source;
import org.hyades.proto.vuln.v1.Vulnerability;
import org.hyades.resolver.CweResolver;
import us.springett.cvss.Cvss;
import us.springett.cvss.CvssV2;
import us.springett.cvss.CvssV3;
import us.springett.cvss.Score;

public final class ModelConverter {

    public static Vulnerability convert(final ComponentReportVulnerability reportedVuln) {
        Vulnerability.Builder vulnBuilder = Vulnerability.newBuilder();
        if (reportedVuln.cve() != null) {
            vulnBuilder.setSource(Source.SOURCE_NVD);
            vulnBuilder.setId(reportedVuln.cve());
        } else {
            vulnBuilder.setSource(Source.SOURCE_OSSINDEX);
            vulnBuilder.setId(reportedVuln.id());
            vulnBuilder.setTitle(reportedVuln.title());
        }
        //vulnerability.setDescription(reportedVuln.description());//FIXME : the size of description TBD
        vulnBuilder.setDescription("");
        if (reportedVuln.cwe() != null) {
            CweResolver cweResolver = CweResolver.getInstance();
            Cwe cwe = cweResolver.resolve(reportedVuln.cwe());
            if (cwe != null) {
                vulnBuilder.addCwes(cwe.getCweId());
            }
        }

        if (reportedVuln.reference() != null) {
            vulnBuilder.addReferences(Reference.newBuilder().setUrl(reportedVuln.reference()));
        }
        for (String externalReference : reportedVuln.externalReferences()) {
            vulnBuilder.addReferences(Reference.newBuilder().setUrl(externalReference));
        }

        if (reportedVuln.cvssVector() != null) {
            final Cvss cvss = Cvss.fromVector(reportedVuln.cvssVector());
            if (cvss != null) {
                final Score score = cvss.calculateScore();
                if (cvss instanceof CvssV2) {
                    vulnBuilder.addRatings(Rating.newBuilder()
                            .setSource(Source.SOURCE_OSSINDEX)
                            .setMethod(ScoreMethod.SCORE_METHOD_CVSSV2)
                            .setScore(score.getBaseScore())
                            .setVector(cvss.getVector()));
                } else if (cvss instanceof CvssV3) {
                    vulnBuilder.addRatings(Rating.newBuilder()
                            .setSource(Source.SOURCE_OSSINDEX)
                            .setMethod(ScoreMethod.SCORE_METHOD_CVSSV3)
                            .setScore(score.getBaseScore())
                            .setVector(cvss.getVector()));
                }
            }
        }

        return vulnBuilder.build();
    }

}
