package org.hyades.serializers;

import org.hyades.model.VulnerabilityScanKey;
import org.apache.kafka.common.errors.SerializationException;
import org.apache.kafka.common.serialization.Deserializer;

import java.nio.charset.StandardCharsets;
import java.util.UUID;

public class ScanKeyDeserializer implements Deserializer<VulnerabilityScanKey> {

    @Override
    public VulnerabilityScanKey deserialize(final String topic, final byte[] data) {
        if (data == null) {
            throw new SerializationException("data must not be null");
        }

        final var dataString = new String(data, StandardCharsets.UTF_8);
        final String[] parts = dataString.split("/", 2);
        if (parts.length != 2) {
            throw new SerializationException("invalid format");
        }

        final UUID component;
        try {
            component = UUID.fromString(parts[1]);
        } catch (IllegalArgumentException e) {
            throw new SerializationException("invalid component uuid", e);
        }

        return new VulnerabilityScanKey(parts[0], component);
    }

}
