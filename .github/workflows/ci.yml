# This file is part of Dependency-Track.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# Copyright (c) OWASP Foundation. All Rights Reserved.
name: CI

on:
  push:
    branches:
    - main
    - "feature-**"
  pull_request:
    branches:
    - main
    - "feature-**"

permissions: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # tag=v4.1.4
    - name: Set up JDK
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # tag=v4.2.1
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Test
      if: github.event_name == 'push' && github.ref_name == 'main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MAVEN_ARGS: "-B --no-transfer-progress"
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |-
        mvn -pl '!e2e' clean verify \
          failsafe:integration-test -DskipITs=false \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=dependency-track_hyades -Dsonar.organization=dependency-track
    - name: Save PR details
      if: ${{ github.event_name == 'pull_request' }}
      run: |-
        echo ${{ github.sha }} > pr-commit.txt
        echo ${{ github.event.number }} > PR_NUMBER.txt
    - name: Upload PR test coverage report
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v4 # tag=v4.3.1
      with:
        name: pr-test-coverage-report
        path: |-
          pr-commit.txt
          PR_NUMBER.txt
          target/jacoco-ut/jacoco.xml

  sonar:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      - name: echo event
        run: cat $GITHUB_EVENT_PATH
#      - name: Download PR test coverage report
#        uses: actions/github-script@v6
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               run_id: context.payload.workflow_run.id,
#            });
#            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
#              return artifact.name == "pr-test-coverage-report"
#            })[0];
#            let download = await github.rest.actions.downloadArtifact({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               artifact_id: matchArtifact.id,
#               archive_format: 'zip',
#            });
#            let fs = require('fs');
#            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr-test-coverage-report.zip`, Buffer.from(download.data));
      - name: Download PR test coverage report
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # tag=v4.1.7
        with:
          name: pr-test-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: 'Unzip code coverage'
#        run: unzip pr-test-coverage-report.zip -d coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
            -Dsonar.pullrequest.key=${{ github.event.workflow_run.pull_requests[0].number }}
            -Dsonar.pullrequest.branch=${{ github.event.workflow_run.pull_requests[0].head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.workflow_run.pull_requests[0].base.ref }}

  test-native-image:
    name: Test Native Image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    timeout-minutes: 20
    strategy:
      matrix:
        module:
        - mirror-service
        - notification-publisher
        - repository-meta-analyzer
        - vulnerability-analyzer
      fail-fast: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # tag=v4.1.4
    - name: Set up JDK
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # tag=v4.2.1
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@2f25c0caae5b220866f732832d5e3e29ff493338 # tag=v1
      with:
        # NOTE: Do NOT use the Oracle GraalVM distribution, as that is causing issues
        # with Protobuf serialization.
        #   https://github.com/DependencyTrack/hyades/issues/641
        #   https://github.com/quarkusio/quarkus/issues/35125
        distribution: 'mandrel'
        version: 'mandrel-23.1.2.0-Final'
        java-version: '21'
        components: 'native-image'
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Native Image
      env:
        MAVEN_ARGS: "-B --no-transfer-progress"
      run: |-
        mvn -pl commons,commons-kstreams,commons-persistence,proto,${{ matrix.module }} clean install -Dnative -DskipTests
    - name: Test Native Image
      env:
        MAVEN_ARGS: "-B --no-transfer-progress"
      run: |-
        mvn -pl commons,commons-kstreams,commons-persistence,proto,${{ matrix.module }} \
        test-compile failsafe:integration-test failsafe:verify -Dnative
