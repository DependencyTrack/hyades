on:
  workflow_call:
    inputs:
      module:
        type: string
        required: true
        description: "Name of the Maven module to build"

jobs:
  build-native-image:
    name: Build Native Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
        - amd64
        - arm64
      fail-fast: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.4.0
      with:
        install: true
    - name: Build Native Image
      run: |-
        RESOURCES_INCLUDES=""
        RESOURCES_EXCLUDES=""
        if [[ "${{ matrix.arch }}" == "arm64" ]]; then
          # Include RocksDB JNI library for aarch64 when building for arm64.
          # Quarkus only includes the x64 library variant per default.
          # https://github.com/quarkusio/quarkus/issues/30545
          RESOURCES_INCLUDES="librocksdbjni-linux-aarch64.so"
          RESOURCES_EXCLUDES="librocksdbjni-linux64.so"
        
          # When snappy compression is enabled, include the respective JNI library
          # for aarch64 when building for arm64. Quarkus only includes the x64 library variant per default.
          if grep -i 'quarkus.kafka.snappy.enabled=true' ${{ inputs.module }}/src/main/resources/application.properties > /dev/null; then
            RESOURCES_INCLUDES="$RESOURCES_INCLUDES,org/xerial/snappy/native/Linux/aarch64/libsnappyjava.so"
            RESOURCES_EXCLUDES="$RESOURCES_EXCLUDES,org/xerial/snappy/native/Linux/x86_64/libsnappyjava.so"
          fi
        fi
        echo "Including resources: ${RESOURCES_INCLUDES:-None}"
        echo "Excluding resources: ${RESOURCES_EXCLUDES:-None}"
        mvn clean package -Pnative -pl commons,${{ inputs.module }} -DskipTests \
          -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:22.3-java17 \
          -Dquarkus.native.container-build=true \
          -Dquarkus.native.container-runtime-options='--platform=linux/${{ matrix.arch }}' \
          -Dquarkus.native.resources.includes="$RESOURCES_INCLUDES" \
          -Dquarkus.native.resources.excludes="$RESOURCES_EXCLUDES"
    - name: Test Native Image
      if: ${{ matrix.arch == "amd64" }}
      run: |-
        mvn -pl commons,${{ inputs.module }} test-compile failsafe:integration-test -Pnative
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: native-image-${{ matrix.arch }}
        path: |-
          ${{ inputs.module }}/target/*-runner

  build-container-image:
    name: Build Container Image
    runs-on: ubuntu-latest
    needs:
    - build-native-image
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Download amd64 Binary
      uses: actions/download-artifact@v3.0.2
      with:
        name: native-image-amd64
        path: ${{ inputs.module }}/target/amd64
    - name: Download arm64 Binary
      uses: actions/download-artifact@v3.0.2
      with:
        name: native-image-arm64
        path: ${{ inputs.module }}/target/arm64
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.4.0
      with:
        install: true
    - name: Docker login
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ startsWith(github.repository, 'DependencyTrack/') }}
    - name: Build Container Image
      uses: docker/build-push-action@v3
      with:
        context: ./${{ inputs.module }}
        file: ./${{ inputs.module }}/src/main/docker/Dockerfile.native-multiarch
        platforms: linux/amd64,linux/arm64
        push: ${{ startsWith(github.repository, 'DependencyTrack/') }}
        tags: ghcr.io/dependencytrack/hyades-${{ inputs.module }}:latest-native
