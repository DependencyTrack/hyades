on:
  workflow_call:
    inputs:
      module:
        type: string
        required: true
        description: "Name of the Maven module to build"

permissions: { }

jobs:
  build-native-image:
    name: Build Native Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
        - name: amd64
          build-timeout: 15
        - name: arm64
          build-timeout: 75
      fail-fast: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # tag=v3.5.3
    - name: Set up JDK
      uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # tag=v3.11.0
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Set up QEMU
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # tag=v2.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@2a1a44ac4aa01993040736bd95bb470da1a38365 # tag=v2.9.0
      with:
        install: true
    - name: Build Native Image
      timeout-minutes: ${{ matrix.arch.build-timeout }}
      run: |-
        RESOURCES_INCLUDES=""
        RESOURCES_EXCLUDES=""
        if [[ "${{ matrix.arch.name }}" == "arm64" ]]; then
          # When depending on Kafka Streams, include RocksDB JNI library for aarch64.
          # Quarkus only includes the x64 library variant per default.
          # https://github.com/quarkusio/quarkus/issues/30545
          if grep -i 'kafka-streams' ${{ inputs.module }}/pom.xml > /dev/null; then
            RESOURCES_INCLUDES="librocksdbjni-linux-aarch64.so"
            RESOURCES_EXCLUDES="librocksdbjni-linux64.so"
          fi
        
          # When snappy compression is enabled, include the respective JNI library
          # for aarch64 when building for arm64. Quarkus only includes the x64 library variant per default.
          if grep -i 'quarkus.kafka.snappy.enabled=true' ${{ inputs.module }}/src/main/resources/application.properties > /dev/null; then
            RESOURCES_INCLUDES="$RESOURCES_INCLUDES,org/xerial/snappy/native/Linux/aarch64/libsnappyjava.so"
            RESOURCES_EXCLUDES="$RESOURCES_EXCLUDES,org/xerial/snappy/native/Linux/x86_64/libsnappyjava.so"
          fi
        fi
        echo "Including resources: ${RESOURCES_INCLUDES:-None}"
        echo "Excluding resources: ${RESOURCES_EXCLUDES:-None}"
        mvn clean package -Pnative -pl commons,commons-persistence,proto,${{ inputs.module }} -DskipTests \
          -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:22.3-java17 \
          -Dquarkus.native.container-build=true \
          -Dquarkus.native.container-runtime-options='--platform=linux/${{ matrix.arch.name }}' \
          -Dquarkus.native.resources.includes="$RESOURCES_INCLUDES" \
          -Dquarkus.native.resources.excludes="$RESOURCES_EXCLUDES"
    - name: Test Native Image
      if: ${{ matrix.arch.name == 'amd64' }}
      run: |-
        mvn -pl commons,commons-persistence,proto,${{ inputs.module }} test-compile failsafe:integration-test -Pnative
    - name: Upload Build Artifact
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # tag=v3.1.2
      with:
        name: native-image-${{ matrix.arch.name }}
        path: |-
          ${{ inputs.module }}/target/*-runner

  build-container-image:
    name: Build Container Image
    runs-on: ubuntu-latest
    permissions:
      packages: write # Required to push images to ghcr.io
    timeout-minutes: 5
    needs:
    - build-native-image
    steps:
    - name: Checkout Repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # tag=v3.5.3
    - name: Download amd64 Binary
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # tag=v3.0.2
      with:
        name: native-image-amd64
        path: ${{ inputs.module }}/target/amd64
    - name: Download arm64 Binary
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # tag=v3.0.2
      with:
        name: native-image-arm64
        path: ${{ inputs.module }}/target/arm64
    - name: Set up QEMU
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # tag=v2.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@2a1a44ac4aa01993040736bd95bb470da1a38365 # tag=v2.9.0
      with:
        install: true
    - name: Docker login
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # tag=v2.2.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ startsWith(github.repository, 'DependencyTrack/') }}
    - name: Build Container Image
      uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # tag=v4.1.1
      with:
        context: ./${{ inputs.module }}
        file: ./${{ inputs.module }}/src/main/docker/Dockerfile.native-multiarch
        platforms: linux/amd64,linux/arm64
        push: ${{ startsWith(github.repository, 'DependencyTrack/') }}
        tags: ghcr.io/dependencytrack/hyades-${{ inputs.module }}:latest-native
