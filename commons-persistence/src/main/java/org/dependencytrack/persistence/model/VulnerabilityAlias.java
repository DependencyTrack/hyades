/*
 * This file is part of Dependency-Track.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) OWASP Foundation. All Rights Reserved.
 */
package org.dependencytrack.persistence.model;

import io.quarkus.runtime.annotations.RegisterForReflection;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import org.apache.commons.lang3.tuple.Pair;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

/**
 * Model for tracking alias for vulnerabilities.
 *
 * @author Steve Springett
 * @since 4.6.0
 */
@Entity
@RegisterForReflection
@Table(name = "VULNERABILITYALIAS")
public class VulnerabilityAlias implements Serializable {

    @Id
    @Column(name = "ID")
    private long id;

    @Column(name = "INTERNAL_ID")
    private String internalId;

    @Column(name = "CVE_ID")
    private String cveId;

    @Column(name = "GHSA_ID")
    private String ghsaId;

    @Column(name = "SONATYPE_ID")
    private String sonatypeId;

    @Column(name = "SNYK_ID")
    private String snykId;

    @Column(name = "OSV_ID")
    private String osvId;

    @Column(name = "GSD_ID")
    private String gsdId;

    @Column(name = "VULNDB_ID")
    private String vulnDbId;

    @Column(name = "UUID")
    private UUID uuid;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getInternalId() {
        return internalId;
    }

    public void setInternalId(String internalId) {
        this.internalId = internalId;
    }

    public String getCveId() {
        return cveId;
    }

    public void setCveId(String cveId) {
        this.cveId = cveId;
    }

    public String getGhsaId() {
        return ghsaId;
    }

    public void setGhsaId(String ghsaId) {
        this.ghsaId = ghsaId;
    }

    public String getSonatypeId() {
        return sonatypeId;
    }

    public void setSonatypeId(String sonatypeId) {
        this.sonatypeId = sonatypeId;
    }

    public String getOsvId() {
        return osvId;
    }

    public void setOsvId(String osvId) {
        this.osvId = osvId;
    }

    public String getSnykId() {
        return snykId;
    }

    public void setSnykId(String snykId) {
        this.snykId = snykId;
    }

    public String getGsdId() {
        return gsdId;
    }

    public void setGsdId(String gsdId) {
        this.gsdId = gsdId;
    }

    public String getVulnDbId() {
        return vulnDbId;
    }

    public void setVulnDbId(String vulnDbId) {
        this.vulnDbId = vulnDbId;
    }

    public UUID getUuid() {
        return uuid;
    }

    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    private String getBySource(final Vulnerability.Source source) {
        return switch (source) {
            case GITHUB -> getGhsaId();
            case INTERNAL -> getInternalId();
            case NVD -> getCveId();
            case OSSINDEX -> getSonatypeId();
            case OSV -> getOsvId();
            case SNYK -> getSnykId();
            case VULNDB -> getVulnDbId();
            default -> null;
        };
    }

    public Map<Vulnerability.Source, String> getAllBySource() {
        return Arrays.stream(Vulnerability.Source.values())
                .map(source -> Pair.of(source, getBySource(source)))
                .filter(pair -> pair.getRight() != null)
                .collect(Collectors.toMap(Pair::getLeft, Pair::getRight));
    }
}
