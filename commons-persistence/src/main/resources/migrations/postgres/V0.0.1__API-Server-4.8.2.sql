-- ----------------------------------------------------------------
-- DataNucleus SchemaTool (ran at 18/03/2023 22:31:15)
-- ----------------------------------------------------------------
-- Complete schema required for the following classes:-
--     alpine.model.ApiKey
--     alpine.model.LdapUser
--     alpine.model.ManagedUser
--     alpine.model.MappedLdapGroup
--     alpine.model.MappedOidcGroup
--     alpine.model.OidcUser
--     alpine.model.Permission
--     alpine.model.Team
--     org.dependencytrack.model.AffectedVersionAttribution
--     org.dependencytrack.model.Analysis
--     org.dependencytrack.model.AnalysisComment
--     org.dependencytrack.model.Bom
--     org.dependencytrack.model.Component
--     org.dependencytrack.model.Cpe
--     org.dependencytrack.model.Cwe
--     org.dependencytrack.model.DependencyMetrics
--     org.dependencytrack.model.FindingAttribution
--     org.dependencytrack.model.License
--     org.dependencytrack.model.LicenseGroup
--     org.dependencytrack.model.NotificationPublisher
--     org.dependencytrack.model.NotificationRule
--     org.dependencytrack.model.Policy
--     org.dependencytrack.model.PolicyCondition
--     org.dependencytrack.model.PolicyViolation
--     org.dependencytrack.model.PortfolioMetrics
--     org.dependencytrack.model.Project
--     org.dependencytrack.model.ProjectMetrics
--     org.dependencytrack.model.ProjectProperty
--     org.dependencytrack.model.Repository
--     org.dependencytrack.model.RepositoryMetaComponent
--     org.dependencytrack.model.ServiceComponent
--     org.dependencytrack.model.Tag
--     org.dependencytrack.model.Vex
--     org.dependencytrack.model.ViolationAnalysis
--     org.dependencytrack.model.ViolationAnalysisComment
--     org.dependencytrack.model.Vulnerability
--     org.dependencytrack.model.VulnerabilityAlias
--     org.dependencytrack.model.VulnerabilityMetrics
--     org.dependencytrack.model.VulnerabilityScan
--     org.dependencytrack.model.VulnerableSoftware
--
-- Table "COMPONENT" for classes [org.dependencytrack.model.Component]
CREATE TABLE "COMPONENT"
(
    "ID" BIGSERIAL,
    "AUTHOR" text NULL,
    "BLAKE2B_256" varchar(64) NULL,
    "BLAKE2B_384" varchar(96) NULL,
    "BLAKE2B_512" varchar(128) NULL,
    "BLAKE3" varchar(255) NULL,
    "CLASSIFIER" varchar(255) NULL CHECK ("CLASSIFIER" IN ('APPLICATION','FRAMEWORK','LIBRARY','CONTAINER','OPERATING_SYSTEM','DEVICE','FIRMWARE','FILE') OR "CLASSIFIER" IS NULL),
    "COPYRIGHT" varchar(1024) NULL,
    "CPE" varchar(255) NULL,
    "DESCRIPTION" varchar(1024) NULL,
    "DIRECT_DEPENDENCIES" text NULL,
    "EXTENSION" varchar(255) NULL,
    "EXTERNAL_REFERENCES" bytea NULL,
    "FILENAME" varchar(255) NULL,
    "GROUP" varchar(255) NULL,
    "INTERNAL" bool NULL,
    "LAST_RISKSCORE" float8 NULL,
    "LICENSE" varchar(255) NULL,
    "LICENSE_URL" varchar(255) NULL,
    "MD5" varchar(32) NULL,
    "NAME" varchar(255) NOT NULL,
    "TEXT" text NULL,
    "PARENT_COMPONENT_ID" int8 NULL,
    "PROJECT_ID" int8 NOT NULL,
    "PUBLISHER" varchar(255) NULL,
    "PURL" varchar(255) NULL,
    "PURLCOORDINATES" varchar(255) NULL,
    "LICENSE_ID" int8 NULL,
    "SHA1" varchar(40) NULL,
    "SHA_256" varchar(64) NULL,
    "SHA_384" varchar(96) NULL,
    "SHA3_256" varchar(64) NULL,
    "SHA3_384" varchar(96) NULL,
    "SHA3_512" varchar(128) NULL,
    "SHA_512" varchar(128) NULL,
    "SWIDTAGID" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VERSION" varchar(255) NULL,
    CONSTRAINT "COMPONENT_PK" PRIMARY KEY ("ID")
);

-- Table "LICENSEGROUP" for classes [org.dependencytrack.model.LicenseGroup]
CREATE TABLE "LICENSEGROUP"
(
    "ID" BIGSERIAL,
    "NAME" varchar(255) NOT NULL,
    "RISKWEIGHT" int4 NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "LICENSEGROUP_PK" PRIMARY KEY ("ID")
);

-- Table "LICENSE" for classes [org.dependencytrack.model.License]
CREATE TABLE "LICENSE"
(
    "ID" BIGSERIAL,
    "COMMENT" text NULL,
    "ISCUSTOMLICENSE" bool NULL,
    "ISDEPRECATED" bool NOT NULL,
    "FSFLIBRE" bool NULL,
    "HEADER" text NULL,
    "LICENSEID" varchar(255) NULL,
    "NAME" varchar(255) NOT NULL,
    "ISOSIAPPROVED" bool NOT NULL,
    "SEEALSO" bytea NULL,
    "TEMPLATE" text NULL,
    "TEXT" text NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "LICENSE_PK" PRIMARY KEY ("ID")
);

-- Table "ANALYSISCOMMENT" for classes [org.dependencytrack.model.AnalysisComment]
CREATE TABLE "ANALYSISCOMMENT"
(
    "ID" BIGSERIAL,
    "ANALYSIS_ID" int8 NOT NULL,
    "COMMENT" text NOT NULL,
    "COMMENTER" varchar(255) NULL,
    "TIMESTAMP" timestamptz NOT NULL,
    CONSTRAINT "ANALYSISCOMMENT_PK" PRIMARY KEY ("ID")
);

-- Table "VIOLATIONANALYSISCOMMENT" for classes [org.dependencytrack.model.ViolationAnalysisComment]
CREATE TABLE "VIOLATIONANALYSISCOMMENT"
(
    "ID" BIGSERIAL,
    "COMMENT" text NOT NULL,
    "COMMENTER" varchar(255) NULL,
    "TIMESTAMP" timestamptz NOT NULL,
    "VIOLATIONANALYSIS_ID" int8 NOT NULL,
    CONSTRAINT "VIOLATIONANALYSISCOMMENT_PK" PRIMARY KEY ("ID")
);

-- Table "REPOSITORY" for classes [org.dependencytrack.model.Repository]
CREATE TABLE "REPOSITORY"
(
    "ID" BIGSERIAL,
    "ENABLED" bool NOT NULL,
    "IDENTIFIER" varchar(255) NOT NULL,
    "INTERNAL" bool NULL,
    "AUTHENTICATIONREQUIRED" bool NULL,
    "INTEGRITYCHECKENABLED" bool NULL,
    "PASSWORD" varchar(255) NULL,
    "RESOLUTION_ORDER" int4 NOT NULL,
    "TYPE" varchar(255) NOT NULL,
    "URL" varchar(255) NULL,
    "USERNAME" varchar(255) NULL,
    "UUID" varchar(36) NULL,
    CONSTRAINT "REPOSITORY_PK" PRIMARY KEY ("ID")
);

-- Table "VULNERABILITYSCAN" for classes [org.dependencytrack.model.VulnerabilityScan]
CREATE TABLE "VULNERABILITYSCAN"
(
    "ID" BIGSERIAL,
    "EXPECTED_RESULTS" int4 NOT NULL,
    "RECEIVED_RESULTS" int4 NOT NULL,
    "STARTED_AT" timestamptz NOT NULL,
    "STATUS" varchar(255) NOT NULL,
    "TARGET_IDENTIFIER" varchar(255) NOT NULL,
    "TARGET_TYPE" varchar(255) NOT NULL,
    "TOKEN" varchar(255) NOT NULL,
    "UPDATED_AT" timestamptz NOT NULL,
    "VERSION" int8 NOT NULL,
    CONSTRAINT "VULNERABILITYSCAN_PK" PRIMARY KEY ("ID")
);

-- Table "VULNERABILITYMETRICS" for classes [org.dependencytrack.model.VulnerabilityMetrics]
CREATE TABLE "VULNERABILITYMETRICS"
(
    "ID" BIGSERIAL,
    "COUNT" int4 NOT NULL,
    "MEASURED_AT" timestamptz NOT NULL,
    "MONTH" int4 NULL,
    "YEAR" int4 NOT NULL,
    CONSTRAINT "VULNERABILITYMETRICS_PK" PRIMARY KEY ("ID")
);

-- Table "PROJECT_PROPERTY" for classes [org.dependencytrack.model.ProjectProperty]
CREATE TABLE "PROJECT_PROPERTY"
(
    "ID" BIGSERIAL,
    "DESCRIPTION" varchar(255) NULL,
    "GROUPNAME" varchar(255) NOT NULL,
    "PROJECT_ID" int8 NOT NULL,
    "PROPERTYNAME" varchar(255) NOT NULL,
    "PROPERTYTYPE" varchar(255) NOT NULL,
    "PROPERTYVALUE" varchar(1024) NULL,
    CONSTRAINT "PROJECT_PROPERTY_PK" PRIMARY KEY ("ID")
);

-- Table "NOTIFICATIONPUBLISHER" for classes [org.dependencytrack.model.NotificationPublisher]
CREATE TABLE "NOTIFICATIONPUBLISHER"
(
    "ID" BIGSERIAL,
    "DEFAULT_PUBLISHER" bool NOT NULL,
    "DESCRIPTION" varchar(255) NULL,
    "NAME" varchar(255) NOT NULL,
    "PUBLISHER_CLASS" varchar(1024) NOT NULL,
    "TEMPLATE" text NULL,
    "TEMPLATE_MIME_TYPE" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "NOTIFICATIONPUBLISHER_PK" PRIMARY KEY ("ID")
);

-- Table "PORTFOLIOMETRICS" for classes [org.dependencytrack.model.PortfolioMetrics]
CREATE TABLE "PORTFOLIOMETRICS"
(
    "ID" BIGSERIAL,
    "COMPONENTS" int4 NOT NULL,
    "CRITICAL" int4 NOT NULL,
    "FINDINGS_AUDITED" int4 NULL,
    "FINDINGS_TOTAL" int4 NULL,
    "FINDINGS_UNAUDITED" int4 NULL,
    "FIRST_OCCURRENCE" timestamptz NOT NULL,
    "HIGH" int4 NOT NULL,
    "RISKSCORE" float8 NOT NULL,
    "LAST_OCCURRENCE" timestamptz NOT NULL,
    "LOW" int4 NOT NULL,
    "MEDIUM" int4 NOT NULL,
    "POLICYVIOLATIONS_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_FAIL" int4 NULL,
    "POLICYVIOLATIONS_INFO" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_WARN" int4 NULL,
    "PROJECTS" int4 NOT NULL,
    "SUPPRESSED" int4 NOT NULL,
    "UNASSIGNED_SEVERITY" int4 NULL,
    "VULNERABILITIES" int4 NOT NULL,
    "VULNERABLECOMPONENTS" int4 NOT NULL,
    "VULNERABLEPROJECTS" int4 NOT NULL,
    CONSTRAINT "PORTFOLIOMETRICS_PK" PRIMARY KEY ("ID")
);

-- Table "CWE" for classes [org.dependencytrack.model.Cwe]
CREATE TABLE "CWE"
(
    "ID" BIGSERIAL,
    "CWEID" int4 NOT NULL,
    "NAME" varchar(255) NOT NULL,
    CONSTRAINT "CWE_PK" PRIMARY KEY ("ID")
);

-- Table "DEPENDENCYMETRICS" for classes [org.dependencytrack.model.DependencyMetrics]
CREATE TABLE "DEPENDENCYMETRICS"
(
    "ID" BIGSERIAL,
    "COMPONENT_ID" int8 NOT NULL,
    "CRITICAL" int4 NOT NULL,
    "FINDINGS_AUDITED" int4 NULL,
    "FINDINGS_TOTAL" int4 NULL,
    "FINDINGS_UNAUDITED" int4 NULL,
    "FIRST_OCCURRENCE" timestamptz NOT NULL,
    "HIGH" int4 NOT NULL,
    "RISKSCORE" float8 NOT NULL,
    "LAST_OCCURRENCE" timestamptz NOT NULL,
    "LOW" int4 NOT NULL,
    "MEDIUM" int4 NOT NULL,
    "POLICYVIOLATIONS_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_FAIL" int4 NULL,
    "POLICYVIOLATIONS_INFO" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_WARN" int4 NULL,
    "PROJECT_ID" int8 NOT NULL,
    "SUPPRESSED" int4 NOT NULL,
    "UNASSIGNED_SEVERITY" int4 NULL,
    "VULNERABILITIES" int4 NOT NULL,
    CONSTRAINT "DEPENDENCYMETRICS_PK" PRIMARY KEY ("ID")
);

-- Table "POLICY" for classes [org.dependencytrack.model.Policy]
CREATE TABLE "POLICY"
(
    "ID" BIGSERIAL,
    "INCLUDE_CHILDREN" bool NULL,
    "NAME" varchar(255) NOT NULL,
    "OPERATOR" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    "VIOLATIONSTATE" varchar(255) NOT NULL,
    CONSTRAINT "POLICY_PK" PRIMARY KEY ("ID")
);

-- Table "LDAPUSER" for classes [alpine.model.LdapUser]
CREATE TABLE "LDAPUSER"
(
    "ID" BIGSERIAL,
    "DN" varchar(255) NOT NULL,
    "EMAIL" varchar(255) NULL,
    "USERNAME" varchar(255) NULL,
    CONSTRAINT "LDAPUSER_PK" PRIMARY KEY ("ID")
);

-- Table "VULNERABLESOFTWARE" for classes [org.dependencytrack.model.VulnerableSoftware]
CREATE TABLE "VULNERABLESOFTWARE"
(
    "ID" BIGSERIAL,
    "CPE22" varchar(255) NULL,
    "CPE23" varchar(255) NULL,
    "EDITION" varchar(255) NULL,
    "LANGUAGE" varchar(255) NULL,
    "OTHER" varchar(255) NULL,
    "PART" varchar(255) NULL,
    "PRODUCT" varchar(255) NULL,
    "PURL" varchar(255) NULL,
    "PURL_NAME" varchar(255) NULL,
    "PURL_NAMESPACE" varchar(255) NULL,
    "PURL_QUALIFIERS" varchar(255) NULL,
    "PURL_SUBPATH" varchar(255) NULL,
    "PURL_TYPE" varchar(255) NULL,
    "PURL_VERSION" varchar(255) NULL,
    "SWEDITION" varchar(255) NULL,
    "TARGETHW" varchar(255) NULL,
    "TARGETSW" varchar(255) NULL,
    "UPDATE" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VENDOR" varchar(255) NULL,
    "VERSION" varchar(255) NULL,
    "VERSIONENDEXCLUDING" varchar(255) NULL,
    "VERSIONENDINCLUDING" varchar(255) NULL,
    "VERSIONSTARTEXCLUDING" varchar(255) NULL,
    "VERSIONSTARTINCLUDING" varchar(255) NULL,
    "VULNERABLE" bool NOT NULL,
    CONSTRAINT "VULNERABLESOFTWARE_PK" PRIMARY KEY ("ID")
);

-- Table "ANALYSIS" for classes [org.dependencytrack.model.Analysis]
CREATE TABLE "ANALYSIS"
(
    "ID" BIGSERIAL,
    "DETAILS" text NULL,
    "JUSTIFICATION" varchar(255) NULL,
    "RESPONSE" varchar(255) NULL,
    "STATE" varchar(255) NOT NULL,
    "COMPONENT_ID" int8 NULL,
    "PROJECT_ID" int8 NULL,
    "SUPPRESSED" bool NOT NULL,
    "VULNERABILITY_ID" int8 NOT NULL,
    CONSTRAINT "ANALYSIS_PK" PRIMARY KEY ("ID")
);

-- Table "VEX" for classes [org.dependencytrack.model.Vex]
CREATE TABLE "VEX"
(
    "ID" BIGSERIAL,
    "IMPORTED" timestamptz NOT NULL,
    "PROJECT_ID" int8 NOT NULL,
    "SERIAL_NUMBER" varchar(255) NULL,
    "SPEC_VERSION" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VEX_FORMAT" varchar(255) NULL,
    "VEX_VERSION" int4 NULL,
    CONSTRAINT "VEX_PK" PRIMARY KEY ("ID")
);

-- Table "AFFECTEDVERSIONATTRIBUTION" for classes [org.dependencytrack.model.AffectedVersionAttribution]
CREATE TABLE "AFFECTEDVERSIONATTRIBUTION"
(
    "ID" BIGSERIAL,
    "FIRST_SEEN" timestamptz NOT NULL,
    "LAST_SEEN" timestamptz NOT NULL,
    "SOURCE" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    "VULNERABILITY" int8 NOT NULL,
    "VULNERABLE_SOFTWARE" int8 NOT NULL,
    CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_PK" PRIMARY KEY ("ID")
);

-- Table "TEAM" for classes [alpine.model.Team]
CREATE TABLE "TEAM"
(
    "ID" BIGSERIAL,
    "NAME" varchar(50) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "TEAM_PK" PRIMARY KEY ("ID")
);

-- Table "OIDCUSER" for classes [alpine.model.OidcUser]
CREATE TABLE "OIDCUSER"
(
    "ID" BIGSERIAL,
    "EMAIL" varchar(255) NULL,
    "SUBJECT_IDENTIFIER" varchar(255) NULL,
    "USERNAME" varchar(255) NOT NULL,
    CONSTRAINT "OIDCUSER_PK" PRIMARY KEY ("ID")
);

-- Table "MANAGEDUSER" for classes [alpine.model.ManagedUser]
CREATE TABLE "MANAGEDUSER"
(
    "ID" BIGSERIAL,
    "EMAIL" varchar(255) NULL,
    "FORCE_PASSWORD_CHANGE" bool NOT NULL,
    "FULLNAME" varchar(255) NULL,
    "LAST_PASSWORD_CHANGE" timestamptz NOT NULL,
    "NON_EXPIRY_PASSWORD" bool NOT NULL,
    "PASSWORD" varchar(255) NOT NULL,
    "SUSPENDED" bool NOT NULL,
    "USERNAME" varchar(255) NULL,
    CONSTRAINT "MANAGEDUSER_PK" PRIMARY KEY ("ID")
);

-- Table "OIDCGROUP" for classes [alpine.model.OidcGroup]
CREATE TABLE "OIDCGROUP"
(
    "ID" BIGSERIAL,
    "NAME" varchar(1024) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "OIDCGROUP_PK" PRIMARY KEY ("ID")
);

-- Table "VULNERABILITYALIAS" for classes [org.dependencytrack.model.VulnerabilityAlias]
CREATE TABLE "VULNERABILITYALIAS"
(
    "ID" BIGSERIAL,
    "CVE_ID" varchar(255) NULL,
    "GHSA_ID" varchar(255) NULL,
    "GSD_ID" varchar(255) NULL,
    "INTERNAL_ID" varchar(255) NULL,
    "OSV_ID" varchar(255) NULL,
    "SNYK_ID" varchar(255) NULL,
    "SONATYPE_ID" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VULNDB_ID" varchar(255) NULL,
    CONSTRAINT "VULNERABILITYALIAS_PK" PRIMARY KEY ("ID")
);

-- Table "CPE" for classes [org.dependencytrack.model.Cpe]
CREATE TABLE "CPE"
(
    "ID" BIGSERIAL,
    "CPE22" varchar(255) NULL,
    "CPE23" varchar(255) NOT NULL,
    "EDITION" varchar(255) NULL,
    "LANGUAGE" varchar(255) NULL,
    "OTHER" varchar(255) NULL,
    "PART" varchar(255) NULL,
    "PRODUCT" varchar(255) NULL,
    "SWEDITION" varchar(255) NULL,
    "TARGETHW" varchar(255) NULL,
    "TARGETSW" varchar(255) NULL,
    "TITLE" varchar(255) NULL,
    "UPDATE" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VENDOR" varchar(255) NULL,
    "VERSION" varchar(255) NULL,
    CONSTRAINT "CPE_PK" PRIMARY KEY ("ID")
);

-- Table "TAG" for classes [org.dependencytrack.model.Tag]
CREATE TABLE "TAG"
(
    "ID" BIGSERIAL,
    "NAME" varchar(255) NOT NULL,
    CONSTRAINT "TAG_PK" PRIMARY KEY ("ID")
);

-- Table "REPOSITORY_META_COMPONENT" for classes [org.dependencytrack.model.RepositoryMetaComponent]
CREATE TABLE "REPOSITORY_META_COMPONENT"
(
    "ID" BIGSERIAL,
    "LAST_CHECK" timestamptz NOT NULL,
    "LATEST_VERSION" varchar(255) NOT NULL,
    "NAME" varchar(255) NOT NULL,
    "NAMESPACE" varchar(255) NULL,
    "PUBLISHED" timestamptz NULL,
    "REPOSITORY_TYPE" varchar(255) NOT NULL,
    CONSTRAINT "REPOSITORY_META_COMPONENT_PK" PRIMARY KEY ("ID")
);

-- Table "PERMISSION" for classes [alpine.model.Permission]
CREATE TABLE "PERMISSION"
(
    "ID" BIGSERIAL,
    "DESCRIPTION" text NULL,
    "NAME" varchar(255) NOT NULL,
    CONSTRAINT "PERMISSION_PK" PRIMARY KEY ("ID")
);

-- Table "VIOLATIONANALYSIS" for classes [org.dependencytrack.model.ViolationAnalysis]
CREATE TABLE "VIOLATIONANALYSIS"
(
    "ID" BIGSERIAL,
    "STATE" varchar(255) NOT NULL,
    "COMPONENT_ID" int8 NULL,
    "POLICYVIOLATION_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NULL,
    "SUPPRESSED" bool NOT NULL,
    CONSTRAINT "VIOLATIONANALYSIS_PK" PRIMARY KEY ("ID")
);

-- Table "APIKEY" for classes [alpine.model.ApiKey]
CREATE TABLE "APIKEY"
(
    "ID" BIGSERIAL,
    "APIKEY" varchar(255) NOT NULL,
    CONSTRAINT "APIKEY_PK" PRIMARY KEY ("ID")
);

-- Table "FINDINGATTRIBUTION" for classes [org.dependencytrack.model.FindingAttribution]
CREATE TABLE "FINDINGATTRIBUTION"
(
    "ID" BIGSERIAL,
    "ALT_ID" varchar(255) NULL,
    "ANALYZERIDENTITY" varchar(255) NOT NULL,
    "ATTRIBUTED_ON" timestamptz NOT NULL,
    "COMPONENT_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NOT NULL,
    "REFERENCE_URL" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VULNERABILITY_ID" int8 NOT NULL,
    CONSTRAINT "FINDINGATTRIBUTION_PK" PRIMARY KEY ("ID")
);

-- Table "POLICYVIOLATION" for classes [org.dependencytrack.model.PolicyViolation]
CREATE TABLE "POLICYVIOLATION"
(
    "ID" BIGSERIAL,
    "COMPONENT_ID" int8 NOT NULL,
    "POLICYCONDITION_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NOT NULL,
    "TEXT" varchar(255) NULL,
    "TIMESTAMP" timestamptz NOT NULL,
    "TYPE" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "POLICYVIOLATION_PK" PRIMARY KEY ("ID")
);

CREATE TABLE "CONFIGPROPERTY"
(
    "ID" BIGSERIAL,
    "DESCRIPTION" varchar(255) NULL,
    "GROUPNAME" varchar(255) NOT NULL,
    "PROPERTYNAME" varchar(255) NOT NULL,
    "PROPERTYTYPE" varchar(255) NOT NULL,
    "PROPERTYVALUE" varchar(1024) NULL

);

-- Table "POLICYCONDITION" for classes [org.dependencytrack.model.PolicyCondition]
CREATE TABLE "POLICYCONDITION"
(
    "ID" BIGSERIAL,
    "OPERATOR" varchar(255) NOT NULL,
    "POLICY_ID" int8 NOT NULL,
    "SUBJECT" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    "VALUE" varchar(255) NOT NULL,
    CONSTRAINT "POLICYCONDITION_PK" PRIMARY KEY ("ID")
);

-- Table "NOTIFICATIONRULE" for classes [org.dependencytrack.model.NotificationRule]
CREATE TABLE "NOTIFICATIONRULE"
(
    "ID" BIGSERIAL,
    "ENABLED" bool NOT NULL,
    "MESSAGE" varchar(1024) NULL,
    "NAME" varchar(255) NOT NULL,
    "NOTIFICATION_LEVEL" varchar(255) NULL,
    "NOTIFY_CHILDREN" bool NULL,
    "NOTIFY_ON" varchar(1024) NULL,
    "PUBLISHER" int8 NULL,
    "PUBLISHER_CONFIG" text NULL,
    "SCOPE" varchar(255) NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "NOTIFICATIONRULE_PK" PRIMARY KEY ("ID")
);

-- Table "SERVICECOMPONENT" for classes [org.dependencytrack.model.ServiceComponent]
CREATE TABLE "SERVICECOMPONENT"
(
    "ID" BIGSERIAL,
    "AUTHENTICATED" bool NULL,
    "X_TRUST_BOUNDARY" bool NULL,
    "DATA" bytea NULL,
    "DESCRIPTION" varchar(1024) NULL,
    "ENDPOINTS" bytea NULL,
    "EXTERNAL_REFERENCES" bytea NULL,
    "GROUP" varchar(255) NULL,
    "LAST_RISKSCORE" float8 DEFAULT 0 NOT NULL,
    "NAME" varchar(255) NOT NULL,
    "TEXT" text NULL,
    "PARENT_SERVICECOMPONENT_ID" int8 NULL,
    "PROJECT_ID" int8 NOT NULL,
    "PROVIDER_ID" bytea NULL,
    "UUID" varchar(36) NOT NULL,
    "VERSION" varchar(255) NULL,
    CONSTRAINT "SERVICECOMPONENT_PK" PRIMARY KEY ("ID")
);

-- Table "MAPPEDOIDCGROUP" for classes [alpine.model.MappedOidcGroup]
CREATE TABLE "MAPPEDOIDCGROUP"
(
    "ID" BIGSERIAL,
    "GROUP_ID" int8 NOT NULL,
    "TEAM_ID" int8 NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "MAPPEDOIDCGROUP_PK" PRIMARY KEY ("ID")
);

-- Table "MAPPEDLDAPGROUP" for classes [alpine.model.MappedLdapGroup]
CREATE TABLE "MAPPEDLDAPGROUP"
(
    "ID" BIGSERIAL,
    "DN" varchar(1024) NOT NULL,
    "TEAM_ID" int8 NOT NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "MAPPEDLDAPGROUP_PK" PRIMARY KEY ("ID")
);

-- Table "VULNERABILITY" for classes [org.dependencytrack.model.Vulnerability]
CREATE TABLE "VULNERABILITY"
(
    "ID" BIGSERIAL,
    "CREATED" timestamptz NULL,
    "CREDITS" text NULL,
    "CVSSV2BASESCORE" numeric NULL,
    "CVSSV2EXPLOITSCORE" numeric NULL,
    "CVSSV2IMPACTSCORE" numeric NULL,
    "CVSSV2VECTOR" varchar(255) NULL,
    "CVSSV3BASESCORE" numeric NULL,
    "CVSSV3EXPLOITSCORE" numeric NULL,
    "CVSSV3IMPACTSCORE" numeric NULL,
    "CVSSV3VECTOR" varchar(255) NULL,
    "CWES" varchar(255) NULL,
    "DESCRIPTION" text NULL,
    "DETAIL" text NULL,
    "EPSSPERCENTILE" numeric NULL,
    "EPSSSCORE" numeric NULL,
    "FRIENDLYVULNID" varchar(255) NULL,
    "OWASPRRBUSINESSIMPACTSCORE" numeric NULL,
    "OWASPRRLIKELIHOODSCORE" numeric NULL,
    "OWASPRRTECHNICALIMPACTSCORE" numeric NULL,
    "OWASPRRVECTOR" varchar(255) NULL,
    "PATCHEDVERSIONS" varchar(255) NULL,
    "PUBLISHED" timestamptz NULL,
    "RECOMMENDATION" text NULL,
    "REFERENCES" text NULL,
    "SEVERITY" varchar(255) NULL,
    "SOURCE" varchar(255) NOT NULL,
    "SUBTITLE" varchar(255) NULL,
    "TITLE" varchar(255) NULL,
    "UPDATED" timestamptz NULL,
    "UUID" varchar(36) NOT NULL,
    "VULNID" varchar(255) NOT NULL,
    "VULNERABLEVERSIONS" varchar(255) NULL,
    CONSTRAINT "VULNERABILITY_PK" PRIMARY KEY ("ID")
);

-- Table "BOM" for classes [org.dependencytrack.model.Bom]
CREATE TABLE "BOM"
(
    "ID" BIGSERIAL,
    "BOM_FORMAT" varchar(255) NULL,
    "BOM_VERSION" int4 NULL,
    "IMPORTED" timestamptz NOT NULL,
    "PROJECT_ID" int8 NOT NULL,
    "SERIAL_NUMBER" varchar(255) NULL,
    "SPEC_VERSION" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    CONSTRAINT "BOM_PK" PRIMARY KEY ("ID")
);

-- Table "PROJECT" for classes [org.dependencytrack.model.Project]
CREATE TABLE "PROJECT"
(
    "ID" BIGSERIAL,
    "ACTIVE" bool NULL,
    "AUTHOR" varchar(255) NULL,
    "CLASSIFIER" varchar(255) NULL CHECK ("CLASSIFIER" IN ('APPLICATION','FRAMEWORK','LIBRARY','CONTAINER','OPERATING_SYSTEM','DEVICE','FIRMWARE','FILE') OR "CLASSIFIER" IS NULL),
    "CPE" varchar(255) NULL,
    "DESCRIPTION" varchar(255) NULL,
    "DIRECT_DEPENDENCIES" text NULL,
    "EXTERNAL_REFERENCES" bytea NULL,
    "GROUP" varchar(255) NULL,
    "LAST_BOM_IMPORTED" timestamptz NULL,
    "LAST_BOM_IMPORTED_FORMAT" varchar(255) NULL,
    "LAST_RISKSCORE" float8 NULL,
    "NAME" varchar(255) NOT NULL,
    "PARENT_PROJECT_ID" int8 NULL,
    "PUBLISHER" varchar(255) NULL,
    "PURL" varchar(255) NULL,
    "SWIDTAGID" varchar(255) NULL,
    "UUID" varchar(36) NOT NULL,
    "VERSION" varchar(255) NULL,
    CONSTRAINT "PROJECT_PK" PRIMARY KEY ("ID")
);

-- Table "PROJECTMETRICS" for classes [org.dependencytrack.model.ProjectMetrics]
CREATE TABLE "PROJECTMETRICS"
(
    "ID" BIGSERIAL,
    "COMPONENTS" int4 NOT NULL,
    "CRITICAL" int4 NOT NULL,
    "FINDINGS_AUDITED" int4 NULL,
    "FINDINGS_TOTAL" int4 NULL,
    "FINDINGS_UNAUDITED" int4 NULL,
    "FIRST_OCCURRENCE" timestamptz NOT NULL,
    "HIGH" int4 NOT NULL,
    "RISKSCORE" float8 NOT NULL,
    "LAST_OCCURRENCE" timestamptz NOT NULL,
    "LOW" int4 NOT NULL,
    "MEDIUM" int4 NOT NULL,
    "POLICYVIOLATIONS_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_FAIL" int4 NULL,
    "POLICYVIOLATIONS_INFO" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_LICENSE_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_AUDITED" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_SECURITY_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_TOTAL" int4 NULL,
    "POLICYVIOLATIONS_UNAUDITED" int4 NULL,
    "POLICYVIOLATIONS_WARN" int4 NULL,
    "PROJECT_ID" int8 NOT NULL,
    "SUPPRESSED" int4 NOT NULL,
    "UNASSIGNED_SEVERITY" int4 NULL,
    "VULNERABILITIES" int4 NOT NULL,
    "VULNERABLECOMPONENTS" int4 NOT NULL,
    CONSTRAINT "PROJECTMETRICS_PK" PRIMARY KEY ("ID")
);

-- Table "LICENSEGROUP_LICENSE" for join relationship
CREATE TABLE "LICENSEGROUP_LICENSE"
(
    "LICENSEGROUP_ID" int8 NOT NULL,
    "LICENSE_ID" int8 NOT NULL
);

-- Table "OIDCUSERS_PERMISSIONS" for join relationship
CREATE TABLE "OIDCUSERS_PERMISSIONS"
(
    "PERMISSION_ID" int8 NOT NULL,
    "OIDCUSER_ID" int8 NOT NULL
);

-- Table "COMPONENTS_VULNERABILITIES" for join relationship
CREATE TABLE "COMPONENTS_VULNERABILITIES"
(
    "COMPONENT_ID" int8 NOT NULL,
    "VULNERABILITY_ID" int8 NOT NULL
);

-- Table "OIDCUSERS_TEAMS" for join relationship
CREATE TABLE "OIDCUSERS_TEAMS"
(
    "OIDCUSERS_ID" int8 NOT NULL,
    "TEAM_ID" int8 NOT NULL
);

-- Table "LDAPUSERS_PERMISSIONS" for join relationship
CREATE TABLE "LDAPUSERS_PERMISSIONS"
(
    "LDAPUSER_ID" int8 NOT NULL,
    "PERMISSION_ID" int8 NOT NULL
);

-- Table "SERVICECOMPONENTS_VULNERABILITIES" for join relationship
CREATE TABLE "SERVICECOMPONENTS_VULNERABILITIES"
(
    "VULNERABILITY_ID" int8 NOT NULL,
    "SERVICECOMPONENT_ID" int8 NOT NULL
);

-- Table "VULNERABLESOFTWARE_VULNERABILITIES" for join relationship
CREATE TABLE "VULNERABLESOFTWARE_VULNERABILITIES"
(
    "VULNERABILITY_ID" int8 NOT NULL,
    "VULNERABLESOFTWARE_ID" int8 NOT NULL
);

-- Table "NOTIFICATIONRULE_TEAMS" for join relationship
CREATE TABLE "NOTIFICATIONRULE_TEAMS"
(
    "NOTIFICATIONRULE_ID" int8 NOT NULL,
    "TEAM_ID" int8 NULL
);

-- Table "PROJECTS_TAGS" for join relationship
CREATE TABLE "PROJECTS_TAGS"
(
    "TAG_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NOT NULL
);

-- Table "LDAPUSERS_TEAMS" for join relationship
CREATE TABLE "LDAPUSERS_TEAMS"
(
    "TEAM_ID" int8 NOT NULL,
    "LDAPUSER_ID" int8 NOT NULL
);

-- Table "MANAGEDUSERS_PERMISSIONS" for join relationship
CREATE TABLE "MANAGEDUSERS_PERMISSIONS"
(
    "MANAGEDUSER_ID" int8 NOT NULL,
    "PERMISSION_ID" int8 NOT NULL
);

-- Table "TEAMS_PERMISSIONS" for join relationship
CREATE TABLE "TEAMS_PERMISSIONS"
(
    "TEAM_ID" int8 NOT NULL,
    "PERMISSION_ID" int8 NOT NULL
);

-- Table "NOTIFICATIONRULE_PROJECTS" for join relationship
CREATE TABLE "NOTIFICATIONRULE_PROJECTS"
(
    "NOTIFICATIONRULE_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NULL
);

-- Table "APIKEYS_TEAMS" for join relationship
CREATE TABLE "APIKEYS_TEAMS"
(
    "TEAM_ID" int8 NOT NULL,
    "APIKEY_ID" int8 NOT NULL
);

-- Table "PROJECT_ACCESS_TEAMS" for join relationship
CREATE TABLE "PROJECT_ACCESS_TEAMS"
(
    "PROJECT_ID" int8 NOT NULL,
    "TEAM_ID" int8 NULL
);

-- Table "MANAGEDUSERS_TEAMS" for join relationship
CREATE TABLE "MANAGEDUSERS_TEAMS"
(
    "TEAM_ID" int8 NOT NULL,
    "MANAGEDUSER_ID" int8 NOT NULL
);

-- Table "POLICY_PROJECTS" for join relationship
CREATE TABLE "POLICY_PROJECTS"
(
    "POLICY_ID" int8 NOT NULL,
    "PROJECT_ID" int8 NULL
);

-- Table "POLICY_TAGS" for join relationship
CREATE TABLE "POLICY_TAGS"
(
    "POLICY_ID" int8 NOT NULL,
    "TAG_ID" int8 NULL
);

-- Constraints for table "COMPONENT" for class(es) [org.dependencytrack.model.Component]
ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_FK3" FOREIGN KEY ("LICENSE_ID") REFERENCES "LICENSE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_FK1" FOREIGN KEY ("PARENT_COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "COMPONENT_GROUP_IDX" ON "COMPONENT" ("GROUP");

CREATE INDEX "COMPONENT_N50" ON "COMPONENT" ("LICENSE_ID");

CREATE INDEX "COMPONENT_PURL_IDX" ON "COMPONENT" ("PURL");

CREATE INDEX "COMPONENT_BLAKE3_IDX" ON "COMPONENT" ("BLAKE3");

CREATE INDEX "COMPONENT_SHA3_512_IDX" ON "COMPONENT" ("SHA3_512");

CREATE INDEX "COMPONENT_CPE_IDX" ON "COMPONENT" ("CPE");

CREATE INDEX "COMPONENT_LAST_RISKSCORE_IDX" ON "COMPONENT" ("LAST_RISKSCORE");

CREATE INDEX "COMPONENT_SHA512_IDX" ON "COMPONENT" ("SHA_512");

CREATE INDEX "COMPONENT_SHA3_256_IDX" ON "COMPONENT" ("SHA3_256");

CREATE INDEX "COMPONENT_SHA384_IDX" ON "COMPONENT" ("SHA_384");

CREATE INDEX "COMPONENT_MD5_IDX" ON "COMPONENT" ("MD5");

CREATE INDEX "COMPONENT_BLAKE2B_384_IDX" ON "COMPONENT" ("BLAKE2B_384");

CREATE INDEX "COMPONENT_CLASSIFIER_IDX" ON "COMPONENT" ("CLASSIFIER");

CREATE INDEX "COMPONENT_SWID_TAGID_IDX" ON "COMPONENT" ("SWIDTAGID");

CREATE INDEX "COMPONENT_PURL_COORDINATES_IDX" ON "COMPONENT" ("PURLCOORDINATES");

CREATE INDEX "COMPONENT_BLAKE2B_512_IDX" ON "COMPONENT" ("BLAKE2B_512");

CREATE INDEX "COMPONENT_N49" ON "COMPONENT" ("PARENT_COMPONENT_ID");

CREATE INDEX "COMPONENT_SHA3_384_IDX" ON "COMPONENT" ("SHA3_384");

CREATE INDEX "COMPONENT_PROJECT_ID_IDX" ON "COMPONENT" ("PROJECT_ID");

CREATE INDEX "COMPONENT_SHA1_IDX" ON "COMPONENT" ("SHA1");

CREATE INDEX "COMPONENT_NAME_IDX" ON "COMPONENT" ("NAME");

CREATE INDEX "COMPONENT_BLAKE2B_256_IDX" ON "COMPONENT" ("BLAKE2B_256");

CREATE INDEX "COMPONENT_SHA256_IDX" ON "COMPONENT" ("SHA_256");


-- Constraints for table "LICENSEGROUP" for class(es) [org.dependencytrack.model.LicenseGroup]
ALTER TABLE "LICENSEGROUP" ADD CONSTRAINT "LICENSEGROUP_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "LICENSEGROUP_NAME_IDX" ON "LICENSEGROUP" ("NAME");


-- Constraints for table "LICENSE" for class(es) [org.dependencytrack.model.License]
ALTER TABLE "LICENSE" ADD CONSTRAINT "LICENSE_UUID_IDX" UNIQUE ("UUID");

CREATE UNIQUE INDEX "LICENSE_LICENSEID_IDX" ON "LICENSE" ("LICENSEID");

CREATE INDEX "LICENSE_NAME_IDX" ON "LICENSE" ("NAME");


-- Constraints for table "ANALYSISCOMMENT" for class(es) [org.dependencytrack.model.AnalysisComment]
ALTER TABLE "ANALYSISCOMMENT" ADD CONSTRAINT "ANALYSISCOMMENT_FK1" FOREIGN KEY ("ANALYSIS_ID") REFERENCES "ANALYSIS" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "ANALYSISCOMMENT_N49" ON "ANALYSISCOMMENT" ("ANALYSIS_ID");


-- Constraints for table "VIOLATIONANALYSISCOMMENT" for class(es) [org.dependencytrack.model.ViolationAnalysisComment]
ALTER TABLE "VIOLATIONANALYSISCOMMENT" ADD CONSTRAINT "VIOLATIONANALYSISCOMMENT_FK1" FOREIGN KEY ("VIOLATIONANALYSIS_ID") REFERENCES "VIOLATIONANALYSIS" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "VIOLATIONANALYSISCOMMENT_N49" ON "VIOLATIONANALYSISCOMMENT" ("VIOLATIONANALYSIS_ID");


-- Constraints for table "REPOSITORY" for class(es) [org.dependencytrack.model.Repository]
ALTER TABLE "REPOSITORY" ADD CONSTRAINT "REPOSITORY_COMPOUND_IDX" UNIQUE ("TYPE","IDENTIFIER");

CREATE INDEX "REPOSITORY_UUID_IDX" ON "REPOSITORY" ("UUID");


-- Constraints for table "VULNERABILITYSCAN" for class(es) [org.dependencytrack.model.VulnerabilityScan]
ALTER TABLE "VULNERABILITYSCAN" ADD CONSTRAINT "VULNERABILITY_SCAN_TOKEN_IDX" UNIQUE ("TOKEN");


-- Constraints for table "VULNERABILITYMETRICS" for class(es) [org.dependencytrack.model.VulnerabilityMetrics]

-- Constraints for table "PROJECT_PROPERTY" for class(es) [org.dependencytrack.model.ProjectProperty]
ALTER TABLE "PROJECT_PROPERTY" ADD CONSTRAINT "PROJECT_PROPERTY_KEYS_IDX" UNIQUE ("PROJECT_ID","GROUPNAME","PROPERTYNAME");

ALTER TABLE "PROJECT_PROPERTY" ADD CONSTRAINT "PROJECT_PROPERTY_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "PROJECT_PROPERTY_N49" ON "PROJECT_PROPERTY" ("PROJECT_ID");


-- Constraints for table "NOTIFICATIONPUBLISHER" for class(es) [org.dependencytrack.model.NotificationPublisher]
ALTER TABLE "NOTIFICATIONPUBLISHER" ADD CONSTRAINT "NOTIFICATIONPUBLISHER_UUID_IDX" UNIQUE ("UUID");


-- Constraints for table "PORTFOLIOMETRICS" for class(es) [org.dependencytrack.model.PortfolioMetrics]
CREATE INDEX "PORTFOLIOMETRICS_FIRST_OCCURRENCE_IDX" ON "PORTFOLIOMETRICS" ("FIRST_OCCURRENCE");

CREATE INDEX "PORTFOLIOMETRICS_LAST_OCCURRENCE_IDX" ON "PORTFOLIOMETRICS" ("LAST_OCCURRENCE");


-- Constraints for table "CWE" for class(es) [org.dependencytrack.model.Cwe]
ALTER TABLE "CWE" ADD CONSTRAINT "CWE_CWEID_IDX" UNIQUE ("CWEID");


-- Constraints for table "DEPENDENCYMETRICS" for class(es) [org.dependencytrack.model.DependencyMetrics]
ALTER TABLE "DEPENDENCYMETRICS" ADD CONSTRAINT "DEPENDENCYMETRICS_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "DEPENDENCYMETRICS" ADD CONSTRAINT "DEPENDENCYMETRICS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "DEPENDENCYMETRICS_N49" ON "DEPENDENCYMETRICS" ("COMPONENT_ID");

CREATE INDEX "DEPENDENCYMETRICS_FIRST_OCCURRENCE_IDX" ON "DEPENDENCYMETRICS" ("FIRST_OCCURRENCE");

CREATE INDEX "DEPENDENCYMETRICS_N50" ON "DEPENDENCYMETRICS" ("PROJECT_ID");

CREATE INDEX "DEPENDENCYMETRICS_COMPOSITE_IDX" ON "DEPENDENCYMETRICS" ("PROJECT_ID","COMPONENT_ID");

CREATE INDEX "DEPENDENCYMETRICS_LAST_OCCURRENCE_IDX" ON "DEPENDENCYMETRICS" ("LAST_OCCURRENCE");


-- Constraints for table "POLICY" for class(es) [org.dependencytrack.model.Policy]
ALTER TABLE "POLICY" ADD CONSTRAINT "POLICY_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "POLICY_NAME_IDX" ON "POLICY" ("NAME");


-- Constraints for table "LDAPUSER" for class(es) [alpine.model.LdapUser]
ALTER TABLE "LDAPUSER" ADD CONSTRAINT "LDAPUSER_USERNAME_IDX" UNIQUE ("USERNAME");


-- Constraints for table "VULNERABLESOFTWARE" for class(es) [org.dependencytrack.model.VulnerableSoftware]
ALTER TABLE "VULNERABLESOFTWARE" ADD CONSTRAINT "VULNERABLESOFTWARE_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "VULNERABLESOFTWARE_PART_VENDOR_PRODUCT_IDX" ON "VULNERABLESOFTWARE" ("PART","VENDOR","PRODUCT");

CREATE INDEX "VULNERABLESOFTWARE_CPE_PURL_PARTS_IDX" ON "VULNERABLESOFTWARE" ("PART","VENDOR","PRODUCT","PURL_TYPE","PURL_NAMESPACE","PURL_NAME");

CREATE INDEX "VULNERABLESOFTWARE_PURL_TYPE_NS_NAME_IDX" ON "VULNERABLESOFTWARE" ("PURL_TYPE","PURL_NAMESPACE","PURL_NAME");

CREATE INDEX "VULNERABLESOFTWARE_PURL_VERSION_RANGE_IDX" ON "VULNERABLESOFTWARE" ("PURL","VERSIONENDEXCLUDING","VERSIONENDINCLUDING","VERSIONSTARTEXCLUDING","VERSIONSTARTINCLUDING");

CREATE INDEX "VULNERABLESOFTWARE_CPE23_VERSION_RANGE_IDX" ON "VULNERABLESOFTWARE" ("CPE23","VERSIONENDEXCLUDING","VERSIONENDINCLUDING","VERSIONSTARTEXCLUDING","VERSIONSTARTINCLUDING");


-- Constraints for table "ANALYSIS" for class(es) [org.dependencytrack.model.Analysis]
ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_COMPOSITE_IDX" UNIQUE ("PROJECT_ID","COMPONENT_ID","VULNERABILITY_ID");

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_FK3" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "ANALYSIS_N51" ON "ANALYSIS" ("VULNERABILITY_ID");

CREATE INDEX "ANALYSIS_N50" ON "ANALYSIS" ("COMPONENT_ID");

CREATE INDEX "ANALYSIS_N49" ON "ANALYSIS" ("PROJECT_ID");


-- Constraints for table "VEX" for class(es) [org.dependencytrack.model.Vex]
ALTER TABLE "VEX" ADD CONSTRAINT "VEX_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "VEX" ADD CONSTRAINT "VEX_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "VEX_N49" ON "VEX" ("PROJECT_ID");


-- Constraints for table "AFFECTEDVERSIONATTRIBUTION" for class(es) [org.dependencytrack.model.AffectedVersionAttribution]
ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_COMPOSITE_IDX" UNIQUE ("SOURCE","VULNERABILITY","VULNERABLE_SOFTWARE");

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_FK2" FOREIGN KEY ("VULNERABLE_SOFTWARE") REFERENCES "VULNERABLESOFTWARE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_FK1" FOREIGN KEY ("VULNERABILITY") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_N50" ON "AFFECTEDVERSIONATTRIBUTION" ("VULNERABLE_SOFTWARE");

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_KEYS_IDX" ON "AFFECTEDVERSIONATTRIBUTION" ("VULNERABILITY","VULNERABLE_SOFTWARE");

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_N49" ON "AFFECTEDVERSIONATTRIBUTION" ("VULNERABILITY");


-- Constraints for table "TEAM" for class(es) [alpine.model.Team]
ALTER TABLE "TEAM" ADD CONSTRAINT "TEAM_UUID_IDX" UNIQUE ("UUID");


-- Constraints for table "OIDCUSER" for class(es) [alpine.model.OidcUser]
ALTER TABLE "OIDCUSER" ADD CONSTRAINT "OIDCUSER_USERNAME_IDX" UNIQUE ("USERNAME");


-- Constraints for table "MANAGEDUSER" for class(es) [alpine.model.ManagedUser]
ALTER TABLE "MANAGEDUSER" ADD CONSTRAINT "MANAGEDUSER_USERNAME_IDX" UNIQUE ("USERNAME");


-- Constraints for table "OIDCGROUP" for class(es) [alpine.model.OidcGroup]
ALTER TABLE "OIDCGROUP" ADD CONSTRAINT "OIDCGROUP_UUID_IDX" UNIQUE ("UUID");


-- Constraints for table "VULNERABILITYALIAS" for class(es) [org.dependencytrack.model.VulnerabilityAlias]
ALTER TABLE "VULNERABILITYALIAS" ADD CONSTRAINT "VULNERABILITYALIAS_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "VULNERABILITYALIAS_INTERNAL_ID_IDX" ON "VULNERABILITYALIAS" ("INTERNAL_ID");

CREATE INDEX "VULNERABILITYALIAS_SONATYPE_ID_IDX" ON "VULNERABILITYALIAS" ("SONATYPE_ID");

CREATE INDEX "VULNERABILITYALIAS_OSV_ID_IDX" ON "VULNERABILITYALIAS" ("OSV_ID");

CREATE INDEX "VULNERABILITYALIAS_GSD_ID_IDX" ON "VULNERABILITYALIAS" ("GSD_ID");

CREATE INDEX "VULNERABILITYALIAS_GHSA_ID_IDX" ON "VULNERABILITYALIAS" ("GHSA_ID");

CREATE INDEX "VULNERABILITYALIAS_VULNDB_ID_IDX" ON "VULNERABILITYALIAS" ("VULNDB_ID");

CREATE INDEX "VULNERABILITYALIAS_SNYK_ID_IDX" ON "VULNERABILITYALIAS" ("SNYK_ID");

CREATE INDEX "VULNERABILITYALIAS_CVE_ID_IDX" ON "VULNERABILITYALIAS" ("CVE_ID");


-- Constraints for table "CPE" for class(es) [org.dependencytrack.model.Cpe]
ALTER TABLE "CPE" ADD CONSTRAINT "CPE_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "CPE_CPE22_IDX" ON "CPE" ("CPE22");

CREATE INDEX "CPE_PRODUCT_IDX" ON "CPE" ("PRODUCT");

CREATE INDEX "CPE_VENDOR_IDX" ON "CPE" ("VENDOR");

CREATE UNIQUE INDEX "CPE_CPE23_IDX" ON "CPE" ("CPE23");


-- Constraints for table "TAG" for class(es) [org.dependencytrack.model.Tag]

-- Constraints for table "REPOSITORY_META_COMPONENT" for class(es) [org.dependencytrack.model.RepositoryMetaComponent]
CREATE UNIQUE INDEX "REPOSITORY_META_COMPONENT_COMPOUND_IDX" ON "REPOSITORY_META_COMPONENT" ("REPOSITORY_TYPE","NAMESPACE","NAME");

CREATE INDEX "REPOSITORY_META_COMPONENT_LASTCHECK_IDX" ON "REPOSITORY_META_COMPONENT" ("LAST_CHECK");


-- Constraints for table "PERMISSION" for class(es) [alpine.model.Permission]
ALTER TABLE "PERMISSION" ADD CONSTRAINT "PERMISSION_IDX" UNIQUE ("NAME");


-- Constraints for table "VIOLATIONANALYSIS" for class(es) [org.dependencytrack.model.ViolationAnalysis]
ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_COMPOSITE_IDX" UNIQUE ("PROJECT_ID","COMPONENT_ID","POLICYVIOLATION_ID");

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_FK3" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_FK2" FOREIGN KEY ("POLICYVIOLATION_ID") REFERENCES "POLICYVIOLATION" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "VIOLATIONANALYSIS_N49" ON "VIOLATIONANALYSIS" ("PROJECT_ID");

CREATE INDEX "VIOLATIONANALYSIS_N51" ON "VIOLATIONANALYSIS" ("COMPONENT_ID");

CREATE INDEX "VIOLATIONANALYSIS_N50" ON "VIOLATIONANALYSIS" ("POLICYVIOLATION_ID");


-- Constraints for table "APIKEY" for class(es) [alpine.model.ApiKey]
ALTER TABLE "APIKEY" ADD CONSTRAINT "APIKEY_IDX" UNIQUE ("APIKEY");


-- Constraints for table "FINDINGATTRIBUTION" for class(es) [org.dependencytrack.model.FindingAttribution]
ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_FK3" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "FINDINGATTRIBUTION_N50" ON "FINDINGATTRIBUTION" ("PROJECT_ID");

CREATE INDEX "FINDINGATTRIBUTION_N51" ON "FINDINGATTRIBUTION" ("VULNERABILITY_ID");

CREATE INDEX "FINDINGATTRIBUTION_COMPOUND_IDX" ON "FINDINGATTRIBUTION" ("COMPONENT_ID","VULNERABILITY_ID");

CREATE INDEX "FINDINGATTRIBUTION_N49" ON "FINDINGATTRIBUTION" ("COMPONENT_ID");


-- Constraints for table "POLICYVIOLATION" for class(es) [org.dependencytrack.model.PolicyViolation]
ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_FK3" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_FK2" FOREIGN KEY ("POLICYCONDITION_ID") REFERENCES "POLICYCONDITION" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "POLICYVIOLATION_PROJECT_IDX" ON "POLICYVIOLATION" ("PROJECT_ID");

CREATE INDEX "POLICYVIOLATION_N49" ON "POLICYVIOLATION" ("POLICYCONDITION_ID");

CREATE INDEX "POLICYVIOLATION_COMPONENT_IDX" ON "POLICYVIOLATION" ("COMPONENT_ID");


-- Constraints for table "POLICYCONDITION" for class(es) [org.dependencytrack.model.PolicyCondition]
ALTER TABLE "POLICYCONDITION" ADD CONSTRAINT "POLICYCONDITION_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "POLICYCONDITION" ADD CONSTRAINT "POLICYCONDITION_FK1" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "POLICYCONDITION_N49" ON "POLICYCONDITION" ("POLICY_ID");


-- Constraints for table "NOTIFICATIONRULE" for class(es) [org.dependencytrack.model.NotificationRule]
ALTER TABLE "NOTIFICATIONRULE" ADD CONSTRAINT "NOTIFICATIONRULE_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "NOTIFICATIONRULE" ADD CONSTRAINT "NOTIFICATIONRULE_FK1" FOREIGN KEY ("PUBLISHER") REFERENCES "NOTIFICATIONPUBLISHER" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "NOTIFICATIONRULE_N49" ON "NOTIFICATIONRULE" ("PUBLISHER");


-- Constraints for table "SERVICECOMPONENT" for class(es) [org.dependencytrack.model.ServiceComponent]
ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_FK1" FOREIGN KEY ("PARENT_SERVICECOMPONENT_ID") REFERENCES "SERVICECOMPONENT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "SERVICECOMPONENT_N50" ON "SERVICECOMPONENT" ("PARENT_SERVICECOMPONENT_ID");

CREATE INDEX "SERVICECOMPONENT_LAST_RISKSCORE_IDX" ON "SERVICECOMPONENT" ("LAST_RISKSCORE");

CREATE INDEX "SERVICECOMPONENT_N49" ON "SERVICECOMPONENT" ("PROJECT_ID");


-- Constraints for table "MAPPEDOIDCGROUP" for class(es) [alpine.model.MappedOidcGroup]
ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_U1" UNIQUE ("TEAM_ID","GROUP_ID");

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_FK2" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_FK1" FOREIGN KEY ("GROUP_ID") REFERENCES "OIDCGROUP" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "MAPPEDOIDCGROUP_N50" ON "MAPPEDOIDCGROUP" ("TEAM_ID");

CREATE INDEX "MAPPEDOIDCGROUP_N49" ON "MAPPEDOIDCGROUP" ("GROUP_ID");


-- Constraints for table "MAPPEDLDAPGROUP" for class(es) [alpine.model.MappedLdapGroup]
ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_U1" UNIQUE ("TEAM_ID","DN");

ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_FK1" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "MAPPEDLDAPGROUP_N49" ON "MAPPEDLDAPGROUP" ("TEAM_ID");


-- Constraints for table "VULNERABILITY" for class(es) [org.dependencytrack.model.Vulnerability]
ALTER TABLE "VULNERABILITY" ADD CONSTRAINT "VULNERABILITY_U1" UNIQUE ("VULNID","SOURCE");

ALTER TABLE "VULNERABILITY" ADD CONSTRAINT "VULNERABILITY_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "VULNERABILITY_VULNID_IDX" ON "VULNERABILITY" ("VULNID");

CREATE INDEX "VULNERABILITY_PUBLISHED_IDX" ON "VULNERABILITY" ("PUBLISHED");

CREATE INDEX "VULNERABILITY_UPDATED_IDX" ON "VULNERABILITY" ("UPDATED");

CREATE INDEX "VULNERABILITY_CREATED_IDX" ON "VULNERABILITY" ("CREATED");


-- Constraints for table "BOM" for class(es) [org.dependencytrack.model.Bom]
ALTER TABLE "BOM" ADD CONSTRAINT "BOM_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "BOM" ADD CONSTRAINT "BOM_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "BOM_N49" ON "BOM" ("PROJECT_ID");


-- Constraints for table "PROJECT" for class(es) [org.dependencytrack.model.Project]
ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_FK1" FOREIGN KEY ("PARENT_PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "PROJECT_SWID_TAGID_IDX" ON "PROJECT" ("SWIDTAGID");

CREATE INDEX "PROJECT_CPE_IDX" ON "PROJECT" ("CPE");

CREATE INDEX "PROJECT_PURL_IDX" ON "PROJECT" ("PURL");

CREATE INDEX "PROJECT_CLASSIFIER_IDX" ON "PROJECT" ("CLASSIFIER");

CREATE INDEX "PROJECT_GROUP_IDX" ON "PROJECT" ("GROUP");

CREATE INDEX "PROJECT_LAST_RISKSCORE_IDX" ON "PROJECT" ("LAST_RISKSCORE");

CREATE INDEX "PROJECT_LASTBOMIMPORT_IDX" ON "PROJECT" ("LAST_BOM_IMPORTED");

CREATE INDEX "PROJECT_NAME_IDX" ON "PROJECT" ("NAME");

CREATE INDEX "PROJECT_LASTBOMIMPORT_FORMAT_IDX" ON "PROJECT" ("LAST_BOM_IMPORTED_FORMAT");

CREATE INDEX "PROJECT_VERSION_IDX" ON "PROJECT" ("VERSION");

CREATE INDEX "PROJECT_N49" ON "PROJECT" ("PARENT_PROJECT_ID");


-- Constraints for table "PROJECTMETRICS" for class(es) [org.dependencytrack.model.ProjectMetrics]
ALTER TABLE "PROJECTMETRICS" ADD CONSTRAINT "PROJECTMETRICS_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "PROJECTMETRICS_N49" ON "PROJECTMETRICS" ("PROJECT_ID");

CREATE INDEX "PROJECTMETRICS_FIRST_OCCURRENCE_IDX" ON "PROJECTMETRICS" ("FIRST_OCCURRENCE");

CREATE INDEX "PROJECTMETRICS_LAST_OCCURRENCE_IDX" ON "PROJECTMETRICS" ("LAST_OCCURRENCE");


-- Constraints for table "LICENSEGROUP_LICENSE"
ALTER TABLE "LICENSEGROUP_LICENSE" ADD CONSTRAINT "LICENSEGROUP_LICENSE_FK2" FOREIGN KEY ("LICENSE_ID") REFERENCES "LICENSE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "LICENSEGROUP_LICENSE" ADD CONSTRAINT "LICENSEGROUP_LICENSE_FK1" FOREIGN KEY ("LICENSEGROUP_ID") REFERENCES "LICENSEGROUP" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "LICENSEGROUP_LICENSE_N49" ON "LICENSEGROUP_LICENSE" ("LICENSEGROUP_ID");

CREATE INDEX "LICENSEGROUP_LICENSE_N50" ON "LICENSEGROUP_LICENSE" ("LICENSE_ID");


-- Constraints for table "OIDCUSERS_PERMISSIONS"
ALTER TABLE "OIDCUSERS_PERMISSIONS" ADD CONSTRAINT "OIDCUSERS_PERMISSIONS_FK2" FOREIGN KEY ("OIDCUSER_ID") REFERENCES "OIDCUSER" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "OIDCUSERS_PERMISSIONS" ADD CONSTRAINT "OIDCUSERS_PERMISSIONS_FK1" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "OIDCUSERS_PERMISSIONS_N49" ON "OIDCUSERS_PERMISSIONS" ("PERMISSION_ID");

CREATE INDEX "OIDCUSERS_PERMISSIONS_N50" ON "OIDCUSERS_PERMISSIONS" ("OIDCUSER_ID");


-- Constraints for table "COMPONENTS_VULNERABILITIES"
ALTER TABLE "COMPONENTS_VULNERABILITIES" ADD CONSTRAINT "COMPONENTS_VULNERABILITIES_FK1" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "COMPONENTS_VULNERABILITIES" ADD CONSTRAINT "COMPONENTS_VULNERABILITIES_FK2" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "COMPONENTS_VULNERABILITIES_N50" ON "COMPONENTS_VULNERABILITIES" ("COMPONENT_ID");

CREATE INDEX "COMPONENTS_VULNERABILITIES_N49" ON "COMPONENTS_VULNERABILITIES" ("VULNERABILITY_ID");


-- Constraints for table "OIDCUSERS_TEAMS"
ALTER TABLE "OIDCUSERS_TEAMS" ADD CONSTRAINT "OIDCUSERS_TEAMS_FK1" FOREIGN KEY ("OIDCUSERS_ID") REFERENCES "OIDCUSER" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "OIDCUSERS_TEAMS" ADD CONSTRAINT "OIDCUSERS_TEAMS_FK2" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "OIDCUSERS_TEAMS_N49" ON "OIDCUSERS_TEAMS" ("TEAM_ID");

CREATE INDEX "OIDCUSERS_TEAMS_N50" ON "OIDCUSERS_TEAMS" ("OIDCUSERS_ID");


-- Constraints for table "LDAPUSERS_PERMISSIONS"
ALTER TABLE "LDAPUSERS_PERMISSIONS" ADD CONSTRAINT "LDAPUSERS_PERMISSIONS_FK1" FOREIGN KEY ("LDAPUSER_ID") REFERENCES "LDAPUSER" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "LDAPUSERS_PERMISSIONS" ADD CONSTRAINT "LDAPUSERS_PERMISSIONS_FK2" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "LDAPUSERS_PERMISSIONS_N50" ON "LDAPUSERS_PERMISSIONS" ("LDAPUSER_ID");

CREATE INDEX "LDAPUSERS_PERMISSIONS_N49" ON "LDAPUSERS_PERMISSIONS" ("PERMISSION_ID");


-- Constraints for table "SERVICECOMPONENTS_VULNERABILITIES"
ALTER TABLE "SERVICECOMPONENTS_VULNERABILITIES" ADD CONSTRAINT "SERVICECOMPONENTS_VULNERABILITIES_FK2" FOREIGN KEY ("SERVICECOMPONENT_ID") REFERENCES "SERVICECOMPONENT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "SERVICECOMPONENTS_VULNERABILITIES" ADD CONSTRAINT "SERVICECOMPONENTS_VULNERABILITIES_FK1" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "SERVICECOMPONENTS_VULNERABILITIES_N49" ON "SERVICECOMPONENTS_VULNERABILITIES" ("VULNERABILITY_ID");

CREATE INDEX "SERVICECOMPONENTS_VULNERABILITIES_N50" ON "SERVICECOMPONENTS_VULNERABILITIES" ("SERVICECOMPONENT_ID");


-- Constraints for table "VULNERABLESOFTWARE_VULNERABILITIES"
ALTER TABLE "VULNERABLESOFTWARE_VULNERABILITIES" ADD CONSTRAINT "VULNERABLESOFTWARE_VULNERABILITIES_FK2" FOREIGN KEY ("VULNERABLESOFTWARE_ID") REFERENCES "VULNERABLESOFTWARE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "VULNERABLESOFTWARE_VULNERABILITIES" ADD CONSTRAINT "VULNERABLESOFTWARE_VULNERABILITIES_FK1" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "VULNERABLESOFTWARE_VULNERABILITIES_N49" ON "VULNERABLESOFTWARE_VULNERABILITIES" ("VULNERABLESOFTWARE_ID");

CREATE INDEX "VULNERABLESOFTWARE_VULNERABILITIES_N50" ON "VULNERABLESOFTWARE_VULNERABILITIES" ("VULNERABILITY_ID");


-- Constraints for table "NOTIFICATIONRULE_TEAMS"
ALTER TABLE "NOTIFICATIONRULE_TEAMS" ADD CONSTRAINT "NOTIFICATIONRULE_TEAMS_FK1" FOREIGN KEY ("NOTIFICATIONRULE_ID") REFERENCES "NOTIFICATIONRULE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "NOTIFICATIONRULE_TEAMS" ADD CONSTRAINT "NOTIFICATIONRULE_TEAMS_FK2" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "NOTIFICATIONRULE_TEAMS_N50" ON "NOTIFICATIONRULE_TEAMS" ("NOTIFICATIONRULE_ID");

CREATE INDEX "NOTIFICATIONRULE_TEAMS_N49" ON "NOTIFICATIONRULE_TEAMS" ("TEAM_ID");


-- Constraints for table "PROJECTS_TAGS"
ALTER TABLE "PROJECTS_TAGS" ADD CONSTRAINT "PROJECTS_TAGS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "PROJECTS_TAGS" ADD CONSTRAINT "PROJECTS_TAGS_FK1" FOREIGN KEY ("TAG_ID") REFERENCES "TAG" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "PROJECTS_TAGS_N50" ON "PROJECTS_TAGS" ("PROJECT_ID");

CREATE INDEX "PROJECTS_TAGS_N49" ON "PROJECTS_TAGS" ("TAG_ID");


-- Constraints for table "LDAPUSERS_TEAMS"
ALTER TABLE "LDAPUSERS_TEAMS" ADD CONSTRAINT "LDAPUSERS_TEAMS_FK2" FOREIGN KEY ("LDAPUSER_ID") REFERENCES "LDAPUSER" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "LDAPUSERS_TEAMS" ADD CONSTRAINT "LDAPUSERS_TEAMS_FK1" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "LDAPUSERS_TEAMS_N49" ON "LDAPUSERS_TEAMS" ("TEAM_ID");

CREATE INDEX "LDAPUSERS_TEAMS_N50" ON "LDAPUSERS_TEAMS" ("LDAPUSER_ID");


-- Constraints for table "MANAGEDUSERS_PERMISSIONS"
ALTER TABLE "MANAGEDUSERS_PERMISSIONS" ADD CONSTRAINT "MANAGEDUSERS_PERMISSIONS_FK2" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "MANAGEDUSERS_PERMISSIONS" ADD CONSTRAINT "MANAGEDUSERS_PERMISSIONS_FK1" FOREIGN KEY ("MANAGEDUSER_ID") REFERENCES "MANAGEDUSER" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "MANAGEDUSERS_PERMISSIONS_N50" ON "MANAGEDUSERS_PERMISSIONS" ("PERMISSION_ID");

CREATE INDEX "MANAGEDUSERS_PERMISSIONS_N49" ON "MANAGEDUSERS_PERMISSIONS" ("MANAGEDUSER_ID");


-- Constraints for table "TEAMS_PERMISSIONS"
ALTER TABLE "TEAMS_PERMISSIONS" ADD CONSTRAINT "TEAMS_PERMISSIONS_FK2" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "TEAMS_PERMISSIONS" ADD CONSTRAINT "TEAMS_PERMISSIONS_FK1" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "TEAMS_PERMISSIONS_N50" ON "TEAMS_PERMISSIONS" ("PERMISSION_ID");

CREATE INDEX "TEAMS_PERMISSIONS_N49" ON "TEAMS_PERMISSIONS" ("TEAM_ID");


-- Constraints for table "NOTIFICATIONRULE_PROJECTS"
ALTER TABLE "NOTIFICATIONRULE_PROJECTS" ADD CONSTRAINT "NOTIFICATIONRULE_PROJECTS_FK1" FOREIGN KEY ("NOTIFICATIONRULE_ID") REFERENCES "NOTIFICATIONRULE" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "NOTIFICATIONRULE_PROJECTS" ADD CONSTRAINT "NOTIFICATIONRULE_PROJECTS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "NOTIFICATIONRULE_PROJECTS_N50" ON "NOTIFICATIONRULE_PROJECTS" ("PROJECT_ID");

CREATE INDEX "NOTIFICATIONRULE_PROJECTS_N49" ON "NOTIFICATIONRULE_PROJECTS" ("NOTIFICATIONRULE_ID");


-- Constraints for table "APIKEYS_TEAMS"
ALTER TABLE "APIKEYS_TEAMS" ADD CONSTRAINT "APIKEYS_TEAMS_FK2" FOREIGN KEY ("APIKEY_ID") REFERENCES "APIKEY" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "APIKEYS_TEAMS" ADD CONSTRAINT "APIKEYS_TEAMS_FK1" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "APIKEYS_TEAMS_N49" ON "APIKEYS_TEAMS" ("APIKEY_ID");

CREATE INDEX "APIKEYS_TEAMS_N50" ON "APIKEYS_TEAMS" ("TEAM_ID");


-- Constraints for table "PROJECT_ACCESS_TEAMS"
ALTER TABLE "PROJECT_ACCESS_TEAMS" ADD CONSTRAINT "PROJECT_ACCESS_TEAMS_FK2" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "PROJECT_ACCESS_TEAMS" ADD CONSTRAINT "PROJECT_ACCESS_TEAMS_FK1" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "PROJECT_ACCESS_TEAMS_N50" ON "PROJECT_ACCESS_TEAMS" ("TEAM_ID");

CREATE INDEX "PROJECT_ACCESS_TEAMS_N49" ON "PROJECT_ACCESS_TEAMS" ("PROJECT_ID");


-- Constraints for table "MANAGEDUSERS_TEAMS"
ALTER TABLE "MANAGEDUSERS_TEAMS" ADD CONSTRAINT "MANAGEDUSERS_TEAMS_FK1" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "MANAGEDUSERS_TEAMS" ADD CONSTRAINT "MANAGEDUSERS_TEAMS_FK2" FOREIGN KEY ("MANAGEDUSER_ID") REFERENCES "MANAGEDUSER" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "MANAGEDUSERS_TEAMS_N50" ON "MANAGEDUSERS_TEAMS" ("TEAM_ID");

CREATE INDEX "MANAGEDUSERS_TEAMS_N49" ON "MANAGEDUSERS_TEAMS" ("MANAGEDUSER_ID");


-- Constraints for table "POLICY_PROJECTS"
ALTER TABLE "POLICY_PROJECTS" ADD CONSTRAINT "POLICY_PROJECTS_FK2" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "POLICY_PROJECTS" ADD CONSTRAINT "POLICY_PROJECTS_FK1" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "POLICY_PROJECTS_N49" ON "POLICY_PROJECTS" ("POLICY_ID");

CREATE INDEX "POLICY_PROJECTS_N50" ON "POLICY_PROJECTS" ("PROJECT_ID");


-- Constraints for table "POLICY_TAGS"
ALTER TABLE "POLICY_TAGS" ADD CONSTRAINT "POLICY_TAGS_FK2" FOREIGN KEY ("TAG_ID") REFERENCES "TAG" ("ID") INITIALLY DEFERRED ;

ALTER TABLE "POLICY_TAGS" ADD CONSTRAINT "POLICY_TAGS_FK1" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") INITIALLY DEFERRED ;

CREATE INDEX "POLICY_TAGS_N50" ON "POLICY_TAGS" ("TAG_ID");

CREATE INDEX "POLICY_TAGS_N49" ON "POLICY_TAGS" ("POLICY_ID");



-- ----------------------------------------------------------------
-- Sequences and SequenceTables
