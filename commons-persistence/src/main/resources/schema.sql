SET SEARCH_PATH TO public, "$user","public";

SET SEARCH_PATH TO public, "$user","public";

SET SEARCH_PATH TO public, "$user","public";

-- Create Database Lock Table
CREATE TABLE databasechangeloglock (ID INTEGER NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP WITHOUT TIME ZONE, LOCKEDBY VARCHAR(255), CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (ID));

-- Initialize Database Lock Table
DELETE FROM databasechangeloglock;

INSERT INTO databasechangeloglock (ID, LOCKED) VALUES (1, FALSE);

-- Lock Database
UPDATE databasechangeloglock SET LOCKED = TRUE, LOCKEDBY = 'ctrl (172.17.0.1)', LOCKGRANTED = NOW() WHERE ID = 1 AND LOCKED = FALSE;

SET SEARCH_PATH TO public, "$user","public";

-- Create Database Change Log Table
CREATE TABLE databasechangelog (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP WITHOUT TIME ZONE NOT NULL, ORDEREXECUTED INTEGER NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10));

SET SEARCH_PATH TO public, "$user","public";

SET SEARCH_PATH TO public, "$user","public";

-- *********************************************************************
-- Update Database Script
-- *********************************************************************
-- Change Log: migration/changelog-main.xml
-- Ran at: 4/29/24, 3:36â€¯PM
-- Against: dtrack@jdbc:postgresql://localhost:32788/dtrack
-- Liquibase version: 4.27.0
-- *********************************************************************

SET SEARCH_PATH TO public, "$user","public";

SET SEARCH_PATH TO public, "$user","public";

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-1::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE TABLE "WORKFLOW_STATE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "FAILURE_REASON" TEXT, "PARENT_STEP_ID" BIGINT, "STARTED_AT" TIMESTAMP WITH TIME ZONE, "STATUS" VARCHAR(64) NOT NULL, "STEP" VARCHAR(64) NOT NULL, "TOKEN" VARCHAR(36) NOT NULL, "UPDATED_AT" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "WORKFLOW_STATE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "COMPONENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "AUTHOR" TEXT, "BLAKE2B_256" VARCHAR(64), "BLAKE2B_384" VARCHAR(96), "BLAKE2B_512" VARCHAR(128), "BLAKE3" VARCHAR(255), "CLASSIFIER" VARCHAR(255), "COPYRIGHT" VARCHAR(1024), "CPE" VARCHAR(255), "DESCRIPTION" VARCHAR(1024), "DIRECT_DEPENDENCIES" TEXT, "EXTENSION" VARCHAR(255), "EXTERNAL_REFERENCES" BYTEA, "FILENAME" VARCHAR(255), "GROUP" VARCHAR(255), "INTERNAL" BOOLEAN, "LAST_RISKSCORE" FLOAT8, "LICENSE" VARCHAR(255), "LICENSE_EXPRESSION" TEXT, "LICENSE_URL" VARCHAR(255), "MD5" VARCHAR(32), "NAME" VARCHAR(255) NOT NULL, "TEXT" TEXT, "PARENT_COMPONENT_ID" BIGINT, "PROJECT_ID" BIGINT NOT NULL, "PUBLISHER" VARCHAR(255), "PURL" VARCHAR(1024), "PURLCOORDINATES" VARCHAR(255), "LICENSE_ID" BIGINT, "SHA1" VARCHAR(40), "SHA_256" VARCHAR(64), "SHA_384" VARCHAR(96), "SHA3_256" VARCHAR(64), "SHA3_384" VARCHAR(96), "SHA3_512" VARCHAR(128), "SHA_512" VARCHAR(128), "SWIDTAGID" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VERSION" VARCHAR(255), CONSTRAINT "COMPONENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "EVENTSERVICELOG" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "SUBSCRIBERCLASS" VARCHAR(255) NOT NULL, "STARTED" TIMESTAMP WITH TIME ZONE, "COMPLETED" TIMESTAMP WITH TIME ZONE, CONSTRAINT "EVENTSERVICELOG_PK" PRIMARY KEY ("ID"));

CREATE TABLE "LICENSEGROUP" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "NAME" VARCHAR(255) NOT NULL, "RISKWEIGHT" INTEGER NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "LICENSEGROUP_PK" PRIMARY KEY ("ID"));

CREATE TABLE "LICENSE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMMENT" TEXT, "ISCUSTOMLICENSE" BOOLEAN, "ISDEPRECATED" BOOLEAN NOT NULL, "FSFLIBRE" BOOLEAN, "HEADER" TEXT, "LICENSEID" VARCHAR(255), "NAME" VARCHAR(255) NOT NULL, "ISOSIAPPROVED" BOOLEAN NOT NULL, "SEEALSO" BYTEA, "TEMPLATE" TEXT, "TEXT" TEXT, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "LICENSE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "ANALYSISCOMMENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ANALYSIS_ID" BIGINT NOT NULL, "COMMENT" TEXT NOT NULL, "COMMENTER" VARCHAR(255), "TIMESTAMP" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "ANALYSISCOMMENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VIOLATIONANALYSISCOMMENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMMENT" TEXT NOT NULL, "COMMENTER" VARCHAR(255), "TIMESTAMP" TIMESTAMP WITH TIME ZONE NOT NULL, "VIOLATIONANALYSIS_ID" BIGINT NOT NULL, CONSTRAINT "VIOLATIONANALYSISCOMMENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "REPOSITORY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "AUTHENTICATIONREQUIRED" BOOLEAN, "ENABLED" BOOLEAN NOT NULL, "IDENTIFIER" VARCHAR(255) NOT NULL, "INTERNAL" BOOLEAN, "PASSWORD" VARCHAR(255), "RESOLUTION_ORDER" INTEGER NOT NULL, "TYPE" VARCHAR(255) NOT NULL, "URL" VARCHAR(255), "USERNAME" VARCHAR(255), "UUID" VARCHAR(36), CONSTRAINT "REPOSITORY_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VULNERABILITYSCAN" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "EXPECTED_RESULTS" INTEGER NOT NULL, "FAILURE_THRESHOLD" FLOAT8, "RECEIVED_RESULTS" INTEGER NOT NULL, "SCAN_FAILED" BIGINT, "SCAN_TOTAL" BIGINT, "STARTED_AT" TIMESTAMP WITH TIME ZONE NOT NULL, "STATUS" VARCHAR(255) NOT NULL, "TARGET_IDENTIFIER" VARCHAR(255) NOT NULL, "TARGET_TYPE" VARCHAR(255) NOT NULL, "TOKEN" VARCHAR(255) NOT NULL, "UPDATED_AT" TIMESTAMP WITH TIME ZONE NOT NULL, "VERSION" BIGINT NOT NULL, CONSTRAINT "VULNERABILITYSCAN_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VULNERABILITYMETRICS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COUNT" INTEGER NOT NULL, "MEASURED_AT" TIMESTAMP WITH TIME ZONE NOT NULL, "MONTH" INTEGER, "YEAR" INTEGER NOT NULL, CONSTRAINT "VULNERABILITYMETRICS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "PROJECT_PROPERTY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DESCRIPTION" VARCHAR(255), "GROUPNAME" VARCHAR(255) NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "PROPERTYNAME" VARCHAR(255) NOT NULL, "PROPERTYTYPE" VARCHAR(255) NOT NULL, "PROPERTYVALUE" VARCHAR(1024), CONSTRAINT "PROJECT_PROPERTY_PK" PRIMARY KEY ("ID"));

CREATE TABLE "NOTIFICATIONPUBLISHER" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DEFAULT_PUBLISHER" BOOLEAN NOT NULL, "DESCRIPTION" VARCHAR(255), "NAME" VARCHAR(255) NOT NULL, "PUBLISHER_CLASS" VARCHAR(1024) NOT NULL, "TEMPLATE" TEXT, "TEMPLATE_MIME_TYPE" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "NOTIFICATIONPUBLISHER_PK" PRIMARY KEY ("ID"));

CREATE TABLE "PORTFOLIOMETRICS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMPONENTS" INTEGER NOT NULL, "CRITICAL" INTEGER NOT NULL, "FINDINGS_AUDITED" INTEGER, "FINDINGS_TOTAL" INTEGER, "FINDINGS_UNAUDITED" INTEGER, "FIRST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "HIGH" INTEGER NOT NULL, "RISKSCORE" FLOAT8 NOT NULL, "LAST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "LOW" INTEGER NOT NULL, "MEDIUM" INTEGER NOT NULL, "POLICYVIOLATIONS_AUDITED" INTEGER, "POLICYVIOLATIONS_FAIL" INTEGER, "POLICYVIOLATIONS_INFO" INTEGER, "POLICYVIOLATIONS_LICENSE_AUDITED" INTEGER, "POLICYVIOLATIONS_LICENSE_TOTAL" INTEGER, "POLICYVIOLATIONS_LICENSE_UNAUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_AUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_TOTAL" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_AUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_TOTAL" INTEGER, "POLICYVIOLATIONS_SECURITY_UNAUDITED" INTEGER, "POLICYVIOLATIONS_TOTAL" INTEGER, "POLICYVIOLATIONS_UNAUDITED" INTEGER, "POLICYVIOLATIONS_WARN" INTEGER, "PROJECTS" INTEGER NOT NULL, "SUPPRESSED" INTEGER NOT NULL, "UNASSIGNED_SEVERITY" INTEGER, "VULNERABILITIES" INTEGER NOT NULL, "VULNERABLECOMPONENTS" INTEGER NOT NULL, "VULNERABLEPROJECTS" INTEGER NOT NULL, CONSTRAINT "PORTFOLIOMETRICS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "CWE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CWEID" INTEGER NOT NULL, "NAME" VARCHAR(255) NOT NULL, CONSTRAINT "CWE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "INTEGRITY_ANALYSIS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMPONENT_ID" BIGINT NOT NULL, "INTEGRITY_CHECK_STATUS" VARCHAR(255) NOT NULL, "MD5_HASH_MATCH_STATUS" VARCHAR(255) NOT NULL, "SHA1_HASH_MATCH_STATUS" VARCHAR(255) NOT NULL, "SHA256_HASH_MATCH_STATUS" VARCHAR(255) NOT NULL, "SHA512_HASH_MATCH_STATUS" VARCHAR(255) NOT NULL, "UPDATED_AT" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "INTEGRITY_ANALYSIS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "DEPENDENCYMETRICS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMPONENT_ID" BIGINT NOT NULL, "CRITICAL" INTEGER NOT NULL, "FINDINGS_AUDITED" INTEGER, "FINDINGS_TOTAL" INTEGER, "FINDINGS_UNAUDITED" INTEGER, "FIRST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "HIGH" INTEGER NOT NULL, "RISKSCORE" FLOAT8 NOT NULL, "LAST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "LOW" INTEGER NOT NULL, "MEDIUM" INTEGER NOT NULL, "POLICYVIOLATIONS_AUDITED" INTEGER, "POLICYVIOLATIONS_FAIL" INTEGER, "POLICYVIOLATIONS_INFO" INTEGER, "POLICYVIOLATIONS_LICENSE_AUDITED" INTEGER, "POLICYVIOLATIONS_LICENSE_TOTAL" INTEGER, "POLICYVIOLATIONS_LICENSE_UNAUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_AUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_TOTAL" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_AUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_TOTAL" INTEGER, "POLICYVIOLATIONS_SECURITY_UNAUDITED" INTEGER, "POLICYVIOLATIONS_TOTAL" INTEGER, "POLICYVIOLATIONS_UNAUDITED" INTEGER, "POLICYVIOLATIONS_WARN" INTEGER, "PROJECT_ID" BIGINT NOT NULL, "SUPPRESSED" INTEGER NOT NULL, "UNASSIGNED_SEVERITY" INTEGER, "VULNERABILITIES" INTEGER NOT NULL, CONSTRAINT "DEPENDENCYMETRICS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "POLICY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "INCLUDE_CHILDREN" BOOLEAN, "NAME" VARCHAR(255) NOT NULL, "OPERATOR" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, "VIOLATIONSTATE" VARCHAR(255) NOT NULL, CONSTRAINT "POLICY_PK" PRIMARY KEY ("ID"));

CREATE TABLE "LDAPUSER" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DN" VARCHAR(255) NOT NULL, "EMAIL" VARCHAR(255), "USERNAME" VARCHAR(255), CONSTRAINT "LDAPUSER_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VULNERABLESOFTWARE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CPE22" VARCHAR(255), "CPE23" VARCHAR(255), "EDITION" VARCHAR(255), "LANGUAGE" VARCHAR(255), "OTHER" VARCHAR(255), "PART" VARCHAR(255), "PRODUCT" VARCHAR(255), "PURL" VARCHAR(255), "PURL_NAME" VARCHAR(255), "PURL_NAMESPACE" VARCHAR(255), "PURL_QUALIFIERS" VARCHAR(255), "PURL_SUBPATH" VARCHAR(255), "PURL_TYPE" VARCHAR(255), "PURL_VERSION" VARCHAR(255), "SWEDITION" VARCHAR(255), "TARGETHW" VARCHAR(255), "TARGETSW" VARCHAR(255), "UPDATE" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VENDOR" VARCHAR(255), "VERSION" VARCHAR(255), "VERSIONENDEXCLUDING" VARCHAR(255), "VERSIONENDINCLUDING" VARCHAR(255), "VERSIONSTARTEXCLUDING" VARCHAR(255), "VERSIONSTARTINCLUDING" VARCHAR(255), "VULNERABLE" BOOLEAN NOT NULL, CONSTRAINT "VULNERABLESOFTWARE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "ANALYSIS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DETAILS" TEXT, "JUSTIFICATION" VARCHAR(255), "RESPONSE" VARCHAR(255), "STATE" VARCHAR(255) NOT NULL, "COMPONENT_ID" BIGINT, "PROJECT_ID" BIGINT, "SUPPRESSED" BOOLEAN NOT NULL, "VULNERABILITY_ID" BIGINT NOT NULL, CONSTRAINT "ANALYSIS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VEX" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "IMPORTED" TIMESTAMP WITH TIME ZONE NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "SERIAL_NUMBER" VARCHAR(255), "SPEC_VERSION" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VEX_FORMAT" VARCHAR(255), "VEX_VERSION" INTEGER, CONSTRAINT "VEX_PK" PRIMARY KEY ("ID"));

CREATE TABLE "AFFECTEDVERSIONATTRIBUTION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "FIRST_SEEN" TIMESTAMP WITH TIME ZONE NOT NULL, "LAST_SEEN" TIMESTAMP WITH TIME ZONE NOT NULL, "SOURCE" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, "VULNERABILITY" BIGINT NOT NULL, "VULNERABLE_SOFTWARE" BIGINT NOT NULL, CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "TEAM" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "NAME" VARCHAR(50) NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "TEAM_PK" PRIMARY KEY ("ID"));

CREATE TABLE "OIDCUSER" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "EMAIL" VARCHAR(255), "SUBJECT_IDENTIFIER" VARCHAR(255), "USERNAME" VARCHAR(255) NOT NULL, CONSTRAINT "OIDCUSER_PK" PRIMARY KEY ("ID"));

CREATE TABLE "MANAGEDUSER" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "EMAIL" VARCHAR(255), "FORCE_PASSWORD_CHANGE" BOOLEAN NOT NULL, "FULLNAME" VARCHAR(255), "LAST_PASSWORD_CHANGE" TIMESTAMP WITH TIME ZONE NOT NULL, "NON_EXPIRY_PASSWORD" BOOLEAN NOT NULL, "PASSWORD" VARCHAR(255) NOT NULL, "SUSPENDED" BOOLEAN NOT NULL, "USERNAME" VARCHAR(255), CONSTRAINT "MANAGEDUSER_PK" PRIMARY KEY ("ID"));

CREATE TABLE "OIDCGROUP" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "NAME" VARCHAR(1024) NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "OIDCGROUP_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VULNERABILITYALIAS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CVE_ID" VARCHAR(255), "GHSA_ID" VARCHAR(255), "GSD_ID" VARCHAR(255), "INTERNAL_ID" VARCHAR(255), "OSV_ID" VARCHAR(255), "SNYK_ID" VARCHAR(255), "SONATYPE_ID" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VULNDB_ID" VARCHAR(255), CONSTRAINT "VULNERABILITYALIAS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "CPE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CPE22" VARCHAR(255), "CPE23" VARCHAR(255) NOT NULL, "EDITION" VARCHAR(255), "LANGUAGE" VARCHAR(255), "OTHER" VARCHAR(255), "PART" VARCHAR(255), "PRODUCT" VARCHAR(255), "SWEDITION" VARCHAR(255), "TARGETHW" VARCHAR(255), "TARGETSW" VARCHAR(255), "TITLE" VARCHAR(255), "UPDATE" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VENDOR" VARCHAR(255), "VERSION" VARCHAR(255), CONSTRAINT "CPE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "TAG" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "NAME" VARCHAR(255) NOT NULL, CONSTRAINT "TAG_PK" PRIMARY KEY ("ID"));

CREATE TABLE "REPOSITORY_META_COMPONENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "LAST_CHECK" TIMESTAMP WITH TIME ZONE NOT NULL, "LATEST_VERSION" VARCHAR(255) NOT NULL, "NAME" VARCHAR(255) NOT NULL, "NAMESPACE" VARCHAR(255), "PUBLISHED" TIMESTAMP WITH TIME ZONE, "REPOSITORY_TYPE" VARCHAR(255) NOT NULL, CONSTRAINT "REPOSITORY_META_COMPONENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "PERMISSION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DESCRIPTION" TEXT, "NAME" VARCHAR(255) NOT NULL, CONSTRAINT "PERMISSION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VIOLATIONANALYSIS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "STATE" VARCHAR(255) NOT NULL, "COMPONENT_ID" BIGINT, "POLICYVIOLATION_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT, "SUPPRESSED" BOOLEAN NOT NULL, CONSTRAINT "VIOLATIONANALYSIS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "APIKEY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "APIKEY" VARCHAR(255) NOT NULL, CONSTRAINT "APIKEY_PK" PRIMARY KEY ("ID"));

CREATE TABLE "FINDINGATTRIBUTION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ALT_ID" VARCHAR(255), "ANALYZERIDENTITY" VARCHAR(255) NOT NULL, "ATTRIBUTED_ON" TIMESTAMP WITH TIME ZONE NOT NULL, "COMPONENT_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "REFERENCE_URL" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VULNERABILITY_ID" BIGINT NOT NULL, CONSTRAINT "FINDINGATTRIBUTION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "INTEGRITY_META_COMPONENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "LAST_FETCH" TIMESTAMP WITH TIME ZONE, "MD5" VARCHAR(32), "PUBLISHED_AT" TIMESTAMP WITH TIME ZONE, "PURL" VARCHAR(1024) NOT NULL, "REPOSITORY_URL" VARCHAR(1024), "SHA1" VARCHAR(40), "SHA256" VARCHAR(64), "SHA512" VARCHAR(128), "STATUS" VARCHAR(64), CONSTRAINT "INTEGRITY_META_COMPONENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "POLICYVIOLATION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMPONENT_ID" BIGINT NOT NULL, "POLICYCONDITION_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "TEXT" VARCHAR(255), "TIMESTAMP" TIMESTAMP WITH TIME ZONE NOT NULL, "TYPE" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "POLICYVIOLATION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "POLICYCONDITION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "OPERATOR" VARCHAR(255) NOT NULL, "POLICY_ID" BIGINT NOT NULL, "SUBJECT" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, "VALUE" TEXT NOT NULL, "VIOLATIONTYPE" VARCHAR(255), CONSTRAINT "POLICYCONDITION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "NOTIFICATIONRULE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ENABLED" BOOLEAN NOT NULL, "MESSAGE" VARCHAR(1024), "NAME" VARCHAR(255) NOT NULL, "NOTIFICATION_LEVEL" VARCHAR(255), "NOTIFY_CHILDREN" BOOLEAN, "NOTIFY_ON" VARCHAR(1024), "PUBLISHER" BIGINT, "PUBLISHER_CONFIG" TEXT, "SCOPE" VARCHAR(255) NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "NOTIFICATIONRULE_PK" PRIMARY KEY ("ID"));

CREATE TABLE "SERVICECOMPONENT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "AUTHENTICATED" BOOLEAN, "X_TRUST_BOUNDARY" BOOLEAN, "DATA" BYTEA, "DESCRIPTION" VARCHAR(1024), "ENDPOINTS" BYTEA, "EXTERNAL_REFERENCES" BYTEA, "GROUP" VARCHAR(255), "LAST_RISKSCORE" FLOAT8 DEFAULT '0' NOT NULL, "NAME" VARCHAR(255) NOT NULL, "TEXT" TEXT, "PARENT_SERVICECOMPONENT_ID" BIGINT, "PROJECT_ID" BIGINT NOT NULL, "PROVIDER_ID" BYTEA, "UUID" VARCHAR(36) NOT NULL, "VERSION" VARCHAR(255), CONSTRAINT "SERVICECOMPONENT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "MAPPEDOIDCGROUP" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "GROUP_ID" BIGINT NOT NULL, "TEAM_ID" BIGINT NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "MAPPEDOIDCGROUP_PK" PRIMARY KEY ("ID"));

CREATE TABLE "MAPPEDLDAPGROUP" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DN" VARCHAR(1024) NOT NULL, "TEAM_ID" BIGINT NOT NULL, "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "MAPPEDLDAPGROUP_PK" PRIMARY KEY ("ID"));

CREATE TABLE "VULNERABILITY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CREATED" TIMESTAMP WITH TIME ZONE, "CREDITS" TEXT, "CVSSV2BASESCORE" numeric, "CVSSV2EXPLOITSCORE" numeric, "CVSSV2IMPACTSCORE" numeric, "CVSSV2VECTOR" VARCHAR(255), "CVSSV3BASESCORE" numeric, "CVSSV3EXPLOITSCORE" numeric, "CVSSV3IMPACTSCORE" numeric, "CVSSV3VECTOR" VARCHAR(255), "CWES" VARCHAR(255), "DESCRIPTION" TEXT, "DETAIL" TEXT, "EPSSPERCENTILE" numeric, "EPSSSCORE" numeric, "FRIENDLYVULNID" VARCHAR(255), "OWASPRRBUSINESSIMPACTSCORE" numeric, "OWASPRRLIKELIHOODSCORE" numeric, "OWASPRRTECHNICALIMPACTSCORE" numeric, "OWASPRRVECTOR" VARCHAR(255), "PATCHEDVERSIONS" VARCHAR(255), "PUBLISHED" TIMESTAMP WITH TIME ZONE, "RECOMMENDATION" TEXT, "REFERENCES" TEXT, "SEVERITY" VARCHAR(255), "SOURCE" VARCHAR(255) NOT NULL, "SUBTITLE" VARCHAR(255), "TITLE" VARCHAR(255), "UPDATED" TIMESTAMP WITH TIME ZONE, "UUID" VARCHAR(36) NOT NULL, "VULNID" VARCHAR(255) NOT NULL, "VULNERABLEVERSIONS" VARCHAR(255), CONSTRAINT "VULNERABILITY_PK" PRIMARY KEY ("ID"));

CREATE TABLE "BOM" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "BOM_FORMAT" VARCHAR(255), "BOM_VERSION" INTEGER, "IMPORTED" TIMESTAMP WITH TIME ZONE NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "SERIAL_NUMBER" VARCHAR(255), "SPEC_VERSION" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, CONSTRAINT "BOM_PK" PRIMARY KEY ("ID"));

CREATE TABLE "PROJECT" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ACTIVE" BOOLEAN, "AUTHOR" VARCHAR(255), "CLASSIFIER" VARCHAR(255), "CPE" VARCHAR(255), "DESCRIPTION" VARCHAR(255), "DIRECT_DEPENDENCIES" TEXT, "EXTERNAL_REFERENCES" BYTEA, "GROUP" VARCHAR(255), "LAST_BOM_IMPORTED" TIMESTAMP WITH TIME ZONE, "LAST_BOM_IMPORTED_FORMAT" VARCHAR(255), "LAST_RISKSCORE" FLOAT8, "NAME" VARCHAR(255) NOT NULL, "PARENT_PROJECT_ID" BIGINT, "PUBLISHER" VARCHAR(255), "PURL" VARCHAR(255), "SWIDTAGID" VARCHAR(255), "UUID" VARCHAR(36) NOT NULL, "VERSION" VARCHAR(255), CONSTRAINT "PROJECT_PK" PRIMARY KEY ("ID"));

CREATE TABLE "PROJECTMETRICS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "COMPONENTS" INTEGER NOT NULL, "CRITICAL" INTEGER NOT NULL, "FINDINGS_AUDITED" INTEGER, "FINDINGS_TOTAL" INTEGER, "FINDINGS_UNAUDITED" INTEGER, "FIRST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "HIGH" INTEGER NOT NULL, "RISKSCORE" FLOAT8 NOT NULL, "LAST_OCCURRENCE" TIMESTAMP WITH TIME ZONE NOT NULL, "LOW" INTEGER NOT NULL, "MEDIUM" INTEGER NOT NULL, "POLICYVIOLATIONS_AUDITED" INTEGER, "POLICYVIOLATIONS_FAIL" INTEGER, "POLICYVIOLATIONS_INFO" INTEGER, "POLICYVIOLATIONS_LICENSE_AUDITED" INTEGER, "POLICYVIOLATIONS_LICENSE_TOTAL" INTEGER, "POLICYVIOLATIONS_LICENSE_UNAUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_AUDITED" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_TOTAL" INTEGER, "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_AUDITED" INTEGER, "POLICYVIOLATIONS_SECURITY_TOTAL" INTEGER, "POLICYVIOLATIONS_SECURITY_UNAUDITED" INTEGER, "POLICYVIOLATIONS_TOTAL" INTEGER, "POLICYVIOLATIONS_UNAUDITED" INTEGER, "POLICYVIOLATIONS_WARN" INTEGER, "PROJECT_ID" BIGINT NOT NULL, "SUPPRESSED" INTEGER NOT NULL, "UNASSIGNED_SEVERITY" INTEGER, "VULNERABILITIES" INTEGER NOT NULL, "VULNERABLECOMPONENTS" INTEGER NOT NULL, CONSTRAINT "PROJECTMETRICS_PK" PRIMARY KEY ("ID"));

CREATE TABLE "LICENSEGROUP_LICENSE" ("LICENSEGROUP_ID" BIGINT NOT NULL, "LICENSE_ID" BIGINT NOT NULL);

CREATE TABLE "OIDCUSERS_PERMISSIONS" ("PERMISSION_ID" BIGINT NOT NULL, "OIDCUSER_ID" BIGINT NOT NULL);

CREATE TABLE "COMPONENTS_VULNERABILITIES" ("COMPONENT_ID" BIGINT NOT NULL, "VULNERABILITY_ID" BIGINT NOT NULL);

CREATE TABLE "OIDCUSERS_TEAMS" ("OIDCUSERS_ID" BIGINT NOT NULL, "TEAM_ID" BIGINT NOT NULL);

CREATE TABLE "LDAPUSERS_PERMISSIONS" ("LDAPUSER_ID" BIGINT NOT NULL, "PERMISSION_ID" BIGINT NOT NULL);

CREATE TABLE "SERVICECOMPONENTS_VULNERABILITIES" ("VULNERABILITY_ID" BIGINT NOT NULL, "SERVICECOMPONENT_ID" BIGINT NOT NULL);

CREATE TABLE "VULNERABLESOFTWARE_VULNERABILITIES" ("VULNERABILITY_ID" BIGINT NOT NULL, "VULNERABLESOFTWARE_ID" BIGINT NOT NULL);

CREATE TABLE "NOTIFICATIONRULE_TEAMS" ("NOTIFICATIONRULE_ID" BIGINT NOT NULL, "TEAM_ID" BIGINT);

CREATE TABLE "PROJECTS_TAGS" ("TAG_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT NOT NULL);

CREATE TABLE "LDAPUSERS_TEAMS" ("TEAM_ID" BIGINT NOT NULL, "LDAPUSER_ID" BIGINT NOT NULL);

CREATE TABLE "MANAGEDUSERS_PERMISSIONS" ("MANAGEDUSER_ID" BIGINT NOT NULL, "PERMISSION_ID" BIGINT NOT NULL);

CREATE TABLE "TEAMS_PERMISSIONS" ("TEAM_ID" BIGINT NOT NULL, "PERMISSION_ID" BIGINT NOT NULL);

CREATE TABLE "NOTIFICATIONRULE_PROJECTS" ("NOTIFICATIONRULE_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT);

CREATE TABLE "APIKEYS_TEAMS" ("TEAM_ID" BIGINT NOT NULL, "APIKEY_ID" BIGINT NOT NULL);

CREATE TABLE "PROJECT_ACCESS_TEAMS" ("PROJECT_ID" BIGINT NOT NULL, "TEAM_ID" BIGINT);

CREATE TABLE "MANAGEDUSERS_TEAMS" ("TEAM_ID" BIGINT NOT NULL, "MANAGEDUSER_ID" BIGINT NOT NULL);

CREATE TABLE "POLICY_PROJECTS" ("POLICY_ID" BIGINT NOT NULL, "PROJECT_ID" BIGINT);

CREATE TABLE "POLICY_TAGS" ("POLICY_ID" BIGINT NOT NULL, "TAG_ID" BIGINT);

CREATE TABLE "SCHEMAVERSION" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "VERSION" VARCHAR(255), CONSTRAINT "SCHEMAVERSION_PK" PRIMARY KEY ("ID"));

CREATE TABLE "INSTALLEDUPGRADES" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ENDTIME" TIMESTAMP WITH TIME ZONE, "STARTTIME" TIMESTAMP WITH TIME ZONE, "UPGRADECLASS" VARCHAR(255), CONSTRAINT "INSTALLEDUPGRADES_PK" PRIMARY KEY ("ID"));

CREATE TABLE "CONFIGPROPERTY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "DESCRIPTION" VARCHAR(255), "GROUPNAME" VARCHAR(255) NOT NULL, "PROPERTYNAME" VARCHAR(255) NOT NULL, "PROPERTYTYPE" VARCHAR(255) NOT NULL, "PROPERTYVALUE" VARCHAR(1024), CONSTRAINT "CONFIGPROPERTY_PK" PRIMARY KEY ("ID"));

CREATE INDEX "WORKFLOW_STATE_PARENT_STEP_ID_IDX" ON "WORKFLOW_STATE"("PARENT_STEP_ID");

ALTER TABLE "WORKFLOW_STATE" ADD CONSTRAINT "WORKFLOW_STATE_COMPOSITE_IDX" UNIQUE ("TOKEN", "STEP");

CREATE INDEX "COMPONENT_GROUP_IDX" ON "COMPONENT"("GROUP");

CREATE INDEX "COMPONENT_PARENT_COMPONENT_ID_IDX" ON "COMPONENT"("PARENT_COMPONENT_ID");

CREATE INDEX "COMPONENT_BLAKE3_IDX" ON "COMPONENT"("BLAKE3");

CREATE INDEX "COMPONENT_PURL_IDX" ON "COMPONENT"("PURL");

CREATE INDEX "COMPONENT_SHA3_512_IDX" ON "COMPONENT"("SHA3_512");

CREATE INDEX "COMPONENT_CPE_IDX" ON "COMPONENT"("CPE");

CREATE INDEX "COMPONENT_LAST_RISKSCORE_IDX" ON "COMPONENT"("LAST_RISKSCORE");

CREATE INDEX "COMPONENT_SHA512_IDX" ON "COMPONENT"("SHA_512");

CREATE INDEX "COMPONENT_SHA3_256_IDX" ON "COMPONENT"("SHA3_256");

CREATE INDEX "COMPONENT_MD5_IDX" ON "COMPONENT"("MD5");

CREATE INDEX "COMPONENT_SHA384_IDX" ON "COMPONENT"("SHA_384");

CREATE INDEX "COMPONENT_BLAKE2B_384_IDX" ON "COMPONENT"("BLAKE2B_384");

CREATE INDEX "COMPONENT_CLASSIFIER_IDX" ON "COMPONENT"("CLASSIFIER");

CREATE INDEX "COMPONENT_SWID_TAGID_IDX" ON "COMPONENT"("SWIDTAGID");

CREATE INDEX "COMPONENT_PURL_COORDINATES_IDX" ON "COMPONENT"("PURLCOORDINATES");

CREATE INDEX "COMPONENT_BLAKE2B_512_IDX" ON "COMPONENT"("BLAKE2B_512");

CREATE INDEX "COMPONENT_LICENSE_ID_IDX" ON "COMPONENT"("LICENSE_ID");

CREATE INDEX "COMPONENT_NAME_IDX" ON "COMPONENT"("NAME");

CREATE INDEX "COMPONENT_SHA1_IDX" ON "COMPONENT"("SHA1");

CREATE INDEX "COMPONENT_PROJECT_ID_IDX" ON "COMPONENT"("PROJECT_ID");

CREATE INDEX "COMPONENT_SHA3_384_IDX" ON "COMPONENT"("SHA3_384");

CREATE INDEX "COMPONENT_BLAKE2B_256_IDX" ON "COMPONENT"("BLAKE2B_256");

CREATE INDEX "COMPONENT_SHA256_IDX" ON "COMPONENT"("SHA_256");

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "SUBSCRIBERCLASS_IDX" ON "EVENTSERVICELOG"("SUBSCRIBERCLASS");

CREATE INDEX "LICENSEGROUP_NAME_IDX" ON "LICENSEGROUP"("NAME");

ALTER TABLE "LICENSEGROUP" ADD CONSTRAINT "LICENSEGROUP_UUID_IDX" UNIQUE ("UUID");

CREATE UNIQUE INDEX "LICENSE_LICENSEID_IDX" ON "LICENSE"("LICENSEID");

CREATE INDEX "LICENSE_NAME_IDX" ON "LICENSE"("NAME");

ALTER TABLE "LICENSE" ADD CONSTRAINT "LICENSE_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "ANALYSISCOMMENT_ANALYSIS_ID_IDX" ON "ANALYSISCOMMENT"("ANALYSIS_ID");

CREATE INDEX "VIOLATIONANALYSISCOMMENT_VIOLATIONANALYSIS_ID_IDX" ON "VIOLATIONANALYSISCOMMENT"("VIOLATIONANALYSIS_ID");

CREATE INDEX "REPOSITORY_UUID_IDX" ON "REPOSITORY"("UUID");

ALTER TABLE "REPOSITORY" ADD CONSTRAINT "REPOSITORY_COMPOUND_IDX" UNIQUE ("TYPE", "IDENTIFIER");

ALTER TABLE "VULNERABILITYSCAN" ADD CONSTRAINT "VULNERABILITY_SCAN_TOKEN_IDX" UNIQUE ("TOKEN");

CREATE INDEX "PROJECT_PROPERTY_PROJECT_ID_IDX" ON "PROJECT_PROPERTY"("PROJECT_ID");

ALTER TABLE "PROJECT_PROPERTY" ADD CONSTRAINT "PROJECT_PROPERTY_KEYS_IDX" UNIQUE ("PROJECT_ID", "GROUPNAME", "PROPERTYNAME");

ALTER TABLE "NOTIFICATIONPUBLISHER" ADD CONSTRAINT "NOTIFICATIONPUBLISHER_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "PORTFOLIOMETRICS_FIRST_OCCURRENCE_IDX" ON "PORTFOLIOMETRICS"("FIRST_OCCURRENCE");

CREATE INDEX "PORTFOLIOMETRICS_LAST_OCCURRENCE_IDX" ON "PORTFOLIOMETRICS"("LAST_OCCURRENCE");

ALTER TABLE "CWE" ADD CONSTRAINT "CWE_CWEID_IDX" UNIQUE ("CWEID");

CREATE INDEX "INTEGRITY_ANALYSIS_COMPONENT_ID_IDX" ON "INTEGRITY_ANALYSIS"("COMPONENT_ID");

CREATE INDEX "DEPENDENCYMETRICS_PROJECT_ID_IDX" ON "DEPENDENCYMETRICS"("PROJECT_ID");

CREATE INDEX "DEPENDENCYMETRICS_FIRST_OCCURRENCE_IDX" ON "DEPENDENCYMETRICS"("FIRST_OCCURRENCE");

CREATE INDEX "DEPENDENCYMETRICS_COMPONENT_ID_IDX" ON "DEPENDENCYMETRICS"("COMPONENT_ID");

CREATE INDEX "DEPENDENCYMETRICS_COMPOSITE_IDX" ON "DEPENDENCYMETRICS"("PROJECT_ID", "COMPONENT_ID");

CREATE INDEX "DEPENDENCYMETRICS_LAST_OCCURRENCE_IDX" ON "DEPENDENCYMETRICS"("LAST_OCCURRENCE");

CREATE INDEX "POLICY_NAME_IDX" ON "POLICY"("NAME");

ALTER TABLE "POLICY" ADD CONSTRAINT "POLICY_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "LDAPUSER" ADD CONSTRAINT "LDAPUSER_USERNAME_IDX" UNIQUE ("USERNAME");

CREATE INDEX "VULNERABLESOFTWARE_PART_VENDOR_PRODUCT_IDX" ON "VULNERABLESOFTWARE"("PART", "VENDOR", "PRODUCT");

CREATE INDEX "VULNERABLESOFTWARE_CPE_PURL_PARTS_IDX" ON "VULNERABLESOFTWARE"("PART", "VENDOR", "PRODUCT", "PURL_TYPE", "PURL_NAMESPACE", "PURL_NAME");

CREATE INDEX "VULNERABLESOFTWARE_PURL_TYPE_NS_NAME_IDX" ON "VULNERABLESOFTWARE"("PURL_TYPE", "PURL_NAMESPACE", "PURL_NAME");

CREATE INDEX "VULNERABLESOFTWARE_PURL_VERSION_RANGE_IDX" ON "VULNERABLESOFTWARE"("PURL", "VERSIONENDEXCLUDING", "VERSIONENDINCLUDING", "VERSIONSTARTEXCLUDING", "VERSIONSTARTINCLUDING");

CREATE INDEX "VULNERABLESOFTWARE_CPE23_VERSION_RANGE_IDX" ON "VULNERABLESOFTWARE"("CPE23", "VERSIONENDEXCLUDING", "VERSIONENDINCLUDING", "VERSIONSTARTEXCLUDING", "VERSIONSTARTINCLUDING");

ALTER TABLE "VULNERABLESOFTWARE" ADD CONSTRAINT "VULNERABLESOFTWARE_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "ANALYSIS_VULNERABILITY_ID_IDX" ON "ANALYSIS"("VULNERABILITY_ID");

CREATE INDEX "ANALYSIS_PROJECT_ID_IDX" ON "ANALYSIS"("PROJECT_ID");

CREATE INDEX "ANALYSIS_COMPONENT_ID_IDX" ON "ANALYSIS"("COMPONENT_ID");

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_COMPOSITE_IDX" UNIQUE ("PROJECT_ID", "COMPONENT_ID", "VULNERABILITY_ID");

CREATE INDEX "VEX_PROJECT_ID_IDX" ON "VEX"("PROJECT_ID");

ALTER TABLE "VEX" ADD CONSTRAINT "VEX_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_VULNERABLE_SOFTWARE_IDX" ON "AFFECTEDVERSIONATTRIBUTION"("VULNERABLE_SOFTWARE");

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_KEYS_IDX" ON "AFFECTEDVERSIONATTRIBUTION"("VULNERABILITY", "VULNERABLE_SOFTWARE");

CREATE INDEX "AFFECTEDVERSIONATTRIBUTION_VULNERABILITY_IDX" ON "AFFECTEDVERSIONATTRIBUTION"("VULNERABILITY");

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "TEAM" ADD CONSTRAINT "TEAM_UUID_IDX" UNIQUE ("UUID");

ALTER TABLE "OIDCUSER" ADD CONSTRAINT "OIDCUSER_USERNAME_IDX" UNIQUE ("USERNAME");

ALTER TABLE "MANAGEDUSER" ADD CONSTRAINT "MANAGEDUSER_USERNAME_IDX" UNIQUE ("USERNAME");

ALTER TABLE "OIDCGROUP" ADD CONSTRAINT "OIDCGROUP_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "VULNERABILITYALIAS_INTERNAL_ID_IDX" ON "VULNERABILITYALIAS"("INTERNAL_ID");

CREATE INDEX "VULNERABILITYALIAS_SONATYPE_ID_IDX" ON "VULNERABILITYALIAS"("SONATYPE_ID");

CREATE INDEX "VULNERABILITYALIAS_OSV_ID_IDX" ON "VULNERABILITYALIAS"("OSV_ID");

CREATE INDEX "VULNERABILITYALIAS_GSD_ID_IDX" ON "VULNERABILITYALIAS"("GSD_ID");

CREATE INDEX "VULNERABILITYALIAS_VULNDB_ID_IDX" ON "VULNERABILITYALIAS"("VULNDB_ID");

CREATE INDEX "VULNERABILITYALIAS_GHSA_ID_IDX" ON "VULNERABILITYALIAS"("GHSA_ID");

CREATE INDEX "VULNERABILITYALIAS_CVE_ID_IDX" ON "VULNERABILITYALIAS"("CVE_ID");

CREATE INDEX "VULNERABILITYALIAS_SNYK_ID_IDX" ON "VULNERABILITYALIAS"("SNYK_ID");

ALTER TABLE "VULNERABILITYALIAS" ADD CONSTRAINT "VULNERABILITYALIAS_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "CPE_CPE22_IDX" ON "CPE"("CPE22");

CREATE INDEX "CPE_PRODUCT_IDX" ON "CPE"("PRODUCT");

CREATE INDEX "CPE_VENDOR_IDX" ON "CPE"("VENDOR");

CREATE UNIQUE INDEX "CPE_CPE23_IDX" ON "CPE"("CPE23");

ALTER TABLE "CPE" ADD CONSTRAINT "CPE_UUID_IDX" UNIQUE ("UUID");

CREATE UNIQUE INDEX "REPOSITORY_META_COMPONENT_COMPOUND_IDX" ON "REPOSITORY_META_COMPONENT"("REPOSITORY_TYPE", "NAMESPACE", "NAME");

CREATE INDEX "REPOSITORY_META_COMPONENT_LASTCHECK_IDX" ON "REPOSITORY_META_COMPONENT"("LAST_CHECK");

ALTER TABLE "PERMISSION" ADD CONSTRAINT "PERMISSION_IDX" UNIQUE ("NAME");

CREATE INDEX "VIOLATIONANALYSIS_COMPONENT_ID_IDX" ON "VIOLATIONANALYSIS"("COMPONENT_ID");

CREATE INDEX "VIOLATIONANALYSIS_PROJECT_ID_IDX" ON "VIOLATIONANALYSIS"("PROJECT_ID");

CREATE INDEX "VIOLATIONANALYSIS_POLICYVIOLATION_ID_IDX" ON "VIOLATIONANALYSIS"("POLICYVIOLATION_ID");

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_COMPOSITE_IDX" UNIQUE ("PROJECT_ID", "COMPONENT_ID", "POLICYVIOLATION_ID");

ALTER TABLE "APIKEY" ADD CONSTRAINT "APIKEY_IDX" UNIQUE ("APIKEY");

CREATE INDEX "FINDINGATTRIBUTION_PROJECT_ID_IDX" ON "FINDINGATTRIBUTION"("PROJECT_ID");

CREATE INDEX "FINDINGATTRIBUTION_COMPONENT_ID_IDX" ON "FINDINGATTRIBUTION"("COMPONENT_ID");

CREATE INDEX "FINDINGATTRIBUTION_COMPOUND_IDX" ON "FINDINGATTRIBUTION"("COMPONENT_ID", "VULNERABILITY_ID");

CREATE INDEX "FINDINGATTRIBUTION_VULNERABILITY_ID_IDX" ON "FINDINGATTRIBUTION"("VULNERABILITY_ID");

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "PURL_IDX" ON "INTEGRITY_META_COMPONENT"("PURL");

CREATE INDEX "LAST_FETCH_IDX" ON "INTEGRITY_META_COMPONENT"("LAST_FETCH");

ALTER TABLE "INTEGRITY_META_COMPONENT" ADD CONSTRAINT "INTEGRITY_META_COMPONENT_U1" UNIQUE ("PURL");

CREATE INDEX "POLICYVIOLATION_PROJECT_IDX" ON "POLICYVIOLATION"("PROJECT_ID");

CREATE INDEX "POLICYVIOLATION_POLICYCONDITION_ID_IDX" ON "POLICYVIOLATION"("POLICYCONDITION_ID");

CREATE INDEX "POLICYVIOLATION_COMPONENT_IDX" ON "POLICYVIOLATION"("COMPONENT_ID");

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "POLICYCONDITION_POLICY_ID_IDX" ON "POLICYCONDITION"("POLICY_ID");

ALTER TABLE "POLICYCONDITION" ADD CONSTRAINT "POLICYCONDITION_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "NOTIFICATIONRULE_PUBLISHER_IDX" ON "NOTIFICATIONRULE"("PUBLISHER");

ALTER TABLE "NOTIFICATIONRULE" ADD CONSTRAINT "NOTIFICATIONRULE_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "SERVICECOMPONENT_LAST_RISKSCORE_IDX" ON "SERVICECOMPONENT"("LAST_RISKSCORE");

CREATE INDEX "SERVICECOMPONENT_PROJECT_ID_IDX" ON "SERVICECOMPONENT"("PROJECT_ID");

CREATE INDEX "SERVICECOMPONENT_PARENT_SERVICECOMPONENT_ID_IDX" ON "SERVICECOMPONENT"("PARENT_SERVICECOMPONENT_ID");

ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "MAPPEDOIDCGROUP_TEAM_ID_IDX" ON "MAPPEDOIDCGROUP"("TEAM_ID");

CREATE INDEX "MAPPEDOIDCGROUP_GROUP_ID_IDX" ON "MAPPEDOIDCGROUP"("GROUP_ID");

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_U1" UNIQUE ("TEAM_ID", "GROUP_ID");

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "MAPPEDLDAPGROUP_TEAM_ID_IDX" ON "MAPPEDLDAPGROUP"("TEAM_ID");

ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_U1" UNIQUE ("TEAM_ID", "DN");

ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "VULNERABILITY_VULNID_IDX" ON "VULNERABILITY"("VULNID");

CREATE INDEX "VULNERABILITY_PUBLISHED_IDX" ON "VULNERABILITY"("PUBLISHED");

CREATE INDEX "VULNERABILITY_UPDATED_IDX" ON "VULNERABILITY"("UPDATED");

CREATE INDEX "VULNERABILITY_CREATED_IDX" ON "VULNERABILITY"("CREATED");

ALTER TABLE "VULNERABILITY" ADD CONSTRAINT "VULNERABILITY_U1" UNIQUE ("VULNID", "SOURCE");

ALTER TABLE "VULNERABILITY" ADD CONSTRAINT "VULNERABILITY_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "BOM_PROJECT_ID_IDX" ON "BOM"("PROJECT_ID");

ALTER TABLE "BOM" ADD CONSTRAINT "BOM_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "PROJECT_SWID_TAGID_IDX" ON "PROJECT"("SWIDTAGID");

CREATE INDEX "PROJECT_CPE_IDX" ON "PROJECT"("CPE");

CREATE INDEX "PROJECT_PURL_IDX" ON "PROJECT"("PURL");

CREATE INDEX "PROJECT_CLASSIFIER_IDX" ON "PROJECT"("CLASSIFIER");

CREATE INDEX "PROJECT_GROUP_IDX" ON "PROJECT"("GROUP");

CREATE INDEX "PROJECT_LAST_RISKSCORE_IDX" ON "PROJECT"("LAST_RISKSCORE");

CREATE INDEX "PROJECT_LASTBOMIMPORT_IDX" ON "PROJECT"("LAST_BOM_IMPORTED");

CREATE INDEX "PROJECT_LASTBOMIMPORT_FORMAT_IDX" ON "PROJECT"("LAST_BOM_IMPORTED_FORMAT");

CREATE INDEX "PROJECT_NAME_IDX" ON "PROJECT"("NAME");

CREATE INDEX "PROJECT_VERSION_IDX" ON "PROJECT"("VERSION");

CREATE INDEX "PROJECT_PARENT_PROJECT_ID_IDX" ON "PROJECT"("PARENT_PROJECT_ID");

ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_UUID_IDX" UNIQUE ("UUID");

CREATE INDEX "PROJECTMETRICS_PROJECT_ID_IDX" ON "PROJECTMETRICS"("PROJECT_ID");

CREATE INDEX "PROJECTMETRICS_FIRST_OCCURRENCE_IDX" ON "PROJECTMETRICS"("FIRST_OCCURRENCE");

CREATE INDEX "PROJECTMETRICS_LAST_OCCURRENCE_IDX" ON "PROJECTMETRICS"("LAST_OCCURRENCE");

CREATE INDEX "LICENSEGROUP_LICENSE_LICENSE_ID_IDX" ON "LICENSEGROUP_LICENSE"("LICENSE_ID");

CREATE INDEX "LICENSEGROUP_LICENSE_LICENSEGROUP_ID_IDX" ON "LICENSEGROUP_LICENSE"("LICENSEGROUP_ID");

CREATE INDEX "OIDCUSERS_PERMISSIONS_OIDCUSER_ID_IDX" ON "OIDCUSERS_PERMISSIONS"("OIDCUSER_ID");

CREATE INDEX "OIDCUSERS_PERMISSIONS_PERMISSION_ID_IDX" ON "OIDCUSERS_PERMISSIONS"("PERMISSION_ID");

CREATE INDEX "COMPONENTS_VULNERABILITIES_VULNERABILITY_ID_IDX" ON "COMPONENTS_VULNERABILITIES"("VULNERABILITY_ID");

CREATE INDEX "COMPONENTS_VULNERABILITIES_COMPONENT_ID_IDX" ON "COMPONENTS_VULNERABILITIES"("COMPONENT_ID");

CREATE INDEX "OIDCUSERS_TEAMS_OIDCUSERS_ID_IDX" ON "OIDCUSERS_TEAMS"("OIDCUSERS_ID");

CREATE INDEX "OIDCUSERS_TEAMS_TEAM_ID_IDX" ON "OIDCUSERS_TEAMS"("TEAM_ID");

CREATE INDEX "LDAPUSERS_PERMISSIONS_LDAPUSER_ID_IDX" ON "LDAPUSERS_PERMISSIONS"("LDAPUSER_ID");

CREATE INDEX "LDAPUSERS_PERMISSIONS_PERMISSION_ID_IDX" ON "LDAPUSERS_PERMISSIONS"("PERMISSION_ID");

CREATE INDEX "SERVICECOMPONENTS_VULNERABILITIES_SERVICECOMPONENT_ID_IDX" ON "SERVICECOMPONENTS_VULNERABILITIES"("SERVICECOMPONENT_ID");

CREATE INDEX "SERVICECOMPONENTS_VULNERABILITIES_VULNERABILITY_ID_IDX" ON "SERVICECOMPONENTS_VULNERABILITIES"("VULNERABILITY_ID");

CREATE INDEX "VULNERABLESOFTWARE_VULNERABILITIES_VULNERABILITY_ID_IDX" ON "VULNERABLESOFTWARE_VULNERABILITIES"("VULNERABILITY_ID");

CREATE INDEX "VULNERABLESOFTWARE_VULNERABILITIES_VULNERABLESOFTWARE_ID_IDX" ON "VULNERABLESOFTWARE_VULNERABILITIES"("VULNERABLESOFTWARE_ID");

CREATE INDEX "NOTIFICATIONRULE_TEAMS_NOTIFICATIONRULE_ID_IDX" ON "NOTIFICATIONRULE_TEAMS"("NOTIFICATIONRULE_ID");

CREATE INDEX "NOTIFICATIONRULE_TEAMS_TEAM_ID_IDX" ON "NOTIFICATIONRULE_TEAMS"("TEAM_ID");

CREATE INDEX "PROJECTS_TAGS_PROJECT_ID_IDX" ON "PROJECTS_TAGS"("PROJECT_ID");

CREATE INDEX "PROJECTS_TAGS_TAG_ID_IDX" ON "PROJECTS_TAGS"("TAG_ID");

CREATE INDEX "LDAPUSERS_TEAMS_LDAPUSER_ID_IDX" ON "LDAPUSERS_TEAMS"("LDAPUSER_ID");

CREATE INDEX "LDAPUSERS_TEAMS_TEAM_ID_IDX" ON "LDAPUSERS_TEAMS"("TEAM_ID");

CREATE INDEX "MANAGEDUSERS_PERMISSIONS_MANAGEDUSER_ID_IDX" ON "MANAGEDUSERS_PERMISSIONS"("MANAGEDUSER_ID");

CREATE INDEX "MANAGEDUSERS_PERMISSIONS_PERMISSION_ID_IDX" ON "MANAGEDUSERS_PERMISSIONS"("PERMISSION_ID");

CREATE INDEX "TEAMS_PERMISSIONS_PERMISSION_ID_IDX" ON "TEAMS_PERMISSIONS"("PERMISSION_ID");

CREATE INDEX "TEAMS_PERMISSIONS_TEAM_ID_IDX" ON "TEAMS_PERMISSIONS"("TEAM_ID");

CREATE INDEX "NOTIFICATIONRULE_PROJECTS_PROJECT_ID_IDX" ON "NOTIFICATIONRULE_PROJECTS"("PROJECT_ID");

CREATE INDEX "NOTIFICATIONRULE_PROJECTS_NOTIFICATIONRULE_ID_IDX" ON "NOTIFICATIONRULE_PROJECTS"("NOTIFICATIONRULE_ID");

CREATE INDEX "APIKEYS_TEAMS_TEAM_ID_IDX" ON "APIKEYS_TEAMS"("TEAM_ID");

CREATE INDEX "APIKEYS_TEAMS_APIKEY_ID_IDX" ON "APIKEYS_TEAMS"("APIKEY_ID");

CREATE INDEX "PROJECT_ACCESS_TEAMS_TEAM_ID_IDX" ON "PROJECT_ACCESS_TEAMS"("TEAM_ID");

CREATE INDEX "PROJECT_ACCESS_TEAMS_PROJECT_ID_IDX" ON "PROJECT_ACCESS_TEAMS"("PROJECT_ID");

CREATE INDEX "MANAGEDUSERS_TEAMS_TEAM_ID_IDX" ON "MANAGEDUSERS_TEAMS"("TEAM_ID");

CREATE INDEX "MANAGEDUSERS_TEAMS_MANAGEDUSER_ID_IDX" ON "MANAGEDUSERS_TEAMS"("MANAGEDUSER_ID");

CREATE INDEX "POLICY_PROJECTS_POLICY_ID_IDX" ON "POLICY_PROJECTS"("POLICY_ID");

CREATE INDEX "POLICY_PROJECTS_PROJECT_ID_IDX" ON "POLICY_PROJECTS"("PROJECT_ID");

CREATE INDEX "POLICY_TAGS_TAG_ID_IDX" ON "POLICY_TAGS"("TAG_ID");

CREATE INDEX "POLICY_TAGS_POLICY_ID_IDX" ON "POLICY_TAGS"("POLICY_ID");

ALTER TABLE "CONFIGPROPERTY" ADD CONSTRAINT "CONFIGPROPERTY_U1" UNIQUE ("GROUPNAME", "PROPERTYNAME");

CREATE TABLE "shedlock" ("name" VARCHAR(64) NOT NULL, "lock_until" TIMESTAMP WITHOUT TIME ZONE NOT NULL, "locked_at" TIMESTAMP WITHOUT TIME ZONE NOT NULL, "locked_by" VARCHAR(255) NOT NULL, CONSTRAINT "shedlock_pk" PRIMARY KEY ("name"));

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "AFFECTEDVERSIONATTRIBUTION" ADD CONSTRAINT "AFFECTEDVERSIONATTRIBUTION_VULNERABLESOFTWARE_FK" FOREIGN KEY ("VULNERABLE_SOFTWARE") REFERENCES "VULNERABLESOFTWARE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ANALYSISCOMMENT" ADD CONSTRAINT "ANALYSISCOMMENT_ANALYSIS_FK" FOREIGN KEY ("ANALYSIS_ID") REFERENCES "ANALYSIS" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "APIKEYS_TEAMS" ADD CONSTRAINT "APIKEYS_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "APIKEYS_TEAMS" ADD CONSTRAINT "APIKEYS_TEAMS_APIKEY_FK" FOREIGN KEY ("APIKEY_ID") REFERENCES "APIKEY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "BOM" ADD CONSTRAINT "BOM_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENTS_VULNERABILITIES" ADD CONSTRAINT "COMPONENTS_VULNERABILITIES_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENTS_VULNERABILITIES" ADD CONSTRAINT "COMPONENTS_VULNERABILITIES_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_COMPONENT_FK" FOREIGN KEY ("PARENT_COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_LICENSE_FK" FOREIGN KEY ("LICENSE_ID") REFERENCES "LICENSE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "DEPENDENCYMETRICS" ADD CONSTRAINT "DEPENDENCYMETRICS_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "DEPENDENCYMETRICS" ADD CONSTRAINT "DEPENDENCYMETRICS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "FINDINGATTRIBUTION" ADD CONSTRAINT "FINDINGATTRIBUTION_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "INTEGRITY_ANALYSIS" ADD CONSTRAINT "INTEGRITY_ANALYSIS_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LDAPUSERS_PERMISSIONS" ADD CONSTRAINT "LDAPUSERS_PERMISSIONS_LDAPUSER_FK" FOREIGN KEY ("LDAPUSER_ID") REFERENCES "LDAPUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LDAPUSERS_PERMISSIONS" ADD CONSTRAINT "LDAPUSERS_PERMISSIONS_PERMISSION_FK" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LDAPUSERS_TEAMS" ADD CONSTRAINT "LDAPUSERS_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LDAPUSERS_TEAMS" ADD CONSTRAINT "LDAPUSERS_TEAMS_LDAPUSER_FK" FOREIGN KEY ("LDAPUSER_ID") REFERENCES "LDAPUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LICENSEGROUP_LICENSE" ADD CONSTRAINT "LICENSEGROUP_LICENSE_LICENSEGROUP_FK" FOREIGN KEY ("LICENSEGROUP_ID") REFERENCES "LICENSEGROUP" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "LICENSEGROUP_LICENSE" ADD CONSTRAINT "LICENSEGROUP_LICENSE_LICENSE_FK" FOREIGN KEY ("LICENSE_ID") REFERENCES "LICENSE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MANAGEDUSERS_PERMISSIONS" ADD CONSTRAINT "MANAGEDUSERS_PERMISSIONS_MANAGEDUSER_FK" FOREIGN KEY ("MANAGEDUSER_ID") REFERENCES "MANAGEDUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MANAGEDUSERS_PERMISSIONS" ADD CONSTRAINT "MANAGEDUSERS_PERMISSIONS_PERMISSION_FK" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MANAGEDUSERS_TEAMS" ADD CONSTRAINT "MANAGEDUSERS_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MANAGEDUSERS_TEAMS" ADD CONSTRAINT "MANAGEDUSERS_TEAMS_MANAGEDUSER_FK" FOREIGN KEY ("MANAGEDUSER_ID") REFERENCES "MANAGEDUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MAPPEDLDAPGROUP" ADD CONSTRAINT "MAPPEDLDAPGROUP_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_OIDCGROUP_FK" FOREIGN KEY ("GROUP_ID") REFERENCES "OIDCGROUP" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "MAPPEDOIDCGROUP" ADD CONSTRAINT "MAPPEDOIDCGROUP_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "NOTIFICATIONRULE" ADD CONSTRAINT "NOTIFICATIONRULE_NOTIFICATIONPUBLISHER_FK" FOREIGN KEY ("PUBLISHER") REFERENCES "NOTIFICATIONPUBLISHER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "NOTIFICATIONRULE_PROJECTS" ADD CONSTRAINT "NOTIFICATIONRULE_PROJECTS_NOTIFICATIONRULE_FK" FOREIGN KEY ("NOTIFICATIONRULE_ID") REFERENCES "NOTIFICATIONRULE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "NOTIFICATIONRULE_PROJECTS" ADD CONSTRAINT "NOTIFICATIONRULE_PROJECTS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "NOTIFICATIONRULE_TEAMS" ADD CONSTRAINT "NOTIFICATIONRULE_TEAMS_NOTIFICATIONRULE_FK" FOREIGN KEY ("NOTIFICATIONRULE_ID") REFERENCES "NOTIFICATIONRULE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "NOTIFICATIONRULE_TEAMS" ADD CONSTRAINT "NOTIFICATIONRULE_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "OIDCUSERS_PERMISSIONS" ADD CONSTRAINT "OIDCUSERS_PERMISSIONS_PERMISSION_FK" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "OIDCUSERS_PERMISSIONS" ADD CONSTRAINT "OIDCUSERS_PERMISSIONS_OIDCUSER_FK" FOREIGN KEY ("OIDCUSER_ID") REFERENCES "OIDCUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "OIDCUSERS_TEAMS" ADD CONSTRAINT "OIDCUSERS_TEAMS_OIDCUSER_FK" FOREIGN KEY ("OIDCUSERS_ID") REFERENCES "OIDCUSER" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "OIDCUSERS_TEAMS" ADD CONSTRAINT "OIDCUSERS_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICYCONDITION" ADD CONSTRAINT "POLICYCONDITION_POLICY_FK" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_POLICYCONDITION_FK" FOREIGN KEY ("POLICYCONDITION_ID") REFERENCES "POLICYCONDITION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICYVIOLATION" ADD CONSTRAINT "POLICYVIOLATION_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICY_PROJECTS" ADD CONSTRAINT "POLICY_PROJECTS_POLICY_FK" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICY_PROJECTS" ADD CONSTRAINT "POLICY_PROJECTS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICY_TAGS" ADD CONSTRAINT "POLICY_TAGS_POLICY_FK" FOREIGN KEY ("POLICY_ID") REFERENCES "POLICY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "POLICY_TAGS" ADD CONSTRAINT "POLICY_TAGS_TAG_FK" FOREIGN KEY ("TAG_ID") REFERENCES "TAG" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECTMETRICS" ADD CONSTRAINT "PROJECTMETRICS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECTS_TAGS" ADD CONSTRAINT "PROJECTS_TAGS_TAG_FK" FOREIGN KEY ("TAG_ID") REFERENCES "TAG" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECTS_TAGS" ADD CONSTRAINT "PROJECTS_TAGS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECT_ACCESS_TEAMS" ADD CONSTRAINT "PROJECT_ACCESS_TEAMS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECT_ACCESS_TEAMS" ADD CONSTRAINT "PROJECT_ACCESS_TEAMS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_PROJECT_FK" FOREIGN KEY ("PARENT_PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "PROJECT_PROPERTY" ADD CONSTRAINT "PROJECT_PROPERTY_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "SERVICECOMPONENTS_VULNERABILITIES" ADD CONSTRAINT "SERVICECOMPONENTS_VULNERABILITIES_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "SERVICECOMPONENTS_VULNERABILITIES" ADD CONSTRAINT "SERVICECOMPONENTS_VULNERABILITIES_SERVICECOMPONENT_FK" FOREIGN KEY ("SERVICECOMPONENT_ID") REFERENCES "SERVICECOMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_SERVICECOMPONENT_FK" FOREIGN KEY ("PARENT_SERVICECOMPONENT_ID") REFERENCES "SERVICECOMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "SERVICECOMPONENT" ADD CONSTRAINT "SERVICECOMPONENT_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "TEAMS_PERMISSIONS" ADD CONSTRAINT "TEAMS_PERMISSIONS_TEAM_FK" FOREIGN KEY ("TEAM_ID") REFERENCES "TEAM" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "TEAMS_PERMISSIONS" ADD CONSTRAINT "TEAMS_PERMISSIONS_PERMISSION_FK" FOREIGN KEY ("PERMISSION_ID") REFERENCES "PERMISSION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VEX" ADD CONSTRAINT "VEX_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VIOLATIONANALYSISCOMMENT" ADD CONSTRAINT "VIOLATIONANALYSISCOMMENT_VIOLATIONANALYSIS_FK" FOREIGN KEY ("VIOLATIONANALYSIS_ID") REFERENCES "VIOLATIONANALYSIS" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_COMPONENT_FK" FOREIGN KEY ("COMPONENT_ID") REFERENCES "COMPONENT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_POLICYVIOLATION_FK" FOREIGN KEY ("POLICYVIOLATION_ID") REFERENCES "POLICYVIOLATION" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VIOLATIONANALYSIS" ADD CONSTRAINT "VIOLATIONANALYSIS_PROJECT_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VULNERABLESOFTWARE_VULNERABILITIES" ADD CONSTRAINT "VULNERABLESOFTWARE_VULNERABILITIES_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VULNERABLESOFTWARE_VULNERABILITIES" ADD CONSTRAINT "VULNERABLESOFTWARE_VULNERABILITIES_VULNERABLESOFTWARE_FK" FOREIGN KEY ("VULNERABLESOFTWARE_ID") REFERENCES "VULNERABLESOFTWARE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "WORKFLOW_STATE" ADD CONSTRAINT "WORKFLOW_STATE_WORKFLOW_STATE_FK" FOREIGN KEY ("PARENT_STEP_ID") REFERENCES "WORKFLOW_STATE" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-1', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 1, '9:e7700e247afb261422573e3f05934bec', 'createTable tableName=WORKFLOW_STATE; createTable tableName=COMPONENT; createTable tableName=EVENTSERVICELOG; createTable tableName=LICENSEGROUP; createTable tableName=LICENSE; createTable tableName=ANALYSISCOMMENT; createTable tableName=VIOLATION...', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-2::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

-- WARNING The following SQL may change each run and therefore is possibly incorrect and/or invalid:
INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-2', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 2, '9:517d11a50b5ced1713523790ba3bcae4', 'customChange', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-3::VithikaS
SET SEARCH_PATH TO public, "$user","public";

-- WARNING The following SQL may change each run and therefore is possibly incorrect and/or invalid:
INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-3', 'VithikaS', 'migration/changelog-v5.3.0.xml', NOW(), 3, '9:ee0beaad46c8e53c67cdaba2078b3807', 'customChange', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-4::VithikaS
SET SEARCH_PATH TO public, "$user","public";

CREATE TABLE "VULNERABILITY_POLICY" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "ANALYSIS" JSONB NOT NULL, "AUTHOR" VARCHAR(255), "CONDITIONS" TEXT[] NOT NULL, "CREATED" TIMESTAMP WITH TIME ZONE, "DESCRIPTION" VARCHAR(255), "NAME" VARCHAR(255) NOT NULL, "RATINGS" JSONB, "UPDATED" TIMESTAMP WITH TIME ZONE, "VALID_FROM" TIMESTAMP WITH TIME ZONE, "VALID_UNTIL" TIMESTAMP WITH TIME ZONE, CONSTRAINT "VULNERABILITYPOLICY_PK" PRIMARY KEY ("ID"));

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-4', 'VithikaS', 'migration/changelog-v5.3.0.xml', NOW(), 4, '9:7862672bed2288bc1fd22fedc48faed7', 'createTable tableName=VULNERABILITY_POLICY', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-5::VithikaS
SET SEARCH_PATH TO public, "$user","public";

CREATE UNIQUE INDEX "VULNERABILITY_POLICY_NAME_IDX" ON "VULNERABILITY_POLICY"("NAME");

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-5', 'VithikaS', 'migration/changelog-v5.3.0.xml', NOW(), 5, '9:446394406c6e7e4d242d86b2196c355e', 'createIndex indexName=VULNERABILITY_POLICY_NAME_IDX, tableName=VULNERABILITY_POLICY', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-6::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "ANALYSIS" ADD "CVSSV2VECTOR" VARCHAR(255);

ALTER TABLE "ANALYSIS" ADD "CVSSV3SCORE" numeric;

ALTER TABLE "ANALYSIS" ADD "OWASPSCORE" numeric;

ALTER TABLE "ANALYSIS" ADD "CVSSV2SCORE" numeric;

ALTER TABLE "ANALYSIS" ADD "OWASPVECTOR" VARCHAR(255);

ALTER TABLE "ANALYSIS" ADD "CVSSV3VECTOR" VARCHAR(255);

ALTER TABLE "ANALYSIS" ADD "SEVERITY" VARCHAR(255);

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-6', 'sahibamittal', 'migration/changelog-v5.3.0.xml', NOW(), 6, '9:dfa7456dd92ba75e3c70415f816cc06d', 'addColumn tableName=ANALYSIS', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-7::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

DROP INDEX "FINDINGATTRIBUTION_COMPOUND_IDX";

CREATE UNIQUE INDEX "FINDINGATTRIBUTION_COMPOUND_IDX" ON "FINDINGATTRIBUTION"("COMPONENT_ID", "VULNERABILITY_ID");

CREATE UNIQUE INDEX "COMPONENTS_VULNERABILITIES_COMPOSITE_IDX" ON "COMPONENTS_VULNERABILITIES"("COMPONENT_ID", "VULNERABILITY_ID");

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-7', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 7, '9:12b96e591a0610f135462cb64eab26fe', 'dropIndex indexName=FINDINGATTRIBUTION_COMPOUND_IDX, tableName=FINDINGATTRIBUTION; createIndex indexName=FINDINGATTRIBUTION_COMPOUND_IDX, tableName=FINDINGATTRIBUTION; createIndex indexName=COMPONENTS_VULNERABILITIES_COMPOSITE_IDX, tableName=COMPO...', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-8::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "ANALYSIS" ADD "VULNERABILITY_POLICY_ID" BIGINT;

ALTER TABLE "ANALYSIS" ADD CONSTRAINT "ANALYSIS_VULNERABILITY_POLICY_ID_FK" FOREIGN KEY ("VULNERABILITY_POLICY_ID") REFERENCES "VULNERABILITY_POLICY" ("ID");

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-8', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 8, '9:31a1e91e36e2a26e106445a8b30807d3', 'addColumn tableName=ANALYSIS; addForeignKeyConstraint baseTableName=ANALYSIS, constraintName=ANALYSIS_VULNERABILITY_POLICY_ID_FK, referencedTableName=VULNERABILITY_POLICY', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-9::VithikaS
SET SEARCH_PATH TO public, "$user","public";

CREATE TABLE "VULNERABILITY_POLICY_BUNDLE" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "URL" VARCHAR(2048) NOT NULL, "HASH" VARCHAR(255), "LAST_SUCCESSFUL_SYNC" TIMESTAMP WITH TIME ZONE, "CREATED" TIMESTAMP WITH TIME ZONE, "UPDATED" TIMESTAMP WITH TIME ZONE, CONSTRAINT "VULNERABILITY_POLICY_BUNDLE_PK" PRIMARY KEY ("ID"));

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-9', 'VithikaS', 'migration/changelog-v5.3.0.xml', NOW(), 9, '9:72938937f19745d81e124eda9cee8287', 'createTable tableName=VULNERABILITY_POLICY_BUNDLE', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-10::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "NOTIFICATIONRULE" ADD "LOG_SUCCESSFUL_PUBLISH" BOOLEAN;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-10', 'sahibamittal', 'migration/changelog-v5.3.0.xml', NOW(), 10, '9:f949af110fa2b959b38090997161f594', 'addColumn tableName=NOTIFICATIONRULE', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-11::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "COMPONENT" DROP CONSTRAINT IF EXISTS "COMPONENT_CLASSIFIER_check";

ALTER TABLE "COMPONENT" ADD CONSTRAINT "COMPONENT_CLASSIFIER_check"
  CHECK ("CLASSIFIER" IS NULL OR "CLASSIFIER"::TEXT = ANY(ARRAY['APPLICATION', 'CONTAINER', 'DEVICE', 'FILE', 'FIRMWARE', 'FRAMEWORK', 'LIBRARY', 'OPERATING_SYSTEM']));

ALTER TABLE "INTEGRITY_META_COMPONENT" DROP CONSTRAINT IF EXISTS "INTEGRITY_META_COMPONENT_STATUS_check";

ALTER TABLE "INTEGRITY_META_COMPONENT" ADD CONSTRAINT "INTEGRITY_META_COMPONENT_STATUS_check"
  CHECK ("STATUS" IS NULL OR "STATUS"::TEXT = ANY(ARRAY['IN_PROGRESS', 'NOT_AVAILABLE', 'PROCESSED']));

ALTER TABLE "PROJECT" DROP CONSTRAINT IF EXISTS "PROJECT_CLASSIFIER_check";

ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_CLASSIFIER_check"
  CHECK ("CLASSIFIER" IS NULL OR "CLASSIFIER"::TEXT = ANY(ARRAY['APPLICATION', 'CONTAINER', 'DEVICE', 'FILE', 'FIRMWARE', 'FRAMEWORK', 'LIBRARY', 'OPERATING_SYSTEM']));

ALTER TABLE "WORKFLOW_STATE" DROP CONSTRAINT IF EXISTS "WORKFLOW_STATE_STEP_check";

ALTER TABLE "WORKFLOW_STATE" ADD CONSTRAINT "WORKFLOW_STATE_STEP_check"
  CHECK ("STEP"::TEXT = ANY(ARRAY['BOM_CONSUMPTION', 'BOM_PROCESSING', 'METRICS_UPDATE', 'POLICY_BUNDLE_SYNC', 'POLICY_EVALUATION', 'REPO_META_ANALYSIS', 'VULN_ANALYSIS']));

ALTER TABLE "WORKFLOW_STATE" DROP CONSTRAINT IF EXISTS "WORKFLOW_STATE_STATUS_check";

ALTER TABLE "WORKFLOW_STATE" ADD CONSTRAINT "WORKFLOW_STATE_STATUS_check"
  CHECK ("STATUS"::TEXT = ANY(ARRAY['CANCELLED', 'COMPLETED', 'FAILED', 'NOT_APPLICABLE', 'PENDING', 'TIMED_OUT']));

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-11', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 11, '9:c020c3afe2cd80c3b794954946d953d4', 'sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-12::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

DROP TABLE "CPE";

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-12', 'sahibamittal', 'migration/changelog-v5.3.0.xml', NOW(), 12, '9:d016a4c841a5eedc0c14f43a0e656636', 'dropTable tableName=CPE', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-13::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE EXTENSION IF NOT EXISTS PG_TRGM;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-13', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 13, '9:a0dc400a05beb0c54c46115f6c767926', 'sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-14::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE INDEX CONCURRENTLY IF NOT EXISTS "COMPONENT_DIRECT_DEPENDENCIES_GIN_IDX"
  ON "COMPONENT" USING GIN ("DIRECT_DEPENDENCIES" GIN_TRGM_OPS);

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-14', 'nscuro@protonmail.com', 'migration/changelog-v5.3.0.xml', NOW(), 14, '9:a4bae9b1ef83c8b2ed112ea10d1148fe', 'sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.3.0.xml::v5.3.0-15::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

CREATE TABLE "PROJECT_METADATA" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "PROJECT_ID" BIGINT NOT NULL, "SUPPLIER" TEXT, "AUTHORS" TEXT, CONSTRAINT "PROJECT_METADATA_PK" PRIMARY KEY ("ID"));

ALTER TABLE "PROJECT_METADATA" ADD CONSTRAINT "PROJECT_METADATA_PROJECT_ID_FK" FOREIGN KEY ("PROJECT_ID") REFERENCES "PROJECT" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "COMPONENT" ADD "SUPPLIER" TEXT;

ALTER TABLE "PROJECT" ADD "SUPPLIER" TEXT;

ALTER TABLE "PROJECT" ADD "MANUFACTURER" TEXT;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.3.0-15', 'sahibamittal', 'migration/changelog-v5.3.0.xml', NOW(), 15, '9:bcb140e9c76c2f720b69c5cd210f8149', 'createTable tableName=PROJECT_METADATA; addForeignKeyConstraint baseTableName=PROJECT_METADATA, constraintName=PROJECT_METADATA_PROJECT_ID_FK, referencedTableName=PROJECT; addColumn tableName=COMPONENT; addColumn tableName=PROJECT', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.4.0.xml::v5.4.0-1::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "PROJECT_METADATA" ADD "TOOLS" TEXT;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.4.0-1', 'nscuro@protonmail.com', 'migration/changelog-v5.4.0.xml', NOW(), 16, '9:16f1130d4a0a8de85660ce3b2594031e', 'addColumn tableName=PROJECT_METADATA', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.4.0.xml::v5.4.0-2::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE UNIQUE INDEX "PROJECT_NAME_VERSION_IDX" ON "PROJECT" ("NAME", "VERSION")
  WHERE "VERSION" IS NOT NULL;

CREATE UNIQUE INDEX "PROJECT_NAME_VERSION_NULL_IDX" ON "PROJECT" ("NAME")
  WHERE "VERSION" IS NULL;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.4.0-2', 'nscuro@protonmail.com', 'migration/changelog-v5.4.0.xml', NOW(), 17, '9:769e7854f4bf932042b679d9ef04daf5', 'sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-1::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "APIKEY" ADD "COMMENT" VARCHAR(255);

ALTER TABLE "APIKEY" ADD "CREATED" TIMESTAMP WITH TIME ZONE;

ALTER TABLE "APIKEY" ADD "LAST_USED" TIMESTAMP WITH TIME ZONE;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-1', 'nscuro@protonmail.com', 'migration/changelog-v5.5.0.xml', NOW(), 18, '9:7d41edd5a8a6f52e0fc9df507b4e1130', 'addColumn tableName=APIKEY', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-2::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

DROP INDEX "AFFECTEDVERSIONATTRIBUTION_VULNERABILITY_IDX";

DROP INDEX "AFFECTEDVERSIONATTRIBUTION_VULNERABLE_SOFTWARE_IDX";

DROP INDEX "ANALYSIS_PROJECT_ID_IDX";

DROP INDEX "COMPONENTS_VULNERABILITIES_COMPONENT_ID_IDX";

DROP INDEX "DEPENDENCYMETRICS_PROJECT_ID_IDX";

DROP INDEX "FINDINGATTRIBUTION_COMPONENT_ID_IDX";

DROP INDEX "PURL_IDX";

ALTER TABLE "INTEGRITY_META_COMPONENT" DROP CONSTRAINT "INTEGRITY_META_COMPONENT_U1";

DROP INDEX "MAPPEDLDAPGROUP_TEAM_ID_IDX";

DROP INDEX "MAPPEDOIDCGROUP_TEAM_ID_IDX";

DROP INDEX "PROJECT_PROPERTY_PROJECT_ID_IDX";

DROP INDEX "VIOLATIONANALYSIS_PROJECT_ID_IDX";

DROP INDEX "VULNERABILITY_VULNID_IDX";

DROP INDEX "VULNERABLESOFTWARE_PART_VENDOR_PRODUCT_IDX";

CREATE UNIQUE INDEX "INTEGRITY_META_COMPONENT_PURL_IDX" ON "INTEGRITY_META_COMPONENT"("PURL");

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-2', 'nscuro@protonmail.com', 'migration/changelog-v5.5.0.xml', NOW(), 19, '9:b6f0cd70df685a02dfebc8f0703cc0f9', 'dropIndex indexName=AFFECTEDVERSIONATTRIBUTION_VULNERABILITY_IDX, tableName=AFFECTEDVERSIONATTRIBUTION; dropIndex indexName=AFFECTEDVERSIONATTRIBUTION_VULNERABLE_SOFTWARE_IDX, tableName=AFFECTEDVERSIONATTRIBUTION; dropIndex indexName=ANALYSIS_PROJ...', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-3::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "BOM" ADD "GENERATED" TIMESTAMP WITH TIME ZONE;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-3', 'sahibamittal', 'migration/changelog-v5.5.0.xml', NOW(), 20, '9:e9e7e23dd6f5efb9b0a04e9d3f35c3e9', 'addColumn tableName=BOM', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-4::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "VULNERABILITY" DROP COLUMN "EPSSSCORE";

ALTER TABLE "VULNERABILITY" DROP COLUMN "EPSSPERCENTILE";

CREATE TABLE "EPSS" ("ID" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "CVE" TEXT NOT NULL, "PERCENTILE" numeric, "SCORE" numeric, CONSTRAINT "EPSS_CVE_PK" PRIMARY KEY ("ID"), UNIQUE ("CVE"));

CREATE UNIQUE INDEX "EPSS_CVE_IDX" ON "EPSS"("CVE");

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-4', 'sahibamittal', 'migration/changelog-v5.5.0.xml', NOW(), 21, '9:eaf67b09c4a6b950cc2bcef094650d06', 'dropColumn tableName=VULNERABILITY; createTable tableName=EPSS; createIndex indexName=EPSS_CVE_IDX, tableName=EPSS', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-5::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

CREATE TABLE "VULNERABILITIES_TAGS" ("TAG_ID" BIGINT NOT NULL, "VULNERABILITY_ID" BIGINT NOT NULL);

CREATE INDEX "VULNERABILITIES_TAGS_VULNERABILITY_ID_IDX" ON "VULNERABILITIES_TAGS"("VULNERABILITY_ID");

CREATE INDEX "VULNERABILITIES_TAGS_TAG_ID_IDX" ON "VULNERABILITIES_TAGS"("TAG_ID");

ALTER TABLE "VULNERABILITIES_TAGS" ADD CONSTRAINT "VULNERABILITIES_TAGS_TAG_FK" FOREIGN KEY ("TAG_ID") REFERENCES "TAG" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "VULNERABILITIES_TAGS" ADD CONSTRAINT "VULNERABILITIES_TAGS_VULNERABILITY_FK" FOREIGN KEY ("VULNERABILITY_ID") REFERENCES "VULNERABILITY" ("ID") ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-5', 'sahibamittal', 'migration/changelog-v5.5.0.xml', NOW(), 22, '9:4b5ad1340fd4ff1588a07039cfd8b03c', 'createTable tableName=VULNERABILITIES_TAGS; createIndex indexName=VULNERABILITIES_TAGS_VULNERABILITY_ID_IDX, tableName=VULNERABILITIES_TAGS; createIndex indexName=VULNERABILITIES_TAGS_TAG_ID_IDX, tableName=VULNERABILITIES_TAGS; addForeignKeyConstr...', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-6::nscuro
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "VULNERABILITY_POLICY" ALTER COLUMN "DESCRIPTION" TYPE VARCHAR(512) USING ("DESCRIPTION"::VARCHAR(512));

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-6', 'nscuro', 'migration/changelog-v5.5.0.xml', NOW(), 23, '9:7a29b11e1b913aaa5394d56f3d35096a', 'modifyDataType columnName=DESCRIPTION, tableName=VULNERABILITY_POLICY', '', 'EXECUTED', NULL, NULL, '4.27.0', '7164217440');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-7::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "VULNERABILITY_POLICY" ADD "OPERATION_MODE" VARCHAR(255);

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-7', 'sahibamittal', 'migration/changelog-v5.5.0.xml', NOW(), 24, '9:05667de88f118ce836fc3c4e2785a1dc', 'addColumn tableName=VULNERABILITY_POLICY', '', 'EXECUTED', NULL, NULL, '4.27.0', '7164217440');

-- Changeset migration/changelog-procedures.xml::function_cvssv2-to-severity::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

-- Calculate the severity of a vulnerability based on its CVSSv2 base score.
CREATE OR REPLACE FUNCTION "CVSSV2_TO_SEVERITY"(
  "base_score" NUMERIC
) RETURNS VARCHAR
  LANGUAGE "sql"
  PARALLEL SAFE
  IMMUTABLE
AS
$$
SELECT
  CASE
    WHEN "base_score" >= 7 THEN 'HIGH'
    WHEN "base_score" >= 4 THEN 'MEDIUM'
    WHEN "base_score" > 0 THEN 'LOW'
    ELSE 'UNASSIGNED'
    END;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('function_cvssv2-to-severity', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 23, '9:ffacc71dcf91b47c983c2bd8c70d7620', 'createProcedure path=procedures/function_cvssv2-to-severity.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-v5.5.0.xml::v5.5.0-7::sahibamittal
SET SEARCH_PATH TO public, "$user","public";

ALTER TABLE "WORKFLOW_STATE" DROP CONSTRAINT IF EXISTS "WORKFLOW_STATE_STEP_check";

ALTER TABLE "WORKFLOW_STATE" ADD CONSTRAINT "WORKFLOW_STATE_STEP_check"
            CHECK ("STEP"::TEXT = ANY(ARRAY['BOM_CONSUMPTION', 'BOM_PROCESSING', 'METRICS_UPDATE', 'POLICY_BUNDLE_SYNC', 'POLICY_EVALUATION', 'REPO_META_ANALYSIS', 'VULN_ANALYSIS', 'PROJECT_CLONE']));

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('v5.5.0-7', 'sahibamittal', 'migration/changelog-v5.5.0.xml', NOW(), 24, '9:4c05b1489b0ad2acdcb1ba454af448d3', 'sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '6992024870');

-- Changeset migration/changelog-procedures.xml::function_cvssv3-to-severity::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

-- Calculate the severity of a vulnerability based on its CVSSv3 base score.
CREATE OR REPLACE FUNCTION "CVSSV3_TO_SEVERITY"(
  "base_score" NUMERIC
) RETURNS VARCHAR
  LANGUAGE "sql"
  PARALLEL SAFE
  IMMUTABLE
AS
$$
SELECT
  CASE
    WHEN "base_score" >= 9 THEN 'CRITICAL'
    WHEN "base_score" >= 7 THEN 'HIGH'
    WHEN "base_score" >= 4 THEN 'MEDIUM'
    WHEN "base_score" > 0 THEN 'LOW'
    ELSE 'UNASSIGNED'
    END;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('function_cvssv3-to-severity', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 24, '9:7499dcecb7ce2dfcafba4838ef851413', 'createProcedure path=procedures/function_cvssv3-to-severity.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-procedures.xml::function_calc-severity::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

-- Calculate the severity of a vulnerability based on:
--   * a pre-set severity
--   * a CVSSv3 base score
--   * a CVSSv2 base score
-- The behavior of this function is identical to Vulnerability#getSeverity
-- in the API server Java code base.
-- https://github.com/DependencyTrack/dependency-track/blob/1976be1f5cc9d027900f09aed9d1539595aeda3a/src/main/java/org/dependencytrack/model/Vulnerability.java#L338-L340
CREATE OR REPLACE FUNCTION "CALC_SEVERITY"(
  "severity" VARCHAR,
  "severity_override" VARCHAR,
  "cvssv3_base_score" NUMERIC,
  "cvssv2_base_score" NUMERIC
) RETURNS VARCHAR
  LANGUAGE "sql"
  PARALLEL SAFE
  IMMUTABLE
AS
$$
SELECT
  CASE
    WHEN "severity_override" IS NOT NULL THEN "severity_override"
    WHEN "cvssv3_base_score" IS NOT NULL THEN "CVSSV3_TO_SEVERITY"("cvssv3_base_score")
    WHEN "cvssv2_base_score" IS NOT NULL THEN "CVSSV2_TO_SEVERITY"("cvssv2_base_score")
    WHEN "severity" IS NOT NULL THEN "severity"
    ELSE 'UNASSIGNED'
    END;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('function_calc-severity', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 25, '9:ecdf69ae9545f33a8e08020a6f5dbe61', 'createProcedure path=procedures/function_calc-severity.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-procedures.xml::function_calc-risk-score::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

-- Calculate the inherited risk score of a component, based on the number
-- of vulnerabilities per severity.
-- The behavior of this function is identical to Metrics#inheritedRiskScore
-- in the API server Java code base.
-- https://github.com/DependencyTrack/dependency-track/blob/1976be1f5cc9d027900f09aed9d1539595aeda3a/src/main/java/org/dependencytrack/metrics/Metrics.java#L31-L33
CREATE OR REPLACE FUNCTION "CALC_RISK_SCORE"(
  "critical" INT,
  "high" INT,
  "medium" INT,
  "low" INT,
  "unassigned" INT
) RETURNS NUMERIC
  LANGUAGE "sql"
  PARALLEL SAFE
  IMMUTABLE
AS
$$
SELECT (("critical" * 10) + ("high" * 5) + ("medium" * 3) + ("low" * 1) + ("unassigned" * 5))::NUMERIC;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('function_calc-risk-score', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 26, '9:8eca48b5ebb1c65e2625ed5d6063bf2e', 'createProcedure path=procedures/function_calc-risk-score.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-procedures.xml::procedure_update-component-metrics::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE OR REPLACE PROCEDURE "UPDATE_COMPONENT_METRICS"(
  "component_uuid" VARCHAR
)
  LANGUAGE "plpgsql"
AS
$$
DECLARE
  "v_component"                               RECORD; -- The component to update metrics for
  "v_vulnerability"                           RECORD; -- Loop variable for iterating over vulnerabilities the component is affected by
  "v_alias"                                   RECORD; -- Loop variable for iterating over aliases of a vulnerability
  "v_aliases_seen"                            TEXT[]; -- Array of aliases encountered while iterating over vulnerabilities
  "v_severity"                                VARCHAR; -- Loop variable for the current vulnerability's severity
  "v_policy_violation"                        RECORD; -- Loop variable for iterating over policy violations assigned to the component
  "v_vulnerabilities"                         INT     := 0; -- Total number of vulnerabilities
  "v_critical"                                INT     := 0; -- Number of vulnerabilities with critical severity
  "v_high"                                    INT     := 0; -- Number of vulnerabilities with high severity
  "v_medium"                                  INT     := 0; -- Number of vulnerabilities with medium severity
  "v_low"                                     INT     := 0; -- Number of vulnerabilities with low severity
  "v_unassigned"                              INT     := 0; -- Number of vulnerabilities with unassigned severity
  "v_risk_score"                              NUMERIC := 0; -- Inherited risk score
  "v_findings_total"                          INT     := 0; -- Total number of findings
  "v_findings_audited"                        INT     := 0; -- Number of audited findings
  "v_findings_unaudited"                      INT     := 0; -- Number of unaudited findings
  "v_findings_suppressed"                     INT     := 0; -- Number of suppressed findings
  "v_policy_violations_total"                 INT     := 0; -- Total number of policy violations
  "v_policy_violations_fail"                  INT     := 0; -- Number of policy violations with level fail
  "v_policy_violations_warn"                  INT     := 0; -- Number of policy violations with level warn
  "v_policy_violations_info"                  INT     := 0; -- Number of policy violations with level info
  "v_policy_violations_audited"               INT     := 0; -- Number of audited policy violations
  "v_policy_violations_unaudited"             INT     := 0; -- Number of unaudited policy violations
  "v_policy_violations_license_total"         INT     := 0; -- Total number of policy violations of type license
  "v_policy_violations_license_audited"       INT     := 0; -- Number of audited policy violations of type license
  "v_policy_violations_license_unaudited"     INT     := 0; -- Number of unaudited policy violations of type license
  "v_policy_violations_operational_total"     INT     := 0; -- Total number of policy violations of type operational
  "v_policy_violations_operational_audited"   INT     := 0; -- Number of audited policy violations of type operational
  "v_policy_violations_operational_unaudited" INT     := 0; -- Number of unaudited policy violations of type operational
  "v_policy_violations_security_total"        INT     := 0; -- Total number of policy violations of type security
  "v_policy_violations_security_audited"      INT     := 0; -- Number of audited policy violations of type security
  "v_policy_violations_security_unaudited"    INT     := 0; -- Number of unaudited policy violations of type security
  "v_existing_id"                             BIGINT; -- ID of the existing row that matches the data point calculated in this procedure
BEGIN
  SELECT "ID", "PROJECT_ID" INTO "v_component" FROM "COMPONENT" WHERE "UUID" = "component_uuid";
  IF "v_component" IS NULL THEN
    RAISE EXCEPTION 'Component with UUID % does not exist', "component_uuid";
  END IF;

  FOR "v_vulnerability" IN SELECT "VULNID", "SOURCE", "V"."SEVERITY", "A"."SEVERITY" AS "SEVERITY_OVERRIDE", "CVSSV2BASESCORE", "CVSSV3BASESCORE"
                           FROM "VULNERABILITY" AS "V"
                                  INNER JOIN "COMPONENTS_VULNERABILITIES" AS "CV"
                                             ON "CV"."COMPONENT_ID" = "v_component"."ID"
                                               AND "CV"."VULNERABILITY_ID" = "V"."ID"
                                  LEFT OUTER JOIN "ANALYSIS" AS "A"
                                                  ON "A"."COMPONENT_ID" = "v_component"."ID"
                                                    AND "A"."COMPONENT_ID" = "CV"."COMPONENT_ID"
                                                    AND "A"."VULNERABILITY_ID" = "V"."ID"
                           WHERE "A"."SUPPRESSED" != TRUE OR "A"."SUPPRESSED" IS NULL
    LOOP
      CONTINUE WHEN ("v_vulnerability"."SOURCE" || '|' || "v_vulnerability"."VULNID") = ANY ("v_aliases_seen");

      FOR "v_alias" IN SELECT *
                       FROM "VULNERABILITYALIAS" AS "VA"
                       WHERE ("v_vulnerability"."SOURCE" = 'GITHUB' AND
                              "VA"."GHSA_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'INTERNAL' AND
                             "VA"."INTERNAL_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'NVD' AND
                             "VA"."CVE_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'OSSINDEX' AND
                             "VA"."SONATYPE_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'OSV' AND
                             "VA"."OSV_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'SNYK' AND
                             "VA"."SNYK_ID" = "v_vulnerability"."VULNID")
                         OR ("v_vulnerability"."SOURCE" = 'VULNDB' AND
                             "VA"."VULNDB_ID" = "v_vulnerability"."VULNID")
        LOOP
          IF "v_alias"."GHSA_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'GITHUB|' || "v_alias"."GHSA_ID");
          END IF;
          IF "v_alias"."INTERNAL_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'INTERNAL|' || "v_alias"."INTERNAL_ID");
          END IF;
          IF "v_alias"."CVE_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'NVD|' || "v_alias"."CVE_ID");
          END IF;
          IF "v_alias"."SONATYPE_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'OSSINDEX|' || "v_alias"."SONATYPE_ID");
          END IF;
          IF "v_alias"."OSV_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'OSV|' || "v_alias"."OSV_ID");
          END IF;
          IF "v_alias"."SNYK_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'SNYK|' || "v_alias"."SNYK_ID");
          END IF;
          IF "v_alias"."VULNDB_ID" IS NOT NULL THEN
            "v_aliases_seen" = array_append("v_aliases_seen", 'VULNDB|' || "v_alias"."VULNDB_ID");
          END IF;
        END LOOP;

      "v_vulnerabilities" := "v_vulnerabilities" + 1;

      SELECT "CALC_SEVERITY"(
        "v_vulnerability"."SEVERITY",
        "v_vulnerability"."SEVERITY_OVERRIDE",
        "v_vulnerability"."CVSSV3BASESCORE",
        "v_vulnerability"."CVSSV2BASESCORE")
      INTO "v_severity";

      IF "v_severity" = 'CRITICAL' THEN
        "v_critical" := "v_critical" + 1;
      ELSEIF "v_severity" = 'HIGH' THEN
        "v_high" := "v_high" + 1;
      ELSEIF "v_severity" = 'MEDIUM' THEN
        "v_medium" := "v_medium" + 1;
      ELSEIF "v_severity" = 'LOW' THEN
        "v_low" := "v_low" + 1;
      ELSE
        "v_unassigned" := "v_unassigned" + 1;
      END IF;

    END LOOP;

  "v_risk_score" = "CALC_RISK_SCORE"("v_critical", "v_high", "v_medium", "v_low", "v_unassigned");

  SELECT COUNT(*)
  FROM "ANALYSIS" AS "A"
  WHERE "A"."COMPONENT_ID" = "v_component"."ID"
    AND "A"."SUPPRESSED" = FALSE
    AND "A"."STATE" != 'NOT_SET'
    AND "A"."STATE" != 'IN_TRIAGE'
  INTO "v_findings_audited";

  "v_findings_total" = "v_vulnerabilities";
  "v_findings_unaudited" = "v_findings_total" - "v_findings_audited";

  SELECT COUNT(*)
  FROM "ANALYSIS" AS "A"
  WHERE "A"."COMPONENT_ID" = "v_component"."ID"
    AND "A"."SUPPRESSED" = TRUE
  INTO "v_findings_suppressed";

  FOR "v_policy_violation" IN SELECT "PV"."TYPE", "P"."VIOLATIONSTATE"
                              FROM "POLICYVIOLATION" AS "PV"
                                     INNER JOIN "POLICYCONDITION" AS "PC" ON "PV"."POLICYCONDITION_ID" = "PC"."ID"
                                     INNER JOIN "POLICY" AS "P" ON "PC"."POLICY_ID" = "P"."ID"
                                     LEFT JOIN "VIOLATIONANALYSIS" AS "VA"
                                               ON "VA"."COMPONENT_ID" = "v_component"."ID" AND
                                                  "VA"."POLICYVIOLATION_ID" = "PV"."ID"
                              WHERE "PV"."COMPONENT_ID" = "v_component"."ID"
                                AND ("VA" IS NULL OR "VA"."SUPPRESSED" = FALSE)
    LOOP
      "v_policy_violations_total" := "v_policy_violations_total" + 1;

      IF "v_policy_violation"."TYPE" = 'LICENSE' THEN
        "v_policy_violations_license_total" := "v_policy_violations_license_total" + 1;
      ELSEIF "v_policy_violation"."TYPE" = 'OPERATIONAL' THEN
        "v_policy_violations_operational_total" := "v_policy_violations_operational_total" + 1;
      ELSEIF "v_policy_violation"."TYPE" = 'SECURITY' THEN
        "v_policy_violations_security_total" := "v_policy_violations_security_total" + 1;
      ELSE
        RAISE EXCEPTION 'Encountered invalid policy violation type %', "v_policy_violation"."TYPE";
      END IF;

      IF "v_policy_violation"."VIOLATIONSTATE" = 'FAIL' THEN
        "v_policy_violations_fail" := "v_policy_violations_fail" + 1;
      ELSEIF "v_policy_violation"."VIOLATIONSTATE" = 'WARN' THEN
        "v_policy_violations_warn" := "v_policy_violations_warn" + 1;
      ELSEIF "v_policy_violation"."VIOLATIONSTATE" = 'INFO' THEN
        "v_policy_violations_info" := "v_policy_violations_info" + 1;
      ELSE
        RAISE EXCEPTION 'Encountered invalid violation state %', "v_policy_violation"."VIOLATIONSTATE";
      end if;
    END LOOP;

  SELECT COUNT(*)
  FROM "VIOLATIONANALYSIS" AS "VA"
         INNER JOIN "POLICYVIOLATION" AS "PV" ON "PV"."ID" = "VA"."POLICYVIOLATION_ID"
  WHERE "VA"."COMPONENT_ID" = "v_component"."ID"
    AND "PV"."TYPE" = 'LICENSE'
    AND "VA"."SUPPRESSED" = FALSE
    AND "VA"."STATE" != 'NOT_SET'
  INTO "v_policy_violations_license_audited";
  "v_policy_violations_license_unaudited" =
    "v_policy_violations_license_total" - "v_policy_violations_license_audited";

  SELECT COUNT(*)
  FROM "VIOLATIONANALYSIS" AS "VA"
         INNER JOIN "POLICYVIOLATION" AS "PV" ON "PV"."ID" = "VA"."POLICYVIOLATION_ID"
  WHERE "VA"."COMPONENT_ID" = "v_component"."ID"
    AND "PV"."TYPE" = 'OPERATIONAL'
    AND "VA"."SUPPRESSED" = FALSE
    AND "VA"."STATE" != 'NOT_SET'
  INTO "v_policy_violations_operational_audited";
  "v_policy_violations_operational_unaudited" =
    "v_policy_violations_operational_total" - "v_policy_violations_operational_audited";

  SELECT COUNT(*)
  FROM "VIOLATIONANALYSIS" AS "VA"
         INNER JOIN "POLICYVIOLATION" AS "PV" ON "PV"."ID" = "VA"."POLICYVIOLATION_ID"
  WHERE "VA"."COMPONENT_ID" = "v_component"."ID"
    AND "PV"."TYPE" = 'SECURITY'
    AND "VA"."SUPPRESSED" = FALSE
    AND "VA"."STATE" != 'NOT_SET'
  INTO "v_policy_violations_security_audited";
  "v_policy_violations_security_unaudited" =
    "v_policy_violations_security_total" - "v_policy_violations_security_audited";

  "v_policy_violations_audited" = "v_policy_violations_license_audited"
    + "v_policy_violations_operational_audited"
    + "v_policy_violations_security_audited";
  "v_policy_violations_unaudited" = "v_policy_violations_total" - "v_policy_violations_audited";

  SELECT "ID"
  FROM "DEPENDENCYMETRICS"
  WHERE "COMPONENT_ID" = "v_component"."ID"
    AND "VULNERABILITIES" = "v_vulnerabilities"
    AND "CRITICAL" = "v_critical"
    AND "HIGH" = "v_high"
    AND "MEDIUM" = "v_medium"
    AND "LOW" = "v_low"
    AND "UNASSIGNED_SEVERITY" = "v_unassigned"
    AND "RISKSCORE" = "v_risk_score"
    AND "FINDINGS_TOTAL" = "v_findings_total"
    AND "FINDINGS_AUDITED" = "v_findings_audited"
    AND "FINDINGS_UNAUDITED" = "v_findings_unaudited"
    AND "SUPPRESSED" = "v_findings_suppressed"
    AND "POLICYVIOLATIONS_TOTAL" = "v_policy_violations_total"
    AND "POLICYVIOLATIONS_FAIL" = "v_policy_violations_fail"
    AND "POLICYVIOLATIONS_WARN" = "v_policy_violations_warn"
    AND "POLICYVIOLATIONS_INFO" = "v_policy_violations_info"
    AND "POLICYVIOLATIONS_AUDITED" = "v_policy_violations_audited"
    AND "POLICYVIOLATIONS_UNAUDITED" = "v_policy_violations_unaudited"
    AND "POLICYVIOLATIONS_LICENSE_TOTAL" = "v_policy_violations_license_total"
    AND "POLICYVIOLATIONS_LICENSE_AUDITED" = "v_policy_violations_license_audited"
    AND "POLICYVIOLATIONS_LICENSE_UNAUDITED" = "v_policy_violations_license_unaudited"
    AND "POLICYVIOLATIONS_OPERATIONAL_TOTAL" = "v_policy_violations_operational_total"
    AND "POLICYVIOLATIONS_OPERATIONAL_AUDITED" = "v_policy_violations_operational_audited"
    AND "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" = "v_policy_violations_operational_unaudited"
    AND "POLICYVIOLATIONS_SECURITY_TOTAL" = "v_policy_violations_security_total"
    AND "POLICYVIOLATIONS_SECURITY_AUDITED" = "v_policy_violations_security_audited"
    AND "POLICYVIOLATIONS_SECURITY_UNAUDITED" = "v_policy_violations_security_unaudited"
  ORDER BY "LAST_OCCURRENCE" DESC
  LIMIT 1
  INTO "v_existing_id";

  IF "v_existing_id" IS NOT NULL THEN
    UPDATE "DEPENDENCYMETRICS" SET "LAST_OCCURRENCE" = NOW() WHERE "ID" = "v_existing_id";
  ELSE
    INSERT INTO "DEPENDENCYMETRICS" ("COMPONENT_ID",
                                     "PROJECT_ID",
                                     "VULNERABILITIES",
                                     "CRITICAL",
                                     "HIGH",
                                     "MEDIUM",
                                     "LOW",
                                     "UNASSIGNED_SEVERITY",
                                     "RISKSCORE",
                                     "FINDINGS_TOTAL",
                                     "FINDINGS_AUDITED",
                                     "FINDINGS_UNAUDITED",
                                     "SUPPRESSED",
                                     "POLICYVIOLATIONS_TOTAL",
                                     "POLICYVIOLATIONS_FAIL",
                                     "POLICYVIOLATIONS_WARN",
                                     "POLICYVIOLATIONS_INFO",
                                     "POLICYVIOLATIONS_AUDITED",
                                     "POLICYVIOLATIONS_UNAUDITED",
                                     "POLICYVIOLATIONS_LICENSE_TOTAL",
                                     "POLICYVIOLATIONS_LICENSE_AUDITED",
                                     "POLICYVIOLATIONS_LICENSE_UNAUDITED",
                                     "POLICYVIOLATIONS_OPERATIONAL_TOTAL",
                                     "POLICYVIOLATIONS_OPERATIONAL_AUDITED",
                                     "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED",
                                     "POLICYVIOLATIONS_SECURITY_TOTAL",
                                     "POLICYVIOLATIONS_SECURITY_AUDITED",
                                     "POLICYVIOLATIONS_SECURITY_UNAUDITED",
                                     "FIRST_OCCURRENCE",
                                     "LAST_OCCURRENCE")
    VALUES ("v_component"."ID",
            "v_component"."PROJECT_ID",
            "v_vulnerabilities",
            "v_critical",
            "v_high",
            "v_medium",
            "v_low",
            "v_unassigned",
            "v_risk_score",
            "v_findings_total",
            "v_findings_audited",
            "v_findings_unaudited",
            "v_findings_suppressed",
            "v_policy_violations_total",
            "v_policy_violations_fail",
            "v_policy_violations_warn",
            "v_policy_violations_info",
            "v_policy_violations_audited",
            "v_policy_violations_unaudited",
            "v_policy_violations_license_total",
            "v_policy_violations_license_audited",
            "v_policy_violations_license_unaudited",
            "v_policy_violations_operational_total",
            "v_policy_violations_operational_audited",
            "v_policy_violations_operational_unaudited",
            "v_policy_violations_security_total",
            "v_policy_violations_security_audited",
            "v_policy_violations_security_unaudited",
            NOW(),
            NOW());

    UPDATE "COMPONENT" SET "LAST_RISKSCORE" = "v_risk_score" WHERE "ID" = "v_component"."ID";
  END IF;
END;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('procedure_update-component-metrics', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 27, '9:c3d40a2f6e6ef350744a0ce63561c7e7', 'createProcedure path=procedures/procedure_update-component-metrics.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-procedures.xml::procedure_update-project-metrics::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE OR REPLACE PROCEDURE "UPDATE_PROJECT_METRICS"(
  "project_uuid" VARCHAR(36)
)
  LANGUAGE "plpgsql"
AS
$$
DECLARE
  "v_project_id"                              BIGINT;
  "v_component_uuid"                          TEXT;
  "v_components"                              INT; -- Total number of components in the project
  "v_vulnerable_components"                   INT; -- Number of vulnerable components in the project
  "v_vulnerabilities"                         INT; -- Total number of vulnerabilities
  "v_critical"                                INT; -- Number of vulnerabilities with critical severity
  "v_high"                                    INT; -- Number of vulnerabilities with high severity
  "v_medium"                                  INT; -- Number of vulnerabilities with medium severity
  "v_low"                                     INT; -- Number of vulnerabilities with low severity
  "v_unassigned"                              INT; -- Number of vulnerabilities with unassigned severity
  "v_risk_score"                              NUMERIC; -- Inherited risk score
  "v_findings_total"                          INT; -- Total number of findings
  "v_findings_audited"                        INT; -- Number of audited findings
  "v_findings_unaudited"                      INT; -- Number of unaudited findings
  "v_findings_suppressed"                     INT; -- Number of suppressed findings
  "v_policy_violations_total"                 INT; -- Total number of policy violations
  "v_policy_violations_fail"                  INT; -- Number of policy violations with level fail
  "v_policy_violations_warn"                  INT; -- Number of policy violations with level warn
  "v_policy_violations_info"                  INT; -- Number of policy violations with level info
  "v_policy_violations_audited"               INT; -- Number of audited policy violations
  "v_policy_violations_unaudited"             INT; -- Number of unaudited policy violations
  "v_policy_violations_license_total"         INT; -- Total number of policy violations of type license
  "v_policy_violations_license_audited"       INT; -- Number of audited policy violations of type license
  "v_policy_violations_license_unaudited"     INT; -- Number of unaudited policy violations of type license
  "v_policy_violations_operational_total"     INT; -- Total number of policy violations of type operational
  "v_policy_violations_operational_audited"   INT; -- Number of audited policy violations of type operational
  "v_policy_violations_operational_unaudited" INT; -- Number of unaudited policy violations of type operational
  "v_policy_violations_security_total"        INT; -- Total number of policy violations of type security
  "v_policy_violations_security_audited"      INT; -- Number of audited policy violations of type security
  "v_policy_violations_security_unaudited"    INT; -- Number of unaudited policy violations of type security
  "v_existing_id"                             BIGINT; -- ID of the existing row that matches the data point calculated in this procedure
BEGIN
  SELECT "ID" FROM "PROJECT" WHERE "UUID" = "project_uuid" INTO "v_project_id";
  IF "v_project_id" IS NULL THEN
    RAISE EXCEPTION 'Project with UUID % does not exist', "project_uuid";
  END IF;

  FOR "v_component_uuid" IN SELECT "UUID" FROM "COMPONENT" WHERE "PROJECT_ID" = "v_project_id"
    LOOP
      CALL "UPDATE_COMPONENT_METRICS"("v_component_uuid");
    END LOOP;

  -- Aggregate over all most recent DEPENDENCYMETRICS.
  -- NOTE: SUM returns NULL when no rows match the query, but COUNT returns 0.
  -- For nullable result columns, use COALESCE(..., 0) to have a default value.
  SELECT COUNT(*)::INT,
    COALESCE(SUM(CASE WHEN "VULNERABILITIES" > 0 THEN 1 ELSE 0 END)::INT, 0),
    COALESCE(SUM("VULNERABILITIES")::INT, 0),
    COALESCE(SUM("CRITICAL")::INT, 0),
    COALESCE(SUM("HIGH")::INT, 0),
    COALESCE(SUM("MEDIUM")::INT, 0),
    COALESCE(SUM("LOW")::INT, 0),
    COALESCE(SUM("UNASSIGNED_SEVERITY")::INT, 0),
    COALESCE(SUM("FINDINGS_TOTAL")::INT, 0),
    COALESCE(SUM("FINDINGS_AUDITED")::INT, 0),
    COALESCE(SUM("FINDINGS_UNAUDITED")::INT, 0),
    COALESCE(SUM("SUPPRESSED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_FAIL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_WARN")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_INFO")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_UNAUDITED")::INT, 0)
  FROM (SELECT DISTINCT ON ("DM"."COMPONENT_ID") *
        FROM "DEPENDENCYMETRICS" AS "DM"
        WHERE "PROJECT_ID" = "v_project_id"
        ORDER BY "DM"."COMPONENT_ID", "DM"."LAST_OCCURRENCE" DESC) AS "LATEST_COMPONENT_METRICS"
  INTO
    "v_components",
    "v_vulnerable_components",
    "v_vulnerabilities",
    "v_critical",
    "v_high",
    "v_medium",
    "v_low",
    "v_unassigned",
    "v_findings_total",
    "v_findings_audited",
    "v_findings_unaudited",
    "v_findings_suppressed",
    "v_policy_violations_total",
    "v_policy_violations_fail",
    "v_policy_violations_warn",
    "v_policy_violations_info",
    "v_policy_violations_audited",
    "v_policy_violations_unaudited",
    "v_policy_violations_license_total",
    "v_policy_violations_license_audited",
    "v_policy_violations_license_unaudited",
    "v_policy_violations_operational_total",
    "v_policy_violations_operational_audited",
    "v_policy_violations_operational_unaudited",
    "v_policy_violations_security_total",
    "v_policy_violations_security_audited",
    "v_policy_violations_security_unaudited";

  "v_risk_score" = "CALC_RISK_SCORE"("v_critical", "v_high", "v_medium", "v_low", "v_unassigned");

  SELECT "ID"
  FROM "PROJECTMETRICS"
  WHERE "PROJECT_ID" = "v_project_id"
    AND "COMPONENTS" = "v_components"
    AND "VULNERABLECOMPONENTS" = "v_vulnerable_components"
    AND "VULNERABILITIES" = "v_vulnerabilities"
    AND "CRITICAL" = "v_critical"
    AND "HIGH" = "v_high"
    AND "MEDIUM" = "v_medium"
    AND "LOW" = "v_low"
    AND "UNASSIGNED_SEVERITY" = "v_unassigned"
    AND "RISKSCORE" = "v_risk_score"
    AND "FINDINGS_TOTAL" = "v_findings_total"
    AND "FINDINGS_AUDITED" = "v_findings_audited"
    AND "FINDINGS_UNAUDITED" = "v_findings_unaudited"
    AND "SUPPRESSED" = "v_findings_suppressed"
    AND "POLICYVIOLATIONS_TOTAL" = "v_policy_violations_total"
    AND "POLICYVIOLATIONS_FAIL" = "v_policy_violations_fail"
    AND "POLICYVIOLATIONS_WARN" = "v_policy_violations_warn"
    AND "POLICYVIOLATIONS_INFO" = "v_policy_violations_info"
    AND "POLICYVIOLATIONS_AUDITED" = "v_policy_violations_audited"
    AND "POLICYVIOLATIONS_UNAUDITED" = "v_policy_violations_unaudited"
    AND "POLICYVIOLATIONS_LICENSE_TOTAL" = "v_policy_violations_license_total"
    AND "POLICYVIOLATIONS_LICENSE_AUDITED" = "v_policy_violations_license_audited"
    AND "POLICYVIOLATIONS_LICENSE_UNAUDITED" = "v_policy_violations_license_unaudited"
    AND "POLICYVIOLATIONS_OPERATIONAL_TOTAL" = "v_policy_violations_operational_total"
    AND "POLICYVIOLATIONS_OPERATIONAL_AUDITED" = "v_policy_violations_operational_audited"
    AND "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" = "v_policy_violations_operational_unaudited"
    AND "POLICYVIOLATIONS_SECURITY_TOTAL" = "v_policy_violations_security_total"
    AND "POLICYVIOLATIONS_SECURITY_AUDITED" = "v_policy_violations_security_audited"
    AND "POLICYVIOLATIONS_SECURITY_UNAUDITED" = "v_policy_violations_security_unaudited"
  ORDER BY "LAST_OCCURRENCE" DESC
  LIMIT 1
  INTO "v_existing_id";

  IF "v_existing_id" IS NOT NULL THEN
    UPDATE "PROJECTMETRICS" SET "LAST_OCCURRENCE" = NOW() WHERE "ID" = "v_existing_id";
  ELSE
    INSERT INTO "PROJECTMETRICS" ("PROJECT_ID",
                                  "COMPONENTS",
                                  "VULNERABLECOMPONENTS",
                                  "VULNERABILITIES",
                                  "CRITICAL",
                                  "HIGH",
                                  "MEDIUM",
                                  "LOW",
                                  "UNASSIGNED_SEVERITY",
                                  "RISKSCORE",
                                  "FINDINGS_TOTAL",
                                  "FINDINGS_AUDITED",
                                  "FINDINGS_UNAUDITED",
                                  "SUPPRESSED",
                                  "POLICYVIOLATIONS_TOTAL",
                                  "POLICYVIOLATIONS_FAIL",
                                  "POLICYVIOLATIONS_WARN",
                                  "POLICYVIOLATIONS_INFO",
                                  "POLICYVIOLATIONS_AUDITED",
                                  "POLICYVIOLATIONS_UNAUDITED",
                                  "POLICYVIOLATIONS_LICENSE_TOTAL",
                                  "POLICYVIOLATIONS_LICENSE_AUDITED",
                                  "POLICYVIOLATIONS_LICENSE_UNAUDITED",
                                  "POLICYVIOLATIONS_OPERATIONAL_TOTAL",
                                  "POLICYVIOLATIONS_OPERATIONAL_AUDITED",
                                  "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED",
                                  "POLICYVIOLATIONS_SECURITY_TOTAL",
                                  "POLICYVIOLATIONS_SECURITY_AUDITED",
                                  "POLICYVIOLATIONS_SECURITY_UNAUDITED",
                                  "FIRST_OCCURRENCE",
                                  "LAST_OCCURRENCE")
    VALUES ("v_project_id",
            "v_components",
            "v_vulnerable_components",
            "v_vulnerabilities",
            "v_critical",
            "v_high",
            "v_medium",
            "v_low",
            "v_unassigned",
            "v_risk_score",
            "v_findings_total",
            "v_findings_audited",
            "v_findings_unaudited",
            "v_findings_suppressed",
            "v_policy_violations_total",
            "v_policy_violations_fail",
            "v_policy_violations_warn",
            "v_policy_violations_info",
            "v_policy_violations_audited",
            "v_policy_violations_unaudited",
            "v_policy_violations_license_total",
            "v_policy_violations_license_audited",
            "v_policy_violations_license_unaudited",
            "v_policy_violations_operational_total",
            "v_policy_violations_operational_audited",
            "v_policy_violations_operational_unaudited",
            "v_policy_violations_security_total",
            "v_policy_violations_security_audited",
            "v_policy_violations_security_unaudited",
            NOW(),
            NOW());

    UPDATE "PROJECT" SET "LAST_RISKSCORE" = "v_risk_score" WHERE "ID" = "v_project_id";
  END IF;
end;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('procedure_update-project-metrics', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 28, '9:a7b35b9d37fa1deeb3044ace83dc9952', 'createProcedure path=procedures/procedure_update-project-metrics.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Changeset migration/changelog-procedures.xml::procedure_update-portfolio-metrics::nscuro@protonmail.com
SET SEARCH_PATH TO public, "$user","public";

CREATE OR REPLACE PROCEDURE "UPDATE_PORTFOLIO_METRICS"()
  LANGUAGE "plpgsql"
AS
$$
DECLARE
  "v_projects"                                INT; -- Total number of projects in the portfolio
  "v_vulnerable_projects"                     INT; -- Number of vulnerable projects in the portfolio
  "v_components"                              INT; -- Total number of components in the portfolio
  "v_vulnerable_components"                   INT; -- Number of vulnerable components in the portfolio
  "v_vulnerabilities"                         INT; -- Total number of vulnerabilities
  "v_critical"                                INT; -- Number of vulnerabilities with critical severity
  "v_high"                                    INT; -- Number of vulnerabilities with high severity
  "v_medium"                                  INT; -- Number of vulnerabilities with medium severity
  "v_low"                                     INT; -- Number of vulnerabilities with low severity
  "v_unassigned"                              INT; -- Number of vulnerabilities with unassigned severity
  "v_risk_score"                              NUMERIC; -- Inherited risk score
  "v_findings_total"                          INT; -- Total number of findings
  "v_findings_audited"                        INT; -- Number of audited findings
  "v_findings_unaudited"                      INT; -- Number of unaudited findings
  "v_findings_suppressed"                     INT; -- Number of suppressed findings
  "v_policy_violations_total"                 INT; -- Total number of policy violations
  "v_policy_violations_fail"                  INT; -- Number of policy violations with level fail
  "v_policy_violations_warn"                  INT; -- Number of policy violations with level warn
  "v_policy_violations_info"                  INT; -- Number of policy violations with level info
  "v_policy_violations_audited"               INT; -- Number of audited policy violations
  "v_policy_violations_unaudited"             INT; -- Number of unaudited policy violations
  "v_policy_violations_license_total"         INT; -- Total number of policy violations of type license
  "v_policy_violations_license_audited"       INT; -- Number of audited policy violations of type license
  "v_policy_violations_license_unaudited"     INT; -- Number of unaudited policy violations of type license
  "v_policy_violations_operational_total"     INT; -- Total number of policy violations of type operational
  "v_policy_violations_operational_audited"   INT; -- Number of audited policy violations of type operational
  "v_policy_violations_operational_unaudited" INT; -- Number of unaudited policy violations of type operational
  "v_policy_violations_security_total"        INT; -- Total number of policy violations of type security
  "v_policy_violations_security_audited"      INT; -- Number of audited policy violations of type security
  "v_policy_violations_security_unaudited"    INT; -- Number of unaudited policy violations of type security
  "v_existing_id"                             BIGINT; -- ID of the existing row that matches the data point calculated in this procedure
BEGIN
  -- Aggregate over all most recent DEPENDENCYMETRICS.
  -- NOTE: SUM returns NULL when no rows match the query, but COUNT returns 0.
  -- For nullable result columns, use COALESCE(..., 0) to have a default value.
  SELECT COUNT(*)::INT,
    COALESCE(SUM(CASE WHEN "VULNERABILITIES" > 0 THEN 1 ELSE 0 END)::INT, 0),
    COALESCE(SUM("COMPONENTS")::INT, 0),
    COALESCE(SUM("VULNERABLECOMPONENTS")::INT, 0),
    COALESCE(SUM("VULNERABILITIES")::INT, 0),
    COALESCE(SUM("CRITICAL")::INT, 0),
    COALESCE(SUM("HIGH")::INT, 0),
    COALESCE(SUM("MEDIUM")::INT, 0),
    COALESCE(SUM("LOW")::INT, 0),
    COALESCE(SUM("UNASSIGNED_SEVERITY")::INT, 0),
    COALESCE(SUM("FINDINGS_TOTAL")::INT, 0),
    COALESCE(SUM("FINDINGS_AUDITED")::INT, 0),
    COALESCE(SUM("FINDINGS_UNAUDITED")::INT, 0),
    COALESCE(SUM("SUPPRESSED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_FAIL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_WARN")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_INFO")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_LICENSE_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_OPERATIONAL_UNAUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_TOTAL")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_AUDITED")::INT, 0),
    COALESCE(SUM("POLICYVIOLATIONS_SECURITY_UNAUDITED")::INT, 0)
  FROM (SELECT DISTINCT ON ("PM"."PROJECT_ID") *
        FROM "PROJECTMETRICS" AS "PM"
               INNER JOIN "PROJECT" AS "P" ON "P"."ID" = "PM"."PROJECT_ID"
        WHERE "P"."ACTIVE" = TRUE  -- Only consider active projects
          OR "P"."ACTIVE" IS NULL -- ACTIVE is nullable, assume TRUE per default
        ORDER BY "PM"."PROJECT_ID", "PM"."LAST_OCCURRENCE" DESC) AS "LATEST_PROJECT_METRICS"
  INTO
    "v_projects",
    "v_vulnerable_projects",
    "v_components",
    "v_vulnerable_components",
    "v_vulnerabilities",
    "v_critical",
    "v_high",
    "v_medium",
    "v_low",
    "v_unassigned",
    "v_findings_total",
    "v_findings_audited",
    "v_findings_unaudited",
    "v_findings_suppressed",
    "v_policy_violations_total",
    "v_policy_violations_fail",
    "v_policy_violations_warn",
    "v_policy_violations_info",
    "v_policy_violations_audited",
    "v_policy_violations_unaudited",
    "v_policy_violations_license_total",
    "v_policy_violations_license_audited",
    "v_policy_violations_license_unaudited",
    "v_policy_violations_operational_total",
    "v_policy_violations_operational_audited",
    "v_policy_violations_operational_unaudited",
    "v_policy_violations_security_total",
    "v_policy_violations_security_audited",
    "v_policy_violations_security_unaudited";

  "v_risk_score" = "CALC_RISK_SCORE"("v_critical", "v_high", "v_medium", "v_low", "v_unassigned");

  SELECT "ID"
  FROM "PORTFOLIOMETRICS"
  WHERE "PROJECTS" = "v_projects"
    AND "VULNERABLEPROJECTS" = "v_vulnerable_projects"
    AND "COMPONENTS" = "v_components"
    AND "VULNERABLECOMPONENTS" = "v_vulnerable_components"
    AND "VULNERABILITIES" = "v_vulnerabilities"
    AND "CRITICAL" = "v_critical"
    AND "HIGH" = "v_high"
    AND "MEDIUM" = "v_medium"
    AND "LOW" = "v_low"
    AND "UNASSIGNED_SEVERITY" = "v_unassigned"
    AND "RISKSCORE" = "v_risk_score"
    AND "FINDINGS_TOTAL" = "v_findings_total"
    AND "FINDINGS_AUDITED" = "v_findings_audited"
    AND "FINDINGS_UNAUDITED" = "v_findings_unaudited"
    AND "SUPPRESSED" = "v_findings_suppressed"
    AND "POLICYVIOLATIONS_TOTAL" = "v_policy_violations_total"
    AND "POLICYVIOLATIONS_FAIL" = "v_policy_violations_fail"
    AND "POLICYVIOLATIONS_WARN" = "v_policy_violations_warn"
    AND "POLICYVIOLATIONS_INFO" = "v_policy_violations_info"
    AND "POLICYVIOLATIONS_AUDITED" = "v_policy_violations_audited"
    AND "POLICYVIOLATIONS_UNAUDITED" = "v_policy_violations_unaudited"
    AND "POLICYVIOLATIONS_LICENSE_TOTAL" = "v_policy_violations_license_total"
    AND "POLICYVIOLATIONS_LICENSE_AUDITED" = "v_policy_violations_license_audited"
    AND "POLICYVIOLATIONS_LICENSE_UNAUDITED" = "v_policy_violations_license_unaudited"
    AND "POLICYVIOLATIONS_OPERATIONAL_TOTAL" = "v_policy_violations_operational_total"
    AND "POLICYVIOLATIONS_OPERATIONAL_AUDITED" = "v_policy_violations_operational_audited"
    AND "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED" = "v_policy_violations_operational_unaudited"
    AND "POLICYVIOLATIONS_SECURITY_TOTAL" = "v_policy_violations_security_total"
    AND "POLICYVIOLATIONS_SECURITY_AUDITED" = "v_policy_violations_security_audited"
    AND "POLICYVIOLATIONS_SECURITY_UNAUDITED" = "v_policy_violations_security_unaudited"
  ORDER BY "LAST_OCCURRENCE" DESC
  LIMIT 1
  INTO "v_existing_id";

  IF "v_existing_id" IS NOT NULL THEN
    UPDATE "PORTFOLIOMETRICS" SET "LAST_OCCURRENCE" = NOW() WHERE "ID" = "v_existing_id";
  ELSE
    INSERT INTO "PORTFOLIOMETRICS" ("PROJECTS",
                                    "VULNERABLEPROJECTS",
                                    "COMPONENTS",
                                    "VULNERABLECOMPONENTS",
                                    "VULNERABILITIES",
                                    "CRITICAL",
                                    "HIGH",
                                    "MEDIUM",
                                    "LOW",
                                    "UNASSIGNED_SEVERITY",
                                    "RISKSCORE",
                                    "FINDINGS_TOTAL",
                                    "FINDINGS_AUDITED",
                                    "FINDINGS_UNAUDITED",
                                    "SUPPRESSED",
                                    "POLICYVIOLATIONS_TOTAL",
                                    "POLICYVIOLATIONS_FAIL",
                                    "POLICYVIOLATIONS_WARN",
                                    "POLICYVIOLATIONS_INFO",
                                    "POLICYVIOLATIONS_AUDITED",
                                    "POLICYVIOLATIONS_UNAUDITED",
                                    "POLICYVIOLATIONS_LICENSE_TOTAL",
                                    "POLICYVIOLATIONS_LICENSE_AUDITED",
                                    "POLICYVIOLATIONS_LICENSE_UNAUDITED",
                                    "POLICYVIOLATIONS_OPERATIONAL_TOTAL",
                                    "POLICYVIOLATIONS_OPERATIONAL_AUDITED",
                                    "POLICYVIOLATIONS_OPERATIONAL_UNAUDITED",
                                    "POLICYVIOLATIONS_SECURITY_TOTAL",
                                    "POLICYVIOLATIONS_SECURITY_AUDITED",
                                    "POLICYVIOLATIONS_SECURITY_UNAUDITED",
                                    "FIRST_OCCURRENCE",
                                    "LAST_OCCURRENCE")
    VALUES ("v_projects",
            "v_vulnerable_projects",
            "v_components",
            "v_vulnerable_components",
            "v_vulnerabilities",
            "v_critical",
            "v_high",
            "v_medium",
            "v_low",
            "v_unassigned",
            "v_risk_score",
            "v_findings_total",
            "v_findings_audited",
            "v_findings_unaudited",
            "v_findings_suppressed",
            "v_policy_violations_total",
            "v_policy_violations_fail",
            "v_policy_violations_warn",
            "v_policy_violations_info",
            "v_policy_violations_audited",
            "v_policy_violations_unaudited",
            "v_policy_violations_license_total",
            "v_policy_violations_license_audited",
            "v_policy_violations_license_unaudited",
            "v_policy_violations_operational_total",
            "v_policy_violations_operational_audited",
            "v_policy_violations_operational_unaudited",
            "v_policy_violations_security_total",
            "v_policy_violations_security_audited",
            "v_policy_violations_security_unaudited",
            NOW(),
            NOW());
  END IF;
END;
$$;

INSERT INTO databasechangelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('procedure_update-portfolio-metrics', 'nscuro@protonmail.com', 'migration/changelog-procedures.xml', NOW(), 29, '9:1de7336fd9c6d13ceaccf6a498492eed', 'createProcedure path=procedures/procedure_update-portfolio-metrics.sql', '', 'EXECUTED', NULL, NULL, '4.27.0', '4397786765');

-- Release Database Lock
SET SEARCH_PATH TO public, "$user","public";

UPDATE databasechangeloglock SET LOCKED = FALSE, LOCKEDBY = NULL, LOCKGRANTED = NULL WHERE ID = 1;

SET SEARCH_PATH TO public, "$user","public";

INSERT INTO "CONFIGPROPERTY" ("GROUPNAME", "PROPERTYNAME", "PROPERTYVALUE", "PROPERTYTYPE", "DESCRIPTION")
VALUES ('internal', 'cluster.id', '53b94f78-6e2f-4015-961a-0965ff1807a9', 'STRING', NULL);